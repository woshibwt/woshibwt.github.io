{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/catch.jpg","path":"images/catch.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/header.jpg","path":"images/header.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/soccer-16x16-next.png","path":"images/soccer-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/soccer-32x32-next.png","path":"images/soccer-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clipboard-use.js","path":"js/src/clipboard-use.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clipboard.min.js","path":"js/src/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"038ed680d128f07c871c2f5b0a51e89bfc5d51be","modified":1590032598721},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1589558596881},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1589558596881},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1589558596882},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1589558596881},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1589558596882},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1589558596882},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1589558596882},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1589558596883},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1589558596883},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1589558596882},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1589558596884},{"_id":"themes/next/README.md","hash":"efcdc4b0ca791c3fc64afa28c8721e137f2d11ea","modified":1589558596883},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1589558596884},{"_id":"themes/next/_config.yml","hash":"d6db941a1af02b620a90f96c958023e378391436","modified":1592126653543},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1589558596902},{"_id":"themes/next/README.cn.md","hash":"b878b73f3fcdef47849453c94420871903d487b3","modified":1589558596883},{"_id":"source/_drafts/b.md","hash":"d719cd5f697667678b472b44d2a4cad010c404a2","modified":1589559810661},{"_id":"source/_drafts/catch.jpg","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1589934205136},{"_id":"source/_drafts/考研失败之后.md","hash":"66e63c76b7697ad04250637b350e08971cf5f6c1","modified":1589556285242},{"_id":"source/_drafts/hexo-常用命令小记.md","hash":"c772d1a1336734af6bb8e136737c2d5f6724462c","modified":1589937342382},{"_id":"source/_drafts/奇异值分解.md","hash":"cff4641f8d3d5b63142d00c9336c0d760f7ee5f9","modified":1590926489273},{"_id":"source/_posts/CS224N笔记-一-word-vector.md","hash":"605458746768651ad906c3cce1b9c2d36ddf1905","modified":1591867396743},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs.md","hash":"1619a956259dc3879baab931b2b156e5bcf42f12","modified":1593685194198},{"_id":"source/_posts/CS224N笔记-五-Dependency-Parsing.md","hash":"fd57e8d86a81848439288422daa6c5cfaaa4e4e7","modified":1591882760548},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN.md","hash":"13eb40d6d9334c1807c0402f54488ba644fd6109","modified":1592049476404},{"_id":"source/_posts/cs224N-CS224N笔记-二-Glove.md","hash":"f5f214fdee803b630bf2c103ec87d414fecb2a56","modified":1591867392353},{"_id":"source/_posts/CS224N笔记-（三，四）-Word-Window-Classification-Nerual-Networks-Matrix-Calculus.md","hash":"6ea6d885f8909a108f24fa571aeaffab39257068","modified":1591867390496},{"_id":"source/_posts/基于噪声不一致性的科学图像篡改检测——论文简述.md","hash":"11b209b97029c7ff3efdeae5b950adacf9e51a44","modified":1591867398454},{"_id":"source/categories/index.md","hash":"5ce11a7efee3bb81b72af4aebb2ce60b565b368c","modified":1589985414033},{"_id":"source/about/index.md","hash":"398fad3fa0695a33d9795e1630b3eb273c3643bc","modified":1590032718079},{"_id":"source/tags/index.md","hash":"a8b6dd97776fcd6cccec596f24199e74b94935e0","modified":1589983965154},{"_id":"source/_posts/hexo-常用命令小记.md","hash":"f379ddc74af48dc3e14a74fc23b99952a470d679","modified":1590031657454},{"_id":"source/_posts/敏捷生活宣言.md","hash":"a5ade91c0840df918d2ce4f150f378966a1aeb01","modified":1590238129554},{"_id":"source/images/catch.jpg","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1589934205136},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1589558596881},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1589558596881},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1589558596881},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1589558596882},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1589558596903},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1589558596903},{"_id":"themes/next/layout/_layout.swig","hash":"6a0b7c0282e67fbdea8425fed8df08e6159b8fc6","modified":1589995573690},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1589558596901},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1589558596901},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1589558596902},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1589558596902},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1589558596971},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1589558596902},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1589558596902},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1589558596902},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1589558596971},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1589558596971},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1589558596884},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1589558596885},{"_id":"source/_drafts/hexo-常用命令小记/catch.PNG","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1589934205136},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1589558596886},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1589558596884},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1589558596886},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1589558596886},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1589558596886},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1589558596887},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1589558596887},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1589558596887},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1589558596887},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1589558596888},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1589558596887},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1589558596888},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1589558596887},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1589558596888},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/exploding_gradient.png","hash":"0963d74f32ed3239778a3b5600c32330dfcbcd91","modified":1593659248138},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping.png","hash":"6da5ec3f4e3b8b355a687f959e93c648035f832f","modified":1593659767136},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/chainrule.png","hash":"97c1347bf8f9d808f2c510e9d280d2355957f0bb","modified":1593327441951},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/language_task.png","hash":"2850420c116a618d64a5f31bb278b0e52478b0ef","modified":1593657066488},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/why_vanishing_gradient.png","hash":"0d78e3deed17ba968c5b6cb143794a25cdb0f91b","modified":1593656355741},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/4-gram-model.png","hash":"97122beef17c518ed58bf8ce1068d30be7c47929","modified":1592035348264},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/BackPropagation.png","hash":"c7730b5137da58e697f21c79a3bf50a0d2857502","modified":1592047353604},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/Ner.png","hash":"ba187ab750c58d7a46dc0ec355a2e887885f857e","modified":1592037506465},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/perplexity-困惑度.png","hash":"a9e0c4fde60e576b2a69c25f87e78ba2083f38ce","modified":1592048543358},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/RNN1.png","hash":"8b25f99897adaf70985862e15023bf30ada2072e","modified":1592040077273},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/sentence.png","hash":"4fd40c29174d3b917cd62a12f09a87df4aabd8f4","modified":1592037640301},{"_id":"source/_posts/hexo-常用命令小记/catch.jpg","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1589934205136},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/storage_problems.png","hash":"39a7a2654131288ca4b69097dec1e762e4c21151","modified":1592037102300},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596925},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM_2.png","hash":"c20fe214f709419f6a59a0a7041b617abc332e28","modified":1593677203955},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping_pic.png","hash":"39656e8c181dae4dad2d020c0a9eece34617f03a","modified":1593660097878},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_gradient_intuition.PNG","hash":"73cee22398483a729f027cb01b33da69ff9a5aef","modified":1592135543304},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_problem.PNG","hash":"08d55a710155987ae9c30e70cfd436669d133e34","modified":1593657449862},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/caluclate_gradient.png","hash":"4f06ea35cc8e476c39a4246b1c294ae86971ca51","modified":1592048011177},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/network.png","hash":"6e28ad4deaea3aa009812e243c34405453b72814","modified":1592038752767},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/loss.png","hash":"f45afbf55410683af1908731dd62d55406ceb066","modified":1592043837960},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1589558596903},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1589558596904},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1589558596904},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1589558596904},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1589558596904},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1589558596904},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1589558596905},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1589558596905},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1589558596905},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1589558596925},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1589558596888},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1589558596888},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1589558596925},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1589558596926},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1589558596926},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1589558596925},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1589558596926},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1589558596927},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1589558596926},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1589558596927},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1589558596927},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1589558596927},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1589558596927},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1589558596928},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1589558596928},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1589558596928},{"_id":"themes/next/source/images/header.jpg","hash":"f1d2a5782dd5a0d1d11b392454698a5103079a2b","modified":1589993624240},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1589558596928},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1589558596928},{"_id":"themes/next/source/images/soccer-16x16-next.png","hash":"88762f36e70f9eb687b0336133b09f043f5141d1","modified":1589990416752},{"_id":"themes/next/source/images/soccer-32x32-next.png","hash":"22d3897eaddd94cca36e0f546eb1a38b1aedbdd1","modified":1589990422983},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"0e3b0b32a1eb9fd4259cd5c5c38714520150524f","modified":1589989527441},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1589558596928},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1589558596928},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"85fa62d143587fd6b55242a03860fbfc06acaaf1","modified":1589991638136},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"05f368ab139016e25893ae9e80a2ce2d48c5416b","modified":1589994574272},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1589558596890},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1589558596889},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1589558596889},{"_id":"themes/next/layout/_macro/post.swig","hash":"327f5843dcdf22234034a5b63a51a935c819b32f","modified":1589991874116},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1589558596890},{"_id":"themes/next/layout/_partials/footer.swig","hash":"393e4973b958f497978b838daaea7019787ae7b5","modified":1589990109920},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"2d3816c20c2ba525603b8e549ce4ff6c545ac64f","modified":1590034610710},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1589558596891},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1589558596892},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1589558596892},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1589558596891},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1589558596891},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1589558596893},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1589558596893},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1589558596894},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1589558596898},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1589558596898},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1589558596898},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1589558596899},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1589558596899},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1589558596899},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1589558596899},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/GRU.png","hash":"0f3ec4a318f5f209c635eb628a9c64a838b40777","modified":1593685162622},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM.png","hash":"569b69dfbf1a76ec815b228e30a30d46f261e880","modified":1593674889401},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/SparsityProblems.png","hash":"e2e1f5886a05c96265ca29d71a9af2117ef50fff","modified":1592036967985},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596919},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596919},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596919},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596924},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596925},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596894},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1589558596894},{"_id":"themes/next/source/js/src/clipboard-use.js","hash":"b11b9121c370cefcd94ee95c612294198c10b84f","modified":1589995424748},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1589558596929},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1589558596929},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1589558596929},{"_id":"themes/next/source/js/src/clipboard.min.js","hash":"76fd19c15b1d0a2d7afc7b66ca5f80c9061aabe2","modified":1589995316403},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1589558596929},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1589558596930},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1589558596930},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1589558596931},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1589558596930},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1589558596931},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1589558596919},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1589558596919},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1589558596931},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"e42b8558b4dc85f3e83deb8448b8092c6f2a180a","modified":1589995510716},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1589558596919},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1589558596935},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1589558596924},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1589558596924},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"867750ce89e396af337dcc75432ca040e9c45adb","modified":1589993955356},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1589558596938},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1589558596938},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1589558596938},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1589558596957},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1589558596943},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1589558596938},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1589558596943},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1589558596944},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1589558596944},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1589558596943},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1589558596944},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1589558596945},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1589558596943},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1589558596945},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1589558596958},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1589558596958},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1589558596958},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1589558596958},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1589558596958},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1589558596959},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1589558596959},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1589558596959},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1589558596960},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1589558596960},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1589558596960},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1589558596960},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1589558596960},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1589558596962},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1589558596962},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1589558596962},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1589558596961},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1589558596962},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1589558596963},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1589558596963},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1589558596963},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1589558596967},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1589558596968},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1589558596970},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1589558596970},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1589558596971},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1589558596891},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1589558596891},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1589558596892},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1589558596892},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1589558596892},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1589558596892},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1589558596893},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1589558596893},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1589558596894},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1589558596893},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1589558596893},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1589558596894},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1589558596895},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1589558596896},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1589558596896},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1589558596898},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1589558596897},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1589558596898},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1589558596901},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1589558596898},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1589558596900},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1589558596901},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1589558596901},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/RNN2.png","hash":"09cf41b21b703889f8ccd29390e98b518c4e65b6","modified":1592040363321},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1589558596930},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a82bbe643f8c89a4fb123b538d164e5e4b5f2719","modified":1589991360186},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1589558596957},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1589558596931},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1589558596921},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1589558596921},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1589558596923},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1589558596923},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"10eb589ee7a9416234e2899f0da49d5cbe71232b","modified":1589994055714},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1589558596920},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1589558596923},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1589558596924},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1589558596924},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1589558596906},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1589558596906},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1589558596905},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1589558596906},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1589558596906},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1589558596913},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1589558596922},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1589558596922},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1589558596922},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1589558596922},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1589558596922},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1589558596917},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1589558596933},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1589558596935},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1589558596917},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1589558596918},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1589558596934},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1589558596917},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1589558596918},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1589558596918},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1589558596918},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1589558596939},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1589558596939},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1589558596939},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1589558596939},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1589558596940},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1589558596940},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1589558596941},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1589558596942},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1589558596942},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1589558596944},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1589558596944},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1589558596946},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1589558596946},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1589558596967},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1589558596967},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1589558596900},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1589558596900},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1589558596934},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1589558596956},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1589558596956},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1589558596969},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1589558596921},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1589558596922},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1589558596906},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1589558596907},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1589558596908},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1589558596910},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"d5ce2f3c7b3ca46d37f51189f992bedbe34d0eba","modified":1589991715050},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1589558596909},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1589558596910},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1589558596910},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1589558596910},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1589558596912},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1589558596911},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1589558596912},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"9bcfd2593610992ed69448ab13081366ed3eb3fa","modified":1589991937231},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1589558596912},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1589558596912},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e100f1a1ab5def8c869872c79b24ccf979609ccc","modified":1589993371066},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1589558596913},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1589558596913},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1589558596913},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1589558596913},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1589558596913},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1589558596915},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1589558596915},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1589558596915},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1589558596916},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1589558596915},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1589558596914},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1589558596916},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1589558596916},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1589558596917},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1589558596915},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1589558596916},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1589558596916},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1589558596923},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1589558596917},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1589558596916},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1589558596932},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1589558596932},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1589558596932},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1589558596933},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1589558596933},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1589558596940},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1589558596941},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1589558596941},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1589558596941},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1589558596940},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1589558596941},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1589558596948},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1589558596945},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1589558596955},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1589558596950},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1589558596938},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1589558596953},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1589558596966},{"_id":"public/atom.xml","hash":"0544266a5667fdf716ac62cf8faf2464ea0919bd","modified":1593685283919},{"_id":"public/sitemap.xml","hash":"892d41b722d4ef6dd74d13d086927a5a87994674","modified":1593685283919},{"_id":"public/search.xml","hash":"d6309d54d42b0c676e90a427c64c93a7ea8a6060","modified":1593685283919},{"_id":"public/categories/index.html","hash":"8b2a33c01e12d9625a3af879af347943211c2917","modified":1593685283919},{"_id":"public/about/index.html","hash":"37e453c9a4f5402754e23ecae4cc4e79cb7e26c8","modified":1593685283919},{"_id":"public/tags/index.html","hash":"89d34d54de8f46da9d98d7d97346a4b550281df1","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/index.html","hash":"f525ab150d1c927458aa2d447c6b696e5ae6a750","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/index.html","hash":"7c0cb8df0c12042854c2f2ee165921fb8230172f","modified":1593685283919},{"_id":"public/2020/06/11/CS224N笔记-五-Dependency-Parsing/index.html","hash":"bb2e4087dd396e95d91258e8476338c8b5fe17e0","modified":1593685283919},{"_id":"public/2020/06/04/CS224N笔记-（三，四）-Word-Window-Classification-Nerual-Networks-Matrix-Calculus/index.html","hash":"8209d1d8e0595db684574f4da77e8544d1aa6d91","modified":1593685283919},{"_id":"public/2020/06/02/hexo-常用命令小记/index.html","hash":"6e19e0ba625a42e6c8aeef3e68d3ab7405732731","modified":1593685283919},{"_id":"public/2020/05/28/cs224N-CS224N笔记-二-Glove/index.html","hash":"ca049efe3c7ddb88fcf251e3ec6f6f323c9812ed","modified":1593685283919},{"_id":"public/2020/05/25/CS224N笔记-一-word-vector/index.html","hash":"50913a09ea55f6727722ff4828563ba0ab763b0f","modified":1593685283919},{"_id":"public/2020/05/22/基于噪声不一致性的科学图像篡改检测——论文简述/index.html","hash":"41705f6ed8cc7e78e094f3ce904f5e73d2d08ac2","modified":1593685283919},{"_id":"public/2020/05/22/敏捷生活宣言/index.html","hash":"460e79fe003b117a4d2eaf4d0ecfd65b307ac482","modified":1593685283919},{"_id":"public/archives/index.html","hash":"8cba229d570d5469ab9e24db4fb416ce14c0b517","modified":1593685283919},{"_id":"public/archives/2020/index.html","hash":"58516ccab44a0e8074efa1e314132f6c04a5c7b0","modified":1593685283919},{"_id":"public/archives/2020/05/index.html","hash":"99a6886ef1bee3a17d30a12cd568500f52a100a5","modified":1593685283919},{"_id":"public/archives/2020/06/index.html","hash":"7809e86a51e03b83c516abd3dc99beb33908d1ea","modified":1593685283919},{"_id":"public/categories/web前端/index.html","hash":"17f78a000cfea0f72c104bd3de87917655cb217d","modified":1593685283919},{"_id":"public/categories/CS224N/index.html","hash":"d14fbbc2b68206ffbf5c6c10120de3002c5a5263","modified":1593685283919},{"_id":"public/index.html","hash":"72417d4efcbb0c5df73d2ef962a5516fd1a0ff7a","modified":1593685283919},{"_id":"public/categories/篡改检测/index.html","hash":"26aae0b082ffa42ed283aa8282ebc81e1938ce6e","modified":1593685283919},{"_id":"public/categories/生活方式/index.html","hash":"a2da541ea6043058f4294475011548ea99873adb","modified":1593685283919},{"_id":"public/tags/博客/index.html","hash":"2bed89cc61db0c3529192f6b67b584edd3a6484b","modified":1593685283919},{"_id":"public/tags/hexo/index.html","hash":"576539f397fa2cd6af19a62522870474ab625a36","modified":1593685283919},{"_id":"public/tags/nlp-机器学习/index.html","hash":"278589f0d228492e8ea7d7ec4e18010b691a4451","modified":1593685283919},{"_id":"public/tags/CS224N/index.html","hash":"d4fe0da71523207af0d1ef9db31d3f749b14fafe","modified":1593685283919},{"_id":"public/tags/科学图像篡改检测/index.html","hash":"f2378fb4d6c1a65de92b80958af8169e721d4f96","modified":1593685283919},{"_id":"public/tags/论文简述/index.html","hash":"8b16d4e7c66bb43a103891bd4027bbe43823d48a","modified":1593685283919},{"_id":"public/tags/自我提升/index.html","hash":"50643b2525f60ab0fa5299fc50a11a5aa16ab90a","modified":1593685283919},{"_id":"public/tags/敏捷生活/index.html","hash":"d0c20a7c1ea767d52f0796dd4dcda8806d33113a","modified":1593685283919},{"_id":"public/CNAME","hash":"038ed680d128f07c871c2f5b0a51e89bfc5d51be","modified":1593685283919},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1593685283919},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1593685283919},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1593685283919},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1593685283919},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1593685283919},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1593685283919},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1593685283919},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1593685283919},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1593685283919},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1593685283919},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1593685283919},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1593685283919},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1593685283919},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1593685283919},{"_id":"public/images/header.jpg","hash":"f1d2a5782dd5a0d1d11b392454698a5103079a2b","modified":1593685283919},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1593685283919},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1593685283919},{"_id":"public/images/soccer-16x16-next.png","hash":"88762f36e70f9eb687b0336133b09f043f5141d1","modified":1593685283919},{"_id":"public/images/soccer-32x32-next.png","hash":"22d3897eaddd94cca36e0f546eb1a38b1aedbdd1","modified":1593685283919},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1593685283919},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1593685283919},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1593685283919},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1593685283919},{"_id":"public/images/catch.jpg","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1593685283919},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1593685283919},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1593685283919},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1593685283919},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1593685283919},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1593685283919},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1593685283919},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1593685283919},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1593685283919},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1593685283919},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1593685283919},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1593685283919},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1593685283919},{"_id":"public/2020/06/02/hexo-常用命令小记/catch.PNG","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/exploding_gradient.png","hash":"0963d74f32ed3239778a3b5600c32330dfcbcd91","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping.png","hash":"6da5ec3f4e3b8b355a687f959e93c648035f832f","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/language_task.png","hash":"2850420c116a618d64a5f31bb278b0e52478b0ef","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/4-gram-model.png","hash":"97122beef17c518ed58bf8ce1068d30be7c47929","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/RNN1.png","hash":"8b25f99897adaf70985862e15023bf30ada2072e","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/perplexity-困惑度.png","hash":"a9e0c4fde60e576b2a69c25f87e78ba2083f38ce","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/sentence.png","hash":"4fd40c29174d3b917cd62a12f09a87df4aabd8f4","modified":1593685283919},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1593685283919},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1593685283919},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1593685283919},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1593685283919},{"_id":"public/js/src/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1593685283919},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1593685283919},{"_id":"public/js/src/clipboard-use.js","hash":"64bbc6c15ad3aecb743c21b8ba665673aa26ac3b","modified":1593685283919},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1593685283919},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1593685283919},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1593685283919},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1593685283919},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1593685283919},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1593685283919},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1593685283919},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1593685283919},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1593685283919},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1593685283919},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1593685283919},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1593685283919},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1593685283919},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1593685283919},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1593685283919},{"_id":"public/lib/fastclick/README.html","hash":"7caacb648dadb33d60f8eb515b0c9f5e7422831f","modified":1593685283919},{"_id":"public/lib/jquery_lazyload/README.html","hash":"fd960c31c8cfe7596f3064aef5a0551cda49eab5","modified":1593685283919},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"d93ee404d9fdf816d07f77c002ba43a716760350","modified":1593685283919},{"_id":"public/css/main.css","hash":"3718d5481bf1020f8652301714b3582776d145d3","modified":1593685283919},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1593685283919},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1593685283919},{"_id":"public/2020/06/02/hexo-常用命令小记/catch.jpg","hash":"a3672eb4ebe227102d998dce263b27718b2a20ec","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM_2.png","hash":"c20fe214f709419f6a59a0a7041b617abc332e28","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/chainrule.png","hash":"97c1347bf8f9d808f2c510e9d280d2355957f0bb","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping_pic.png","hash":"39656e8c181dae4dad2d020c0a9eece34617f03a","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_gradient_intuition.PNG","hash":"73cee22398483a729f027cb01b33da69ff9a5aef","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_problem.PNG","hash":"08d55a710155987ae9c30e70cfd436669d133e34","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/Ner.png","hash":"ba187ab750c58d7a46dc0ec355a2e887885f857e","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/BackPropagation.png","hash":"c7730b5137da58e697f21c79a3bf50a0d2857502","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/network.png","hash":"6e28ad4deaea3aa009812e243c34405453b72814","modified":1593685283919},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1593685283919},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1593685283919},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1593685283919},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1593685283919},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1593685283919},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1593685283919},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1593685283919},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1593685283919},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1593685283919},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1593685283919},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1593685283919},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1593685283919},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1593685283919},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1593685283919},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1593685283919},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1593685283919},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1593685283919},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1593685283919},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1593685283919},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1593685283919},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1593685283919},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1593685283919},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1593685283919},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1593685283919},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1593685283919},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1593685283919},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1593685283919},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/RNN2.png","hash":"09cf41b21b703889f8ccd29390e98b518c4e65b6","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/why_vanishing_gradient.png","hash":"0d78e3deed17ba968c5b6cb143794a25cdb0f91b","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/storage_problems.png","hash":"39a7a2654131288ca4b69097dec1e762e4c21151","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM.png","hash":"569b69dfbf1a76ec815b228e30a30d46f261e880","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/caluclate_gradient.png","hash":"4f06ea35cc8e476c39a4246b1c294ae86971ca51","modified":1593685283919},{"_id":"public/2020/06/14/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/GRU.png","hash":"0f3ec4a318f5f209c635eb628a9c64a838b40777","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/SparsityProblems.png","hash":"e2e1f5886a05c96265ca29d71a9af2117ef50fff","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1593685283919},{"_id":"public/2020/06/12/CS224N笔记-六-Language-Modeling-And-RNN/loss.png","hash":"f45afbf55410683af1908731dd62d55406ceb066","modified":1593685283919},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1593685283919}],"Category":[{"name":"web前端","_id":"ckc4n2jr50007iwvz19r0bay6"},{"name":"线性代数","_id":"ckc4n2jra000ciwvzga0l9dix"},{"name":"CS224N","_id":"ckc4n2jrd000hiwvz7as69jo6"},{"name":"篡改检测","_id":"ckc4n2jrq0019iwvzb930ce2q"},{"name":"生活方式","_id":"ckc4n2jrr001eiwvz297pd0br"}],"Data":[],"Page":[{"title":"categories","date":"2020-05-20T14:34:48.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-05-20 22:34:48\ntype: \"categories\"\n---\n","updated":"2020-05-20T14:36:54.033Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckc4n2jr00001iwvz59ieh87z","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"关于我","tags":["自我成长"],"type":"about","layout":"about","date":"2020-05-20T14:27:04.000Z","_content":"大家好，这是我的博客。  \n作为一个菜鸟程序员，希望能够与这个博客一起成长，提高技术水平。我会将自己的一些学习和生活的点滴记录在这里。  \n目前我scu本科软工四年级在读，即将毕业前往fdu读研，一路走来有许多运气，但是我深刻意识到只有实力才是最硬的，我会与诸君一起努力不断精进技术。  \n谢谢！\n","source":"about/index.md","raw":"---\ntitle: \"关于我\"\ntags: \n- 自我成长\ntype: about\nlayout: \"about\"\ndate: 2020-05-20 22:27:04\n---\n大家好，这是我的博客。  \n作为一个菜鸟程序员，希望能够与这个博客一起成长，提高技术水平。我会将自己的一些学习和生活的点滴记录在这里。  \n目前我scu本科软工四年级在读，即将毕业前往fdu读研，一路走来有许多运气，但是我深刻意识到只有实力才是最硬的，我会与诸君一起努力不断精进技术。  \n谢谢！\n","updated":"2020-05-21T03:45:18.079Z","path":"about/index.html","comments":1,"_id":"ckc4n2jr20003iwvzawrh05nv","content":"<p>大家好，这是我的博客。<br>作为一个菜鸟程序员，希望能够与这个博客一起成长，提高技术水平。我会将自己的一些学习和生活的点滴记录在这里。<br>目前我scu本科软工四年级在读，即将毕业前往fdu读研，一路走来有许多运气，但是我深刻意识到只有实力才是最硬的，我会与诸君一起努力不断精进技术。<br>谢谢！</p>\n","site":{"data":{}},"length":139,"excerpt":"","more":"<p>大家好，这是我的博客。<br>作为一个菜鸟程序员，希望能够与这个博客一起成长，提高技术水平。我会将自己的一些学习和生活的点滴记录在这里。<br>目前我scu本科软工四年级在读，即将毕业前往fdu读研，一路走来有许多运气，但是我深刻意识到只有实力才是最硬的，我会与诸君一起努力不断精进技术。<br>谢谢！</p>\n"},{"title":"tags","type":"tags","layout":"tags","date":"2020-05-20T14:02:27.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: \"tags\"\ntype: tags\nlayout: \"tags\"\ndate: 2020-05-20 22:02:27\n---\n","updated":"2020-05-20T14:12:45.154Z","path":"tags/index.html","comments":1,"_id":"ckc4n2jr30005iwvz673rerqo","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"b","_content":"","source":"_drafts/b.md","raw":"---\ntitle: b\ntags:\n---\n","slug":"b","published":0,"date":"2020-06-02T04:11:51.759Z","updated":"2020-05-15T16:23:30.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jqv0000iwvzcbw60zxk","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"考研失败之后","_content":"","source":"_drafts/考研失败之后.md","raw":"---\ntitle: 考研失败之后\ntags:\n---\n","slug":"考研失败之后","published":0,"date":"2020-06-02T04:11:51.799Z","updated":"2020-05-15T15:24:45.242Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr10002iwvz9miih7tc","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"hexo 常用命令小记","_content":"# hexo常用命令小记\n&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。\n\n&emsp;\n\n## 新建一篇博客文章\n&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用`hexo new`命令来创建新文章。  \n`hexo new \"hexo常用命令小记\" #新建文章`  \n此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！\n\n&emsp;\n\n## 给文章添加分类与标签\n&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性\n```\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\n```\n&emsp;\n\n## 启动本地服务器，本地测试\n`hexo s`  \n在本地`http://localhost:4000`上可以预览文章  \n如图所示：  \n\n![](catch.jpg)\n\n&emsp;\n \n## 正式发布新建的博客文章 \n&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:  \n`hexo generate # 生成更改`  \n`hexo deploy   # 将生成的更改部署到github上`  \n可以在gitpage上看到自己的这篇博客啦！\n\n","source":"_drafts/hexo-常用命令小记.md","raw":"---\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\n---\n# hexo常用命令小记\n&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。\n\n&emsp;\n\n## 新建一篇博客文章\n&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用`hexo new`命令来创建新文章。  \n`hexo new \"hexo常用命令小记\" #新建文章`  \n此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！\n\n&emsp;\n\n## 给文章添加分类与标签\n&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性\n```\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\n```\n&emsp;\n\n## 启动本地服务器，本地测试\n`hexo s`  \n在本地`http://localhost:4000`上可以预览文章  \n如图所示：  \n\n![](catch.jpg)\n\n&emsp;\n \n## 正式发布新建的博客文章 \n&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:  \n`hexo generate # 生成更改`  \n`hexo deploy   # 将生成的更改部署到github上`  \n可以在gitpage上看到自己的这篇博客啦！\n\n","slug":"hexo-常用命令小记","published":0,"date":"2020-06-02T04:11:51.784Z","updated":"2020-05-20T01:15:42.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr30004iwvzfrpb1vp2","content":"<h1 id=\"hexo常用命令小记\"><a href=\"#hexo常用命令小记\" class=\"headerlink\" title=\"hexo常用命令小记\"></a>hexo常用命令小记</h1><p>&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。</p>\n<p>&emsp;</p>\n<h2 id=\"新建一篇博客文章\"><a href=\"#新建一篇博客文章\" class=\"headerlink\" title=\"新建一篇博客文章\"></a>新建一篇博客文章</h2><p>&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用<code>hexo new</code>命令来创建新文章。<br><code>hexo new &quot;hexo常用命令小记&quot; #新建文章</code><br>此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！</p>\n<p>&emsp;</p>\n<h2 id=\"给文章添加分类与标签\"><a href=\"#给文章添加分类与标签\" class=\"headerlink\" title=\"给文章添加分类与标签\"></a>给文章添加分类与标签</h2><p>&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo 常用命令小记</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 博客</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">categories: web前端</span><br></pre></td></tr></table></figure><br>&emsp;</p>\n<h2 id=\"启动本地服务器，本地测试\"><a href=\"#启动本地服务器，本地测试\" class=\"headerlink\" title=\"启动本地服务器，本地测试\"></a>启动本地服务器，本地测试</h2><p><code>hexo s</code><br>在本地<code>http://localhost:4000</code>上可以预览文章<br>如图所示：  </p>\n<p><img src=\"/.io//catch.jpg\" alt></p>\n<p>&emsp;</p>\n<h2 id=\"正式发布新建的博客文章\"><a href=\"#正式发布新建的博客文章\" class=\"headerlink\" title=\"正式发布新建的博客文章\"></a>正式发布新建的博客文章</h2><p>&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:<br><code>hexo generate # 生成更改</code><br><code>hexo deploy   # 将生成的更改部署到github上</code><br>可以在gitpage上看到自己的这篇博客啦！</p>\n","site":{"data":{}},"length":610,"excerpt":"","more":"<h1 id=\"hexo常用命令小记\"><a href=\"#hexo常用命令小记\" class=\"headerlink\" title=\"hexo常用命令小记\"></a>hexo常用命令小记</h1><p>&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。</p>\n<p>&emsp;</p>\n<h2 id=\"新建一篇博客文章\"><a href=\"#新建一篇博客文章\" class=\"headerlink\" title=\"新建一篇博客文章\"></a>新建一篇博客文章</h2><p>&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用<code>hexo new</code>命令来创建新文章。<br><code>hexo new &quot;hexo常用命令小记&quot; #新建文章</code><br>此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！</p>\n<p>&emsp;</p>\n<h2 id=\"给文章添加分类与标签\"><a href=\"#给文章添加分类与标签\" class=\"headerlink\" title=\"给文章添加分类与标签\"></a>给文章添加分类与标签</h2><p>&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo 常用命令小记</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 博客</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">categories: web前端</span><br></pre></td></tr></table></figure><br>&emsp;</p>\n<h2 id=\"启动本地服务器，本地测试\"><a href=\"#启动本地服务器，本地测试\" class=\"headerlink\" title=\"启动本地服务器，本地测试\"></a>启动本地服务器，本地测试</h2><p><code>hexo s</code><br>在本地<code>http://localhost:4000</code>上可以预览文章<br>如图所示：  </p>\n<p><img src=\"/.io//catch.jpg\" alt></p>\n<p>&emsp;</p>\n<h2 id=\"正式发布新建的博客文章\"><a href=\"#正式发布新建的博客文章\" class=\"headerlink\" title=\"正式发布新建的博客文章\"></a>正式发布新建的博客文章</h2><p>&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:<br><code>hexo generate # 生成更改</code><br><code>hexo deploy   # 将生成的更改部署到github上</code><br>可以在gitpage上看到自己的这篇博客啦！</p>\n"},{"title":"奇异值分解","date":"2020-05-31T09:27:49.000Z","top":50,"copyright":true,"mathjax":true,"_content":"&emsp;&emsp;**奇异值分解**(singular Value Decomposition)是在机器学习领域广泛应用的算法，在cs224n中共现矩阵的降维就用到了这种算法，事实上它是很多机器学习算法的基石，现在对SVD原理做一个总结，并讨论其在PCA中的运用。\n## 回顾特征值和特征向量\n&emsp;&emsp;首先特征值和特征向量的定义如下：\n$$Ax = \\lambda x$$\n&emsp;&emsp;其中$A$是一个$n\\times n$矩阵，$x$是一个$n$维向量，则$\\lambda$是矩阵$A$的一个特征值，而$x$是矩阵$A$的特征值$\\lambda$所对应的特征向量。  \n&emsp;&emsp;利用求出的特征值与特征向量，我们可以将矩阵$A$特征分解，如果我们求出了矩阵$A$的n个特征值$\\lambda_1\\le\\lambda_2\\le...\\le\\lambda_n$以及这n个特征值所对应的特征向量$w_1,w_2,...w_n$.那么矩阵$A$就可以用下式的特征分解表示：\n$$A=W \\Sigma W^{-1}$$\n其中$W$是这n个特征向量所张成的$n\\times n$矩阵,而\\Sigma\n","source":"_drafts/奇异值分解.md","raw":"---\ntitle: 奇异值分解\ndate: 2020-05-31 17:27:49\ntags: 线性代数\ncategories: 线性代数\ntop:  50\ncopyright: true\nmathjax: true\n---\n&emsp;&emsp;**奇异值分解**(singular Value Decomposition)是在机器学习领域广泛应用的算法，在cs224n中共现矩阵的降维就用到了这种算法，事实上它是很多机器学习算法的基石，现在对SVD原理做一个总结，并讨论其在PCA中的运用。\n## 回顾特征值和特征向量\n&emsp;&emsp;首先特征值和特征向量的定义如下：\n$$Ax = \\lambda x$$\n&emsp;&emsp;其中$A$是一个$n\\times n$矩阵，$x$是一个$n$维向量，则$\\lambda$是矩阵$A$的一个特征值，而$x$是矩阵$A$的特征值$\\lambda$所对应的特征向量。  \n&emsp;&emsp;利用求出的特征值与特征向量，我们可以将矩阵$A$特征分解，如果我们求出了矩阵$A$的n个特征值$\\lambda_1\\le\\lambda_2\\le...\\le\\lambda_n$以及这n个特征值所对应的特征向量$w_1,w_2,...w_n$.那么矩阵$A$就可以用下式的特征分解表示：\n$$A=W \\Sigma W^{-1}$$\n其中$W$是这n个特征向量所张成的$n\\times n$矩阵,而\\Sigma\n","slug":"奇异值分解","published":0,"updated":"2020-05-31T12:01:29.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr40006iwvz9x036j5u","content":"<p>&emsp;&emsp;<strong>奇异值分解</strong>(singular Value Decomposition)是在机器学习领域广泛应用的算法，在cs224n中共现矩阵的降维就用到了这种算法，事实上它是很多机器学习算法的基石，现在对SVD原理做一个总结，并讨论其在PCA中的运用。</p>\n<h2 id=\"回顾特征值和特征向量\"><a href=\"#回顾特征值和特征向量\" class=\"headerlink\" title=\"回顾特征值和特征向量\"></a>回顾特征值和特征向量</h2><p>&emsp;&emsp;首先特征值和特征向量的定义如下：</p>\n<script type=\"math/tex; mode=display\">Ax = \\lambda x</script><p>&emsp;&emsp;其中$A$是一个$n\\times n$矩阵，$x$是一个$n$维向量，则$\\lambda$是矩阵$A$的一个特征值，而$x$是矩阵$A$的特征值$\\lambda$所对应的特征向量。<br>&emsp;&emsp;利用求出的特征值与特征向量，我们可以将矩阵$A$特征分解，如果我们求出了矩阵$A$的n个特征值$\\lambda_1\\le\\lambda_2\\le…\\le\\lambda_n$以及这n个特征值所对应的特征向量$w_1,w_2,…w_n$.那么矩阵$A$就可以用下式的特征分解表示：</p>\n<script type=\"math/tex; mode=display\">A=W \\Sigma W^{-1}</script><p>其中$W$是这n个特征向量所张成的$n\\times n$矩阵,而\\Sigma</p>\n","site":{"data":{}},"length":481,"excerpt":"","more":"<p>&emsp;&emsp;<strong>奇异值分解</strong>(singular Value Decomposition)是在机器学习领域广泛应用的算法，在cs224n中共现矩阵的降维就用到了这种算法，事实上它是很多机器学习算法的基石，现在对SVD原理做一个总结，并讨论其在PCA中的运用。</p>\n<h2 id=\"回顾特征值和特征向量\"><a href=\"#回顾特征值和特征向量\" class=\"headerlink\" title=\"回顾特征值和特征向量\"></a>回顾特征值和特征向量</h2><p>&emsp;&emsp;首先特征值和特征向量的定义如下：</p>\n<script type=\"math/tex; mode=display\">Ax = \\lambda x</script><p>&emsp;&emsp;其中$A$是一个$n\\times n$矩阵，$x$是一个$n$维向量，则$\\lambda$是矩阵$A$的一个特征值，而$x$是矩阵$A$的特征值$\\lambda$所对应的特征向量。<br>&emsp;&emsp;利用求出的特征值与特征向量，我们可以将矩阵$A$特征分解，如果我们求出了矩阵$A$的n个特征值$\\lambda_1\\le\\lambda_2\\le…\\le\\lambda_n$以及这n个特征值所对应的特征向量$w_1,w_2,…w_n$.那么矩阵$A$就可以用下式的特征分解表示：</p>\n<script type=\"math/tex; mode=display\">A=W \\Sigma W^{-1}</script><p>其中$W$是这n个特征向量所张成的$n\\times n$矩阵,而\\Sigma</p>\n"},{"title":"CS224N笔记(一):word vector","date":"2020-05-25T02:16:03.000Z","top":90,"copyright":true,"mathjax":true,"_content":"&emsp;&emsp;受到导师的推荐来在线学习这门stanford课程CS224N，打下一些基础。这门课程的名称是**Nature Language Processing with Deep Learning**，即基于神经网络的自然语言处理,第一节上课的教授是**Christopher Manning**。老爷子精神很好，也很活泼。  \n&emsp;&emsp;这一节的主要内容是 \n- nlp研究的对象\n- 我们如何表示单词的含义（meaning of a word）\n- Word2Vec方法的基本原理\n\n&emsp;&emsp;自然语言，在这里指的当然就是人类语言，从整个地球史的角度来看，人类语言的出现距离我们当前年代是相当近的。教授认为，恰恰就是人类语言的出现区分了我们与猩猩（尽管它们也有自己的交流系统）。人类语言的奇妙之处在于它可以仅仅运用写在纸上的（莎草纸）的抽象文字来指代现实世界中的物理事物以及抽象概念，而想让机器做到与人一样理解语言是一项复杂的工作，当然这样也衍生出了许多有趣又实用的研究工作。   \n&emsp;&emsp;完成这些工作的前提是需要先解答这个问题：“我们如何表达一个单词的含义？”  \n&emsp;&emsp;一个早期常用的思想是我们将所有那些同义词与下义词建立成一个词库。课程内提到的**wordNet**便是运用这种方法的一个词库，在**wordNet**中一个词的含义由它的同义词集合与下义词集合来定义。显然，这样做会带来许多问题：\n- 有些词只在某些特定语境下被认为是同义词（例如：“proficient”只在一些情况下被认为是“good”的同义词\n- 有时会丢失一些词语的新含义（例如该词被解构了）\n- 定义的主观性\n- 词库资料需要大量人力收集整理； \n- 无法计算出准确的单词相似度\n  \n\n&emsp;&emsp;那么向量呢，我们能否使用一个向量来表示出一个单词?一个简单的方法就是使用**one-hot**编码来表示单词，在一个向量中，只有代表该单词的位置元素被设置为1，而其他位置元素则都被设置为0，如下所示：  \n![one-hot](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_one-hot.PNG)  \n&emsp;&emsp;向量的维数等于词库中的单词数目。显然，由于所有向量都是互相正交的，两个向量间的相似度无法被有效表示出来，并且向量维度过大。  \n\n&emsp;\n\n&emsp;&emsp;至此，我们还得寻找一种更好的表达单词含义的方式。这里借鉴了语言学家的思想： ***A word’s meaning is given by the words that frequently appear close-by”***。含义类似于我们高中英语常做的阅读理解。我们定义一个由某个词为中心的定长的窗口，窗口内的其他词构成了它的上下文context，借助这些context我们可以建立对该词有效的表示。下图中banking附近常出现的词定义了banking的含义。  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_banking.PNG)  \n&emsp;&emsp;前面提到的**one-hot vector**属于一种sparse vector,而我们想要构造的是dense vector即大多数元素不为零且维度较小的向量，并且希望在相似的上下文环境下word vector也较为相似。这里的word vector也可被称为word embedding 或是 word representation。  \n&emsp;&emsp;这里介绍了一种较为流行的方法**Word2Vec**来生成我们想要的word vector。它是由google的nlp专家在2013年的时候提出，其核心思想是已经我们有了很大的文本库（corpus of text,教授还介绍了一下拉丁语词根），当我们用固定窗口不断去扫过文本库中的句子时，我们有位于中间的center word c 以及其周边的单词们conetxt words o,而它们的相似度用$p(o|c)$表示，即给定c的情况下o的条件概率。我们不断的调整word vector使得该概率最大化。每个单词可用两个向量表示，一个是它作为center word时的向量$\\mathcal{v}_w$与作为context word时的向量$\\mathcal{u}_w$。   \n&emsp;   \n&emsp;&emsp;如下图所示是窗口大小为2，center word 为*into*的context word 的概率表示。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG)\n当我们扫到下一个位置时，banking就成为center word。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_banking.PNG)\n\n对于每个位置t = 1,...T,在大小为m的固定窗口内预测上下文单词，给定中心词$w_t$  \n$$Likelihood = L(\\theta) = {\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}P(w_{t+j}|w_t;\\theta) $$\n- 其中，$\\theta$为所有需要优化的变量  \n目标函数$J(\\theta)$(也可被称为代价函数或损失函数)是（平均）负对数似然。 \n$$J(\\theta) = -{\\frac{1}{T}}{\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}logP(w_{t+j}|w_t;\\theta)$$\n\n&emsp;&emsp;其中$log$形式是方便将连乘转化为求和，负号是希望将极大化似然率转化为极小化损失函数的等价问题。\n\n>tips:在连乘之前使用log转化为求和非常常用与有效  \n>$$ log \\prod_{i}{x_i} = \\sum_ilog{x_i}$$  \n\n&emsp;接下来的问题是，如何计算$P(w_{t+j}|w_t;\\theta)$?  \n&emsp;答案是对于每个单词使用两个向量——\n- $v_w$当$w$是中心词时\n- $u_w$当$w$是上下文词时\n- 于是对于一个中心词$c$和一个上下文词$o$\n  $$P(o|c) = \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n>公式中，向量$u_o$和向量$v_c$进行点乘，向量之间越相似，点乘结果越大，从而归一化后得到的概率值也越大。模型的训练是为了让具有相似上下文的单词，具有相似的向量。\n## Word2vec prediction function\n$$P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n- 取幂使任何数都为正\n- 点积的目的是比较$o$和$c$的相似性\n  $$u^Tv = u.v = \\sum_{i=1}^n{u_iv_i} $$\n- 分母：对整个词汇表进行标准化，从而给出概率分布\n\n**softmax function** &emsp;$\\mathbb{R^n}\\to\\mathbb{R^n}$\n\n$$softmax(x_i) = \\frac{\\exp(x_i)}{\\sum_{j=1}^n\\exp(x_j)} = p_i$$\n&emsp;&emsp;该函数可将任意值$x_i$映射到概率分布$p_i$\n- **max**:因为放大了最大的概率\n- **soft**:因为仍然为较小的$x_i$赋予了一定概率\n- 深度学习中常用  \n&emsp;&emsp;首先我们随机初始化$u_w\\in\\mathbb{R^d}$和$v_w\\in\\mathbb{R^d}$,而后使用梯度下降法进行更新。\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) &= \\frac{\\partial}{\\partial{v_c}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\ \n&=\\frac{\\partial}{\\partial{v_c}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial v_c} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\n\\end{aligned}\n$$\n\n&emsp;&emsp;可对上述结果重新排序如下，等式右边第一项是真正的上下文单词，第二项为预测的上下文单词，使用梯度下降法，模型的预测上下文将接近真正的上下文。\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) \n&= u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= u_o -\\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)} u_w\\\\\n&=u_o - \\sum_{w\\in V} P(w|c)u_w\n\\end{aligned}\n$$\n在$\\sum_{w\\in V} u_w^Tv_c$上对$u_o$取偏微分运算，注意这里$u_o$是$u_{w=0}$的缩写，故可知  \n$$\\frac{\\partial}{\\partial u_o}\\sum_{w\\in V} u_w^Tv_c=\\frac{\\partial}{\\partial u_o}u_o^Tv_c=v_c$$\n\n&emsp;\n\n因此：\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{u_o}}\\log P(o|c) \n&= \\frac{\\partial}{\\partial{u_o}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= \\frac{\\partial}{\\partial{u_o}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial u_o} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=v_c - \\frac{\\sum_{w\\in V}{\\frac{\\partial}{\\partial u_o}\\exp(u_w^Tv_c)}}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)v_c}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}v_c\\\\\n&=v_c - P(o|c)v_c\\\\\n&=(1-P(o|c))v_c  \n\\end{aligned}\n$$\n&emsp;&emsp;当$P(o|c)\\to1$时，即通过中心词$c$可以准确预测上下文词$o$，此时我们不需要调整$u_o$，反之，需要调整$u_o$。\n\n  \n\n\n\n\n\n","source":"_posts/CS224N笔记-一-word-vector.md","raw":"---\ntitle: 'CS224N笔记(一):word vector'\ndate: 2020-05-25 10:16:03\ntags: nlp 机器学习\ncategories: CS224N\ntop: 90\ncopyright: true\nmathjax: true\n---\n&emsp;&emsp;受到导师的推荐来在线学习这门stanford课程CS224N，打下一些基础。这门课程的名称是**Nature Language Processing with Deep Learning**，即基于神经网络的自然语言处理,第一节上课的教授是**Christopher Manning**。老爷子精神很好，也很活泼。  \n&emsp;&emsp;这一节的主要内容是 \n- nlp研究的对象\n- 我们如何表示单词的含义（meaning of a word）\n- Word2Vec方法的基本原理\n\n&emsp;&emsp;自然语言，在这里指的当然就是人类语言，从整个地球史的角度来看，人类语言的出现距离我们当前年代是相当近的。教授认为，恰恰就是人类语言的出现区分了我们与猩猩（尽管它们也有自己的交流系统）。人类语言的奇妙之处在于它可以仅仅运用写在纸上的（莎草纸）的抽象文字来指代现实世界中的物理事物以及抽象概念，而想让机器做到与人一样理解语言是一项复杂的工作，当然这样也衍生出了许多有趣又实用的研究工作。   \n&emsp;&emsp;完成这些工作的前提是需要先解答这个问题：“我们如何表达一个单词的含义？”  \n&emsp;&emsp;一个早期常用的思想是我们将所有那些同义词与下义词建立成一个词库。课程内提到的**wordNet**便是运用这种方法的一个词库，在**wordNet**中一个词的含义由它的同义词集合与下义词集合来定义。显然，这样做会带来许多问题：\n- 有些词只在某些特定语境下被认为是同义词（例如：“proficient”只在一些情况下被认为是“good”的同义词\n- 有时会丢失一些词语的新含义（例如该词被解构了）\n- 定义的主观性\n- 词库资料需要大量人力收集整理； \n- 无法计算出准确的单词相似度\n  \n\n&emsp;&emsp;那么向量呢，我们能否使用一个向量来表示出一个单词?一个简单的方法就是使用**one-hot**编码来表示单词，在一个向量中，只有代表该单词的位置元素被设置为1，而其他位置元素则都被设置为0，如下所示：  \n![one-hot](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_one-hot.PNG)  \n&emsp;&emsp;向量的维数等于词库中的单词数目。显然，由于所有向量都是互相正交的，两个向量间的相似度无法被有效表示出来，并且向量维度过大。  \n\n&emsp;\n\n&emsp;&emsp;至此，我们还得寻找一种更好的表达单词含义的方式。这里借鉴了语言学家的思想： ***A word’s meaning is given by the words that frequently appear close-by”***。含义类似于我们高中英语常做的阅读理解。我们定义一个由某个词为中心的定长的窗口，窗口内的其他词构成了它的上下文context，借助这些context我们可以建立对该词有效的表示。下图中banking附近常出现的词定义了banking的含义。  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_banking.PNG)  \n&emsp;&emsp;前面提到的**one-hot vector**属于一种sparse vector,而我们想要构造的是dense vector即大多数元素不为零且维度较小的向量，并且希望在相似的上下文环境下word vector也较为相似。这里的word vector也可被称为word embedding 或是 word representation。  \n&emsp;&emsp;这里介绍了一种较为流行的方法**Word2Vec**来生成我们想要的word vector。它是由google的nlp专家在2013年的时候提出，其核心思想是已经我们有了很大的文本库（corpus of text,教授还介绍了一下拉丁语词根），当我们用固定窗口不断去扫过文本库中的句子时，我们有位于中间的center word c 以及其周边的单词们conetxt words o,而它们的相似度用$p(o|c)$表示，即给定c的情况下o的条件概率。我们不断的调整word vector使得该概率最大化。每个单词可用两个向量表示，一个是它作为center word时的向量$\\mathcal{v}_w$与作为context word时的向量$\\mathcal{u}_w$。   \n&emsp;   \n&emsp;&emsp;如下图所示是窗口大小为2，center word 为*into*的context word 的概率表示。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG)\n当我们扫到下一个位置时，banking就成为center word。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_banking.PNG)\n\n对于每个位置t = 1,...T,在大小为m的固定窗口内预测上下文单词，给定中心词$w_t$  \n$$Likelihood = L(\\theta) = {\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}P(w_{t+j}|w_t;\\theta) $$\n- 其中，$\\theta$为所有需要优化的变量  \n目标函数$J(\\theta)$(也可被称为代价函数或损失函数)是（平均）负对数似然。 \n$$J(\\theta) = -{\\frac{1}{T}}{\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}logP(w_{t+j}|w_t;\\theta)$$\n\n&emsp;&emsp;其中$log$形式是方便将连乘转化为求和，负号是希望将极大化似然率转化为极小化损失函数的等价问题。\n\n>tips:在连乘之前使用log转化为求和非常常用与有效  \n>$$ log \\prod_{i}{x_i} = \\sum_ilog{x_i}$$  \n\n&emsp;接下来的问题是，如何计算$P(w_{t+j}|w_t;\\theta)$?  \n&emsp;答案是对于每个单词使用两个向量——\n- $v_w$当$w$是中心词时\n- $u_w$当$w$是上下文词时\n- 于是对于一个中心词$c$和一个上下文词$o$\n  $$P(o|c) = \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n>公式中，向量$u_o$和向量$v_c$进行点乘，向量之间越相似，点乘结果越大，从而归一化后得到的概率值也越大。模型的训练是为了让具有相似上下文的单词，具有相似的向量。\n## Word2vec prediction function\n$$P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n- 取幂使任何数都为正\n- 点积的目的是比较$o$和$c$的相似性\n  $$u^Tv = u.v = \\sum_{i=1}^n{u_iv_i} $$\n- 分母：对整个词汇表进行标准化，从而给出概率分布\n\n**softmax function** &emsp;$\\mathbb{R^n}\\to\\mathbb{R^n}$\n\n$$softmax(x_i) = \\frac{\\exp(x_i)}{\\sum_{j=1}^n\\exp(x_j)} = p_i$$\n&emsp;&emsp;该函数可将任意值$x_i$映射到概率分布$p_i$\n- **max**:因为放大了最大的概率\n- **soft**:因为仍然为较小的$x_i$赋予了一定概率\n- 深度学习中常用  \n&emsp;&emsp;首先我们随机初始化$u_w\\in\\mathbb{R^d}$和$v_w\\in\\mathbb{R^d}$,而后使用梯度下降法进行更新。\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) &= \\frac{\\partial}{\\partial{v_c}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\ \n&=\\frac{\\partial}{\\partial{v_c}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial v_c} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\n\\end{aligned}\n$$\n\n&emsp;&emsp;可对上述结果重新排序如下，等式右边第一项是真正的上下文单词，第二项为预测的上下文单词，使用梯度下降法，模型的预测上下文将接近真正的上下文。\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) \n&= u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= u_o -\\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)} u_w\\\\\n&=u_o - \\sum_{w\\in V} P(w|c)u_w\n\\end{aligned}\n$$\n在$\\sum_{w\\in V} u_w^Tv_c$上对$u_o$取偏微分运算，注意这里$u_o$是$u_{w=0}$的缩写，故可知  \n$$\\frac{\\partial}{\\partial u_o}\\sum_{w\\in V} u_w^Tv_c=\\frac{\\partial}{\\partial u_o}u_o^Tv_c=v_c$$\n\n&emsp;\n\n因此：\n$$\n\\begin{aligned}\n\\frac{\\partial}{\\partial{u_o}}\\log P(o|c) \n&= \\frac{\\partial}{\\partial{u_o}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= \\frac{\\partial}{\\partial{u_o}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial u_o} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=v_c - \\frac{\\sum_{w\\in V}{\\frac{\\partial}{\\partial u_o}\\exp(u_w^Tv_c)}}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)v_c}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}v_c\\\\\n&=v_c - P(o|c)v_c\\\\\n&=(1-P(o|c))v_c  \n\\end{aligned}\n$$\n&emsp;&emsp;当$P(o|c)\\to1$时，即通过中心词$c$可以准确预测上下文词$o$，此时我们不需要调整$u_o$，反之，需要调整$u_o$。\n\n  \n\n\n\n\n\n","slug":"CS224N笔记-一-word-vector","published":1,"updated":"2020-06-11T09:23:16.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr60009iwvz2es3g7ky","content":"<p>&emsp;&emsp;受到导师的推荐来在线学习这门stanford课程CS224N，打下一些基础。这门课程的名称是<strong>Nature Language Processing with Deep Learning</strong>，即基于神经网络的自然语言处理,第一节上课的教授是<strong>Christopher Manning</strong>。老爷子精神很好，也很活泼。<br>&emsp;&emsp;这一节的主要内容是 </p>\n<ul>\n<li>nlp研究的对象</li>\n<li>我们如何表示单词的含义（meaning of a word）</li>\n<li>Word2Vec方法的基本原理</li>\n</ul>\n<p>&emsp;&emsp;自然语言，在这里指的当然就是人类语言，从整个地球史的角度来看，人类语言的出现距离我们当前年代是相当近的。教授认为，恰恰就是人类语言的出现区分了我们与猩猩（尽管它们也有自己的交流系统）。人类语言的奇妙之处在于它可以仅仅运用写在纸上的（莎草纸）的抽象文字来指代现实世界中的物理事物以及抽象概念，而想让机器做到与人一样理解语言是一项复杂的工作，当然这样也衍生出了许多有趣又实用的研究工作。<br>&emsp;&emsp;完成这些工作的前提是需要先解答这个问题：“我们如何表达一个单词的含义？”<br>&emsp;&emsp;一个早期常用的思想是我们将所有那些同义词与下义词建立成一个词库。课程内提到的<strong>wordNet</strong>便是运用这种方法的一个词库，在<strong>wordNet</strong>中一个词的含义由它的同义词集合与下义词集合来定义。显然，这样做会带来许多问题：</p>\n<ul>\n<li>有些词只在某些特定语境下被认为是同义词（例如：“proficient”只在一些情况下被认为是“good”的同义词</li>\n<li>有时会丢失一些词语的新含义（例如该词被解构了）</li>\n<li>定义的主观性</li>\n<li>词库资料需要大量人力收集整理； </li>\n<li>无法计算出准确的单词相似度</li>\n</ul>\n<p>&emsp;&emsp;那么向量呢，我们能否使用一个向量来表示出一个单词?一个简单的方法就是使用<strong>one-hot</strong>编码来表示单词，在一个向量中，只有代表该单词的位置元素被设置为1，而其他位置元素则都被设置为0，如下所示：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_one-hot.PNG\" alt=\"one-hot\"><br>&emsp;&emsp;向量的维数等于词库中的单词数目。显然，由于所有向量都是互相正交的，两个向量间的相似度无法被有效表示出来，并且向量维度过大。  </p>\n<p>&emsp;</p>\n<p>&emsp;&emsp;至此，我们还得寻找一种更好的表达单词含义的方式。这里借鉴了语言学家的思想： <strong><em>A word’s meaning is given by the words that frequently appear close-by”</em></strong>。含义类似于我们高中英语常做的阅读理解。我们定义一个由某个词为中心的定长的窗口，窗口内的其他词构成了它的上下文context，借助这些context我们可以建立对该词有效的表示。下图中banking附近常出现的词定义了banking的含义。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_banking.PNG\" alt><br>&emsp;&emsp;前面提到的<strong>one-hot vector</strong>属于一种sparse vector,而我们想要构造的是dense vector即大多数元素不为零且维度较小的向量，并且希望在相似的上下文环境下word vector也较为相似。这里的word vector也可被称为word embedding 或是 word representation。<br>&emsp;&emsp;这里介绍了一种较为流行的方法<strong>Word2Vec</strong>来生成我们想要的word vector。它是由google的nlp专家在2013年的时候提出，其核心思想是已经我们有了很大的文本库（corpus of text,教授还介绍了一下拉丁语词根），当我们用固定窗口不断去扫过文本库中的句子时，我们有位于中间的center word c 以及其周边的单词们conetxt words o,而它们的相似度用$p(o|c)$表示，即给定c的情况下o的条件概率。我们不断的调整word vector使得该概率最大化。每个单词可用两个向量表示，一个是它作为center word时的向量$\\mathcal{v}_w$与作为context word时的向量$\\mathcal{u}_w$。<br>&emsp;<br>&emsp;&emsp;如下图所示是窗口大小为2，center word 为<em>into</em>的context word 的概率表示。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG\" alt><br>当我们扫到下一个位置时，banking就成为center word。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_banking.PNG\" alt></p>\n<p>对于每个位置t = 1,…T,在大小为m的固定窗口内预测上下文单词，给定中心词$w_t$  </p>\n<script type=\"math/tex; mode=display\">Likelihood = L(\\theta) = {\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}P(w_{t+j}|w_t;\\theta)</script><ul>\n<li>其中，$\\theta$为所有需要优化的变量<br>目标函数$J(\\theta)$(也可被称为代价函数或损失函数)是（平均）负对数似然。 <script type=\"math/tex; mode=display\">J(\\theta) = -{\\frac{1}{T}}{\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}logP(w_{t+j}|w_t;\\theta)</script></li>\n</ul>\n<p>&emsp;&emsp;其中$log$形式是方便将连乘转化为求和，负号是希望将极大化似然率转化为极小化损失函数的等价问题。</p>\n<blockquote>\n<p>tips:在连乘之前使用log转化为求和非常常用与有效  </p>\n<script type=\"math/tex; mode=display\">log \\prod_{i}{x_i} = \\sum_ilog{x_i}</script></blockquote>\n<p>&emsp;接下来的问题是，如何计算$P(w_{t+j}|w_t;\\theta)$?<br>&emsp;答案是对于每个单词使用两个向量——</p>\n<ul>\n<li>$v_w$当$w$是中心词时</li>\n<li>$u_w$当$w$是上下文词时</li>\n<li>于是对于一个中心词$c$和一个上下文词$o$<script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script><blockquote>\n<p>公式中，向量$u_o$和向量$v_c$进行点乘，向量之间越相似，点乘结果越大，从而归一化后得到的概率值也越大。模型的训练是为了让具有相似上下文的单词，具有相似的向量。</p>\n<h2 id=\"Word2vec-prediction-function\"><a href=\"#Word2vec-prediction-function\" class=\"headerlink\" title=\"Word2vec prediction function\"></a>Word2vec prediction function</h2><script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script></blockquote>\n</li>\n<li>取幂使任何数都为正</li>\n<li>点积的目的是比较$o$和$c$的相似性<script type=\"math/tex; mode=display\">u^Tv = u.v = \\sum_{i=1}^n{u_iv_i}</script></li>\n<li>分母：对整个词汇表进行标准化，从而给出概率分布</li>\n</ul>\n<p><strong>softmax function</strong> &emsp;$\\mathbb{R^n}\\to\\mathbb{R^n}$</p>\n<script type=\"math/tex; mode=display\">softmax(x_i) = \\frac{\\exp(x_i)}{\\sum_{j=1}^n\\exp(x_j)} = p_i</script><p>&emsp;&emsp;该函数可将任意值$x_i$映射到概率分布$p_i$</p>\n<ul>\n<li><strong>max</strong>:因为放大了最大的概率</li>\n<li><strong>soft</strong>:因为仍然为较小的$x_i$赋予了一定概率</li>\n<li>深度学习中常用<br>&emsp;&emsp;首先我们随机初始化$u_w\\in\\mathbb{R^d}$和$v_w\\in\\mathbb{R^d}$,而后使用梯度下降法进行更新。<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) &= \\frac{\\partial}{\\partial{v_c}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\ \n&=\\frac{\\partial}{\\partial{v_c}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial v_c} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\n\\end{aligned}</script></li>\n</ul>\n<p>&emsp;&emsp;可对上述结果重新排序如下，等式右边第一项是真正的上下文单词，第二项为预测的上下文单词，使用梯度下降法，模型的预测上下文将接近真正的上下文。</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) \n&= u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= u_o -\\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)} u_w\\\\\n&=u_o - \\sum_{w\\in V} P(w|c)u_w\n\\end{aligned}</script><p>在$\\sum_{w\\in V} u_w^Tv_c$上对$u_o$取偏微分运算，注意这里$u_o$是$u_{w=0}$的缩写，故可知  </p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial}{\\partial u_o}\\sum_{w\\in V} u_w^Tv_c=\\frac{\\partial}{\\partial u_o}u_o^Tv_c=v_c</script><p>&emsp;</p>\n<p>因此：</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{u_o}}\\log P(o|c) \n&= \\frac{\\partial}{\\partial{u_o}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= \\frac{\\partial}{\\partial{u_o}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial u_o} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=v_c - \\frac{\\sum_{w\\in V}{\\frac{\\partial}{\\partial u_o}\\exp(u_w^Tv_c)}}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)v_c}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}v_c\\\\\n&=v_c - P(o|c)v_c\\\\\n&=(1-P(o|c))v_c  \n\\end{aligned}</script><p>&emsp;&emsp;当$P(o|c)\\to1$时，即通过中心词$c$可以准确预测上下文词$o$，此时我们不需要调整$u_o$，反之，需要调整$u_o$。</p>\n","site":{"data":{}},"length":4381,"excerpt":"","more":"<p>&emsp;&emsp;受到导师的推荐来在线学习这门stanford课程CS224N，打下一些基础。这门课程的名称是<strong>Nature Language Processing with Deep Learning</strong>，即基于神经网络的自然语言处理,第一节上课的教授是<strong>Christopher Manning</strong>。老爷子精神很好，也很活泼。<br>&emsp;&emsp;这一节的主要内容是 </p>\n<ul>\n<li>nlp研究的对象</li>\n<li>我们如何表示单词的含义（meaning of a word）</li>\n<li>Word2Vec方法的基本原理</li>\n</ul>\n<p>&emsp;&emsp;自然语言，在这里指的当然就是人类语言，从整个地球史的角度来看，人类语言的出现距离我们当前年代是相当近的。教授认为，恰恰就是人类语言的出现区分了我们与猩猩（尽管它们也有自己的交流系统）。人类语言的奇妙之处在于它可以仅仅运用写在纸上的（莎草纸）的抽象文字来指代现实世界中的物理事物以及抽象概念，而想让机器做到与人一样理解语言是一项复杂的工作，当然这样也衍生出了许多有趣又实用的研究工作。<br>&emsp;&emsp;完成这些工作的前提是需要先解答这个问题：“我们如何表达一个单词的含义？”<br>&emsp;&emsp;一个早期常用的思想是我们将所有那些同义词与下义词建立成一个词库。课程内提到的<strong>wordNet</strong>便是运用这种方法的一个词库，在<strong>wordNet</strong>中一个词的含义由它的同义词集合与下义词集合来定义。显然，这样做会带来许多问题：</p>\n<ul>\n<li>有些词只在某些特定语境下被认为是同义词（例如：“proficient”只在一些情况下被认为是“good”的同义词</li>\n<li>有时会丢失一些词语的新含义（例如该词被解构了）</li>\n<li>定义的主观性</li>\n<li>词库资料需要大量人力收集整理； </li>\n<li>无法计算出准确的单词相似度</li>\n</ul>\n<p>&emsp;&emsp;那么向量呢，我们能否使用一个向量来表示出一个单词?一个简单的方法就是使用<strong>one-hot</strong>编码来表示单词，在一个向量中，只有代表该单词的位置元素被设置为1，而其他位置元素则都被设置为0，如下所示：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_one-hot.PNG\" alt=\"one-hot\"><br>&emsp;&emsp;向量的维数等于词库中的单词数目。显然，由于所有向量都是互相正交的，两个向量间的相似度无法被有效表示出来，并且向量维度过大。  </p>\n<p>&emsp;</p>\n<p>&emsp;&emsp;至此，我们还得寻找一种更好的表达单词含义的方式。这里借鉴了语言学家的思想： <strong><em>A word’s meaning is given by the words that frequently appear close-by”</em></strong>。含义类似于我们高中英语常做的阅读理解。我们定义一个由某个词为中心的定长的窗口，窗口内的其他词构成了它的上下文context，借助这些context我们可以建立对该词有效的表示。下图中banking附近常出现的词定义了banking的含义。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_banking.PNG\" alt><br>&emsp;&emsp;前面提到的<strong>one-hot vector</strong>属于一种sparse vector,而我们想要构造的是dense vector即大多数元素不为零且维度较小的向量，并且希望在相似的上下文环境下word vector也较为相似。这里的word vector也可被称为word embedding 或是 word representation。<br>&emsp;&emsp;这里介绍了一种较为流行的方法<strong>Word2Vec</strong>来生成我们想要的word vector。它是由google的nlp专家在2013年的时候提出，其核心思想是已经我们有了很大的文本库（corpus of text,教授还介绍了一下拉丁语词根），当我们用固定窗口不断去扫过文本库中的句子时，我们有位于中间的center word c 以及其周边的单词们conetxt words o,而它们的相似度用$p(o|c)$表示，即给定c的情况下o的条件概率。我们不断的调整word vector使得该概率最大化。每个单词可用两个向量表示，一个是它作为center word时的向量$\\mathcal{v}_w$与作为context word时的向量$\\mathcal{u}_w$。<br>&emsp;<br>&emsp;&emsp;如下图所示是窗口大小为2，center word 为<em>into</em>的context word 的概率表示。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG\" alt><br>当我们扫到下一个位置时，banking就成为center word。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_banking.PNG\" alt></p>\n<p>对于每个位置t = 1,…T,在大小为m的固定窗口内预测上下文单词，给定中心词$w_t$  </p>\n<script type=\"math/tex; mode=display\">Likelihood = L(\\theta) = {\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}P(w_{t+j}|w_t;\\theta)</script><ul>\n<li>其中，$\\theta$为所有需要优化的变量<br>目标函数$J(\\theta)$(也可被称为代价函数或损失函数)是（平均）负对数似然。 <script type=\"math/tex; mode=display\">J(\\theta) = -{\\frac{1}{T}}{\\prod_{t=1}^T}{\\prod_{  {-m\\leq j \\leq m } \\atop {j\\neq 0}}}logP(w_{t+j}|w_t;\\theta)</script></li>\n</ul>\n<p>&emsp;&emsp;其中$log$形式是方便将连乘转化为求和，负号是希望将极大化似然率转化为极小化损失函数的等价问题。</p>\n<blockquote>\n<p>tips:在连乘之前使用log转化为求和非常常用与有效  </p>\n<script type=\"math/tex; mode=display\">log \\prod_{i}{x_i} = \\sum_ilog{x_i}</script></blockquote>\n<p>&emsp;接下来的问题是，如何计算$P(w_{t+j}|w_t;\\theta)$?<br>&emsp;答案是对于每个单词使用两个向量——</p>\n<ul>\n<li>$v_w$当$w$是中心词时</li>\n<li>$u_w$当$w$是上下文词时</li>\n<li>于是对于一个中心词$c$和一个上下文词$o$<script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script><blockquote>\n<p>公式中，向量$u_o$和向量$v_c$进行点乘，向量之间越相似，点乘结果越大，从而归一化后得到的概率值也越大。模型的训练是为了让具有相似上下文的单词，具有相似的向量。</p>\n<h2 id=\"Word2vec-prediction-function\"><a href=\"#Word2vec-prediction-function\" class=\"headerlink\" title=\"Word2vec prediction function\"></a>Word2vec prediction function</h2><script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script></blockquote>\n</li>\n<li>取幂使任何数都为正</li>\n<li>点积的目的是比较$o$和$c$的相似性<script type=\"math/tex; mode=display\">u^Tv = u.v = \\sum_{i=1}^n{u_iv_i}</script></li>\n<li>分母：对整个词汇表进行标准化，从而给出概率分布</li>\n</ul>\n<p><strong>softmax function</strong> &emsp;$\\mathbb{R^n}\\to\\mathbb{R^n}$</p>\n<script type=\"math/tex; mode=display\">softmax(x_i) = \\frac{\\exp(x_i)}{\\sum_{j=1}^n\\exp(x_j)} = p_i</script><p>&emsp;&emsp;该函数可将任意值$x_i$映射到概率分布$p_i$</p>\n<ul>\n<li><strong>max</strong>:因为放大了最大的概率</li>\n<li><strong>soft</strong>:因为仍然为较小的$x_i$赋予了一定概率</li>\n<li>深度学习中常用<br>&emsp;&emsp;首先我们随机初始化$u_w\\in\\mathbb{R^d}$和$v_w\\in\\mathbb{R^d}$,而后使用梯度下降法进行更新。<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) &= \\frac{\\partial}{\\partial{v_c}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\ \n&=\\frac{\\partial}{\\partial{v_c}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial v_c} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\n\\end{aligned}</script></li>\n</ul>\n<p>&emsp;&emsp;可对上述结果重新排序如下，等式右边第一项是真正的上下文单词，第二项为预测的上下文单词，使用梯度下降法，模型的预测上下文将接近真正的上下文。</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{v_c}}\\log P(o|c) \n&= u_o - \\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)u_w}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= u_o -\\frac{\\sum_{w\\in V}\\exp(u_w^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)} u_w\\\\\n&=u_o - \\sum_{w\\in V} P(w|c)u_w\n\\end{aligned}</script><p>在$\\sum_{w\\in V} u_w^Tv_c$上对$u_o$取偏微分运算，注意这里$u_o$是$u_{w=0}$的缩写，故可知  </p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial}{\\partial u_o}\\sum_{w\\in V} u_w^Tv_c=\\frac{\\partial}{\\partial u_o}u_o^Tv_c=v_c</script><p>&emsp;</p>\n<p>因此：</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}\n\\frac{\\partial}{\\partial{u_o}}\\log P(o|c) \n&= \\frac{\\partial}{\\partial{u_o}}\\log \\frac{\\exp({u_o^T}v_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&= \\frac{\\partial}{\\partial{u_o}} \\left( \\log\\exp(u_o^Tv_c))-\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\n\\\\\n&=\\frac{\\partial}{\\partial u_o} \\left(u_o^Tv_c -\\log\\sum_{w\\in V}\\exp(u_w^Tv_c)\\right)\\\\\n&=v_c - \\frac{\\sum_{w\\in V}{\\frac{\\partial}{\\partial u_o}\\exp(u_w^Tv_c)}}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)v_c}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}\\\\\n&=v_c - \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}v_c\\\\\n&=v_c - P(o|c)v_c\\\\\n&=(1-P(o|c))v_c  \n\\end{aligned}</script><p>&emsp;&emsp;当$P(o|c)\\to1$时，即通过中心词$c$可以准确预测上下文词$o$，此时我们不需要调整$u_o$，反之，需要调整$u_o$。</p>\n"},{"title":"CS224N笔记-七-Vanishing Gradient and Fancy RNNs","date":"2020-06-14T09:37:00.000Z","top":90,"copyright":true,"mathjax":true,"_content":"&emsp;&emsp;这节课助教主要介绍了RNN的问题（其实不止在RNN上出现）并且介绍了几种更复杂的RNN变体\n\n## Vanishing gradient intuition\n&emsp;&emsp;RNN理论上可与捕捉较早的历史信息，但是由于梯度消失的原因会导致远程信息无法被有效的被捕捉到。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_gradient_intuition.PNG)\n&emsp;&emsp;当图上这些梯度很小时，反向传播得越深入，梯度信号就会越来越小。  \n&emsp;&emsp;上节课提到，t 时间步下的hidden state表达式为：\n$$ \\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right) $$\n&emsp;&emsp;由链式法则可得：\n$$\\frac{\\partial \\boldsymbol{h}^{(t)}}{\\partial \\boldsymbol{h}^{(t-1)}} = diag\\left(\\sigma^{'}\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)\\boldsymbol{W}_{h}        \\right)$$  \n&emsp;&emsp;考虑一下第$i$步上的损失梯度$J^{(i)}(\\theta)$,以及第$j$步上的隐藏状态$h^{(j)}$![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/chainrule.png)\n&emsp;&emsp;由此可见，如果权重矩阵$W_h$很小，那么这一项会随着$i$和$j$的距离越来越大而变得越来越小。  \n### why is vanishing gradient a problem?  \n&emsp;&emsp;![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/why_vanishing_gradient.png)\n&emsp;&emsp;&emsp;&emsp;来自远处的梯度信号会丢失，因为它比邻近的梯度信号小很多，模型权重只会根据近期效应而不是长期效应进行更新。\n### Effect of vanishing gradient on RNN-LM\n例如以下这个语言任务：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/language_task.png)\n&emsp;&emsp;为了从这个例子中学习，RNN-LM需要对第七步的“tickets”和最后的目标“tickets”之间的依赖关系建模，但是如果梯度很小，模型就不能学习这种依赖关系。  \n&emsp;&emsp;再如下面这个例子：\n\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_problem.PNG)\n&emsp;&emsp;由于梯度的消失，RNN-LMs更善于从顺序近因（sequential recency）学习而不是语法近因（sybtactic recency）。\n\n### why is exploding gradient a problem?  \n&emsp;&emsp;如果梯度过大，则SGD更新步骤过大：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/exploding_gradient.png)\n&emsp;&emsp;这可能导致错误的更新：更新得太多，会导致错误的参数配置。在最坏情况下，会导致网络中的**INF**或**NAN**。  \n### Gradient clipping: solution for exploding gradient\n&emsp;&emsp;**梯度裁剪**：如果梯度的范数大于某个阈值，在应用SGD更新前将其缩小：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping.png)\n&emsp;&emsp;**思路**：朝着同样的方向迈出一步，但要小一些。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping_pic.png)  \n\n### How to fix vanishing gradient problem?\n&emsp;&emsp;梯度消失的主要原因是RNN很难学习在多个时间步长下保存信息，在普通的RNN中，隐藏状态被不断地重写：\n$$ \\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}\\right) $$\n\n### Long Short-Term Memory (LSTM)\n&emsp;&emsp;长短期记忆网络是循环神经网络的一个变体，可以有效解决**简单循环神经网络**的梯度爆炸或消失问题。  \n&emsp;&emsp;在第t步，该网络有一个隐藏状态$\\boldsymbol{h^{(t)}}$和一个单元状态$\\boldsymbol{c^{(t)}}$,它们  \n- 都是长度为n的向量\n- 在每个时间步长上，门的每个元素可以打开（1）、关闭（0）或介于两者之间\n- 门是动态的：它们的值是基于上下文计算的\n&emsp;&emsp;我们有一个输入序列$\\boldsymbol{x^{(t)}}$,我们将计算一个隐藏状态$\\boldsymbol{h^{(t)}}$和单元状态$\\boldsymbol{c^{(t)}}$的序列。在时间步t时，![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM.png)\n- 遗忘门$\\boldsymbol{f^{(t)}}$控制上一个时刻的内部状态$\\boldsymbol{c^{(t-1)}}$需要遗忘多少信息。\n- 输入门$\\boldsymbol{i^{(t)}}$控制当前时刻的候选状态$\\boldsymbol{\\widetilde{c}^{(t)}}$有多少信息需要保存。\n- 输出门$\\boldsymbol{o^{(t)}}$控制当前时刻的内部状态$\\boldsymbol{c^{(t)}}$有多少信息需要输出给外部状态$\\boldsymbol{h^{(t)}}$\n- $\\boldsymbol{\\widetilde{c}^{(t)}}$是通过非线性函数的得到的**候选状态**\n- 新的**内部状态**$\\boldsymbol{c^{(t)}}$专门进行线性的循环信息传递 \n\n&emsp;&emsp;下面这张图可以更方便来理解LSTM方程\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM_2.png)\n\n### How does LSTM solve vanishing gradients?\n&emsp;&emsp;RNN的LSTM架构更容易保存许多时间步上的信息（如果遗忘门设置为记得每一时间步上的所有信息，那么单元中的信息被无限地保存）。LSTM并不保证没有消失、爆炸梯度，但是提供了一种更容易的方法来学习远程依赖关系。\n\n### Gated Recurrent Units (GRU)\n&emsp;&emsp;**门控循环单元**是一种比LSTM网络更加简单的循环神经网络,在每个时间步t上，我们都有输入$x^{(t)}$和隐藏状态$h^{(t)}$而没有单元状态。\n&emsp;&emsp;GRU引入了一个更新门来控制当前状态需要从历史状态中保留多少信息（不经过非线性变换），同时需要从候选状态中接受多少新信息。\n$$\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}$$\n&emsp;&emsp;其中$\\boldsymbol{u^{(t)}}$为更新门，\n\n$$\\boldsymbol{u^{(t)}}=\\sigma\\left(\\boldsymbol{W_uh^{(t-1)}+\\boldsymbol{U_ux^{(t)}}+\\boldsymbol{b_u}}        \\right)$$\n\n&emsp;&emsp;在LSTM网络中，输入门和遗忘门是互补关系，具有一定的冗余性。GRU网络直接使用一个门来控制输入和遗忘之间的平衡。\n- 当$\\boldsymbol{u^{(t)}}=1$时，当前状态$\\boldsymbol{h^{(t)}}$和前一时刻的状态$\\boldsymbol{h^{(t-1)}}$之间为非线性函数关系\n- 当$\\boldsymbol{u^{(t)}}=0$时，$\\boldsymbol{h^{(t)}}$与$\\boldsymbol{h^{(t-1)}}$之间为线性函数关系。  \n\n&emsp;&emsp;在GRU网络中，$\\boldsymbol{\\widetilde{h}^{(t)}}$表示当前时刻的候选状态\n\n$$\\boldsymbol{\\widetilde{h}^{(t)}} =\\tanh \\boldsymbol{\\left(W_h(r^{(t)}\\circ h^{(t-1)})+U_hx^{(t)}+b_h         \\right)} $$\n\n&emsp;&emsp;$\\boldsymbol{r^{(t)}}$为重置门，用来控制候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}$的计算是否依赖上一时刻的状态$\\boldsymbol{h^{(t-1)}}$\n\n$$ \\boldsymbol{r^{(t)}} =\\sigma\\left(\\boldsymbol{W_rh^{(t-1)}+\\boldsymbol{U_rx^{(t)}}+\\boldsymbol{b_r}}        \\right)  $$\n\n- 当$\\boldsymbol{r^{(t)}}=0$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(U_hx^{(t)}+b)}$只和当前输入$\\boldsymbol{x^{(t)}}$有关，和历史状态无关\n- 当$\\boldsymbol{r^{(t)}}=1$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(W_hh^{(t-1)}+U_hx^{(t)}+b)}$和当前输入$\\boldsymbol{x^{(t)}}$以及历史状态$\\boldsymbol{h^{(t-1)}}$相关，和**简单循环网络**一致。\n  \n\n&emsp;&emsp;综上，GRU网络的状态更新方式为\n$$\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}$$\n&emsp;&emsp;可以看出，\n- 当$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=1$时，GRU网络退化为**简单循环网络**\n- 若$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=0$时，当前状态$\\boldsymbol{h^{(t)}}$只和当前输入$\\boldsymbol{x^{(t)}}$相关，和历史状态$\\boldsymbol{h^{(t-1)}}$无关。\n- 当$\\boldsymbol{u^{(t)}}=0$时，当前状态$\\boldsymbol{h^{(t)}}$等于上一时刻状态$\\boldsymbol{h^{(t-1)}}$，和当前输入$\\boldsymbol{x^{(t)}}$无关。\n  \n  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/GRU.png)\n\n","source":"_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs.md","raw":"---\ntitle: CS224N笔记-七-Vanishing Gradient and Fancy RNNs\ndate: 2020-06-14 17:37:00\ntags: nlp 机器学习\ncategories: CS224N\ntop: 90\ncopyright: true\nmathjax: true\n---\n&emsp;&emsp;这节课助教主要介绍了RNN的问题（其实不止在RNN上出现）并且介绍了几种更复杂的RNN变体\n\n## Vanishing gradient intuition\n&emsp;&emsp;RNN理论上可与捕捉较早的历史信息，但是由于梯度消失的原因会导致远程信息无法被有效的被捕捉到。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_gradient_intuition.PNG)\n&emsp;&emsp;当图上这些梯度很小时，反向传播得越深入，梯度信号就会越来越小。  \n&emsp;&emsp;上节课提到，t 时间步下的hidden state表达式为：\n$$ \\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right) $$\n&emsp;&emsp;由链式法则可得：\n$$\\frac{\\partial \\boldsymbol{h}^{(t)}}{\\partial \\boldsymbol{h}^{(t-1)}} = diag\\left(\\sigma^{'}\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)\\boldsymbol{W}_{h}        \\right)$$  \n&emsp;&emsp;考虑一下第$i$步上的损失梯度$J^{(i)}(\\theta)$,以及第$j$步上的隐藏状态$h^{(j)}$![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/chainrule.png)\n&emsp;&emsp;由此可见，如果权重矩阵$W_h$很小，那么这一项会随着$i$和$j$的距离越来越大而变得越来越小。  \n### why is vanishing gradient a problem?  \n&emsp;&emsp;![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/why_vanishing_gradient.png)\n&emsp;&emsp;&emsp;&emsp;来自远处的梯度信号会丢失，因为它比邻近的梯度信号小很多，模型权重只会根据近期效应而不是长期效应进行更新。\n### Effect of vanishing gradient on RNN-LM\n例如以下这个语言任务：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/language_task.png)\n&emsp;&emsp;为了从这个例子中学习，RNN-LM需要对第七步的“tickets”和最后的目标“tickets”之间的依赖关系建模，但是如果梯度很小，模型就不能学习这种依赖关系。  \n&emsp;&emsp;再如下面这个例子：\n\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_problem.PNG)\n&emsp;&emsp;由于梯度的消失，RNN-LMs更善于从顺序近因（sequential recency）学习而不是语法近因（sybtactic recency）。\n\n### why is exploding gradient a problem?  \n&emsp;&emsp;如果梯度过大，则SGD更新步骤过大：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/exploding_gradient.png)\n&emsp;&emsp;这可能导致错误的更新：更新得太多，会导致错误的参数配置。在最坏情况下，会导致网络中的**INF**或**NAN**。  \n### Gradient clipping: solution for exploding gradient\n&emsp;&emsp;**梯度裁剪**：如果梯度的范数大于某个阈值，在应用SGD更新前将其缩小：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping.png)\n&emsp;&emsp;**思路**：朝着同样的方向迈出一步，但要小一些。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping_pic.png)  \n\n### How to fix vanishing gradient problem?\n&emsp;&emsp;梯度消失的主要原因是RNN很难学习在多个时间步长下保存信息，在普通的RNN中，隐藏状态被不断地重写：\n$$ \\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}\\right) $$\n\n### Long Short-Term Memory (LSTM)\n&emsp;&emsp;长短期记忆网络是循环神经网络的一个变体，可以有效解决**简单循环神经网络**的梯度爆炸或消失问题。  \n&emsp;&emsp;在第t步，该网络有一个隐藏状态$\\boldsymbol{h^{(t)}}$和一个单元状态$\\boldsymbol{c^{(t)}}$,它们  \n- 都是长度为n的向量\n- 在每个时间步长上，门的每个元素可以打开（1）、关闭（0）或介于两者之间\n- 门是动态的：它们的值是基于上下文计算的\n&emsp;&emsp;我们有一个输入序列$\\boldsymbol{x^{(t)}}$,我们将计算一个隐藏状态$\\boldsymbol{h^{(t)}}$和单元状态$\\boldsymbol{c^{(t)}}$的序列。在时间步t时，![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM.png)\n- 遗忘门$\\boldsymbol{f^{(t)}}$控制上一个时刻的内部状态$\\boldsymbol{c^{(t-1)}}$需要遗忘多少信息。\n- 输入门$\\boldsymbol{i^{(t)}}$控制当前时刻的候选状态$\\boldsymbol{\\widetilde{c}^{(t)}}$有多少信息需要保存。\n- 输出门$\\boldsymbol{o^{(t)}}$控制当前时刻的内部状态$\\boldsymbol{c^{(t)}}$有多少信息需要输出给外部状态$\\boldsymbol{h^{(t)}}$\n- $\\boldsymbol{\\widetilde{c}^{(t)}}$是通过非线性函数的得到的**候选状态**\n- 新的**内部状态**$\\boldsymbol{c^{(t)}}$专门进行线性的循环信息传递 \n\n&emsp;&emsp;下面这张图可以更方便来理解LSTM方程\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM_2.png)\n\n### How does LSTM solve vanishing gradients?\n&emsp;&emsp;RNN的LSTM架构更容易保存许多时间步上的信息（如果遗忘门设置为记得每一时间步上的所有信息，那么单元中的信息被无限地保存）。LSTM并不保证没有消失、爆炸梯度，但是提供了一种更容易的方法来学习远程依赖关系。\n\n### Gated Recurrent Units (GRU)\n&emsp;&emsp;**门控循环单元**是一种比LSTM网络更加简单的循环神经网络,在每个时间步t上，我们都有输入$x^{(t)}$和隐藏状态$h^{(t)}$而没有单元状态。\n&emsp;&emsp;GRU引入了一个更新门来控制当前状态需要从历史状态中保留多少信息（不经过非线性变换），同时需要从候选状态中接受多少新信息。\n$$\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}$$\n&emsp;&emsp;其中$\\boldsymbol{u^{(t)}}$为更新门，\n\n$$\\boldsymbol{u^{(t)}}=\\sigma\\left(\\boldsymbol{W_uh^{(t-1)}+\\boldsymbol{U_ux^{(t)}}+\\boldsymbol{b_u}}        \\right)$$\n\n&emsp;&emsp;在LSTM网络中，输入门和遗忘门是互补关系，具有一定的冗余性。GRU网络直接使用一个门来控制输入和遗忘之间的平衡。\n- 当$\\boldsymbol{u^{(t)}}=1$时，当前状态$\\boldsymbol{h^{(t)}}$和前一时刻的状态$\\boldsymbol{h^{(t-1)}}$之间为非线性函数关系\n- 当$\\boldsymbol{u^{(t)}}=0$时，$\\boldsymbol{h^{(t)}}$与$\\boldsymbol{h^{(t-1)}}$之间为线性函数关系。  \n\n&emsp;&emsp;在GRU网络中，$\\boldsymbol{\\widetilde{h}^{(t)}}$表示当前时刻的候选状态\n\n$$\\boldsymbol{\\widetilde{h}^{(t)}} =\\tanh \\boldsymbol{\\left(W_h(r^{(t)}\\circ h^{(t-1)})+U_hx^{(t)}+b_h         \\right)} $$\n\n&emsp;&emsp;$\\boldsymbol{r^{(t)}}$为重置门，用来控制候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}$的计算是否依赖上一时刻的状态$\\boldsymbol{h^{(t-1)}}$\n\n$$ \\boldsymbol{r^{(t)}} =\\sigma\\left(\\boldsymbol{W_rh^{(t-1)}+\\boldsymbol{U_rx^{(t)}}+\\boldsymbol{b_r}}        \\right)  $$\n\n- 当$\\boldsymbol{r^{(t)}}=0$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(U_hx^{(t)}+b)}$只和当前输入$\\boldsymbol{x^{(t)}}$有关，和历史状态无关\n- 当$\\boldsymbol{r^{(t)}}=1$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(W_hh^{(t-1)}+U_hx^{(t)}+b)}$和当前输入$\\boldsymbol{x^{(t)}}$以及历史状态$\\boldsymbol{h^{(t-1)}}$相关，和**简单循环网络**一致。\n  \n\n&emsp;&emsp;综上，GRU网络的状态更新方式为\n$$\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}$$\n&emsp;&emsp;可以看出，\n- 当$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=1$时，GRU网络退化为**简单循环网络**\n- 若$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=0$时，当前状态$\\boldsymbol{h^{(t)}}$只和当前输入$\\boldsymbol{x^{(t)}}$相关，和历史状态$\\boldsymbol{h^{(t-1)}}$无关。\n- 当$\\boldsymbol{u^{(t)}}=0$时，当前状态$\\boldsymbol{h^{(t)}}$等于上一时刻状态$\\boldsymbol{h^{(t-1)}}$，和当前输入$\\boldsymbol{x^{(t)}}$无关。\n  \n  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/GRU.png)\n\n","slug":"CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs","published":1,"updated":"2020-07-02T10:19:54.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr8000aiwvzdtf2hfgx","content":"<p>&emsp;&emsp;这节课助教主要介绍了RNN的问题（其实不止在RNN上出现）并且介绍了几种更复杂的RNN变体</p>\n<h2 id=\"Vanishing-gradient-intuition\"><a href=\"#Vanishing-gradient-intuition\" class=\"headerlink\" title=\"Vanishing gradient intuition\"></a>Vanishing gradient intuition</h2><p>&emsp;&emsp;RNN理论上可与捕捉较早的历史信息，但是由于梯度消失的原因会导致远程信息无法被有效的被捕捉到。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_gradient_intuition.PNG\" alt><br>&emsp;&emsp;当图上这些梯度很小时，反向传播得越深入，梯度信号就会越来越小。<br>&emsp;&emsp;上节课提到，t 时间步下的hidden state表达式为：</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)</script><p>&emsp;&emsp;由链式法则可得：</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial \\boldsymbol{h}^{(t)}}{\\partial \\boldsymbol{h}^{(t-1)}} = diag\\left(\\sigma^{'}\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)\\boldsymbol{W}_{h}        \\right)</script><p>&emsp;&emsp;考虑一下第$i$步上的损失梯度$J^{(i)}(\\theta)$,以及第$j$步上的隐藏状态$h^{(j)}$<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/chainrule.png\" alt><br>&emsp;&emsp;由此可见，如果权重矩阵$W_h$很小，那么这一项会随着$i$和$j$的距离越来越大而变得越来越小。  </p>\n<h3 id=\"why-is-vanishing-gradient-a-problem\"><a href=\"#why-is-vanishing-gradient-a-problem\" class=\"headerlink\" title=\"why is vanishing gradient a problem?\"></a>why is vanishing gradient a problem?</h3><p>&emsp;&emsp;<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/why_vanishing_gradient.png\" alt><br>&emsp;&emsp;&emsp;&emsp;来自远处的梯度信号会丢失，因为它比邻近的梯度信号小很多，模型权重只会根据近期效应而不是长期效应进行更新。</p>\n<h3 id=\"Effect-of-vanishing-gradient-on-RNN-LM\"><a href=\"#Effect-of-vanishing-gradient-on-RNN-LM\" class=\"headerlink\" title=\"Effect of vanishing gradient on RNN-LM\"></a>Effect of vanishing gradient on RNN-LM</h3><p>例如以下这个语言任务：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/language_task.png\" alt><br>&emsp;&emsp;为了从这个例子中学习，RNN-LM需要对第七步的“tickets”和最后的目标“tickets”之间的依赖关系建模，但是如果梯度很小，模型就不能学习这种依赖关系。<br>&emsp;&emsp;再如下面这个例子：</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_problem.PNG\" alt><br>&emsp;&emsp;由于梯度的消失，RNN-LMs更善于从顺序近因（sequential recency）学习而不是语法近因（sybtactic recency）。</p>\n<h3 id=\"why-is-exploding-gradient-a-problem\"><a href=\"#why-is-exploding-gradient-a-problem\" class=\"headerlink\" title=\"why is exploding gradient a problem?\"></a>why is exploding gradient a problem?</h3><p>&emsp;&emsp;如果梯度过大，则SGD更新步骤过大：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/exploding_gradient.png\" alt><br>&emsp;&emsp;这可能导致错误的更新：更新得太多，会导致错误的参数配置。在最坏情况下，会导致网络中的<strong>INF</strong>或<strong>NAN</strong>。  </p>\n<h3 id=\"Gradient-clipping-solution-for-exploding-gradient\"><a href=\"#Gradient-clipping-solution-for-exploding-gradient\" class=\"headerlink\" title=\"Gradient clipping: solution for exploding gradient\"></a>Gradient clipping: solution for exploding gradient</h3><p>&emsp;&emsp;<strong>梯度裁剪</strong>：如果梯度的范数大于某个阈值，在应用SGD更新前将其缩小：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping.png\" alt><br>&emsp;&emsp;<strong>思路</strong>：朝着同样的方向迈出一步，但要小一些。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping_pic.png\" alt>  </p>\n<h3 id=\"How-to-fix-vanishing-gradient-problem\"><a href=\"#How-to-fix-vanishing-gradient-problem\" class=\"headerlink\" title=\"How to fix vanishing gradient problem?\"></a>How to fix vanishing gradient problem?</h3><p>&emsp;&emsp;梯度消失的主要原因是RNN很难学习在多个时间步长下保存信息，在普通的RNN中，隐藏状态被不断地重写：</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}\\right)</script><h3 id=\"Long-Short-Term-Memory-LSTM\"><a href=\"#Long-Short-Term-Memory-LSTM\" class=\"headerlink\" title=\"Long Short-Term Memory (LSTM)\"></a>Long Short-Term Memory (LSTM)</h3><p>&emsp;&emsp;长短期记忆网络是循环神经网络的一个变体，可以有效解决<strong>简单循环神经网络</strong>的梯度爆炸或消失问题。<br>&emsp;&emsp;在第t步，该网络有一个隐藏状态$\\boldsymbol{h^{(t)}}$和一个单元状态$\\boldsymbol{c^{(t)}}$,它们  </p>\n<ul>\n<li>都是长度为n的向量</li>\n<li>在每个时间步长上，门的每个元素可以打开（1）、关闭（0）或介于两者之间</li>\n<li>门是动态的：它们的值是基于上下文计算的<br>&emsp;&emsp;我们有一个输入序列$\\boldsymbol{x^{(t)}}$,我们将计算一个隐藏状态$\\boldsymbol{h^{(t)}}$和单元状态$\\boldsymbol{c^{(t)}}$的序列。在时间步t时，<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM.png\" alt></li>\n<li>遗忘门$\\boldsymbol{f^{(t)}}$控制上一个时刻的内部状态$\\boldsymbol{c^{(t-1)}}$需要遗忘多少信息。</li>\n<li>输入门$\\boldsymbol{i^{(t)}}$控制当前时刻的候选状态$\\boldsymbol{\\widetilde{c}^{(t)}}$有多少信息需要保存。</li>\n<li>输出门$\\boldsymbol{o^{(t)}}$控制当前时刻的内部状态$\\boldsymbol{c^{(t)}}$有多少信息需要输出给外部状态$\\boldsymbol{h^{(t)}}$</li>\n<li>$\\boldsymbol{\\widetilde{c}^{(t)}}$是通过非线性函数的得到的<strong>候选状态</strong></li>\n<li>新的<strong>内部状态</strong>$\\boldsymbol{c^{(t)}}$专门进行线性的循环信息传递 </li>\n</ul>\n<p>&emsp;&emsp;下面这张图可以更方便来理解LSTM方程<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM_2.png\" alt></p>\n<h3 id=\"How-does-LSTM-solve-vanishing-gradients\"><a href=\"#How-does-LSTM-solve-vanishing-gradients\" class=\"headerlink\" title=\"How does LSTM solve vanishing gradients?\"></a>How does LSTM solve vanishing gradients?</h3><p>&emsp;&emsp;RNN的LSTM架构更容易保存许多时间步上的信息（如果遗忘门设置为记得每一时间步上的所有信息，那么单元中的信息被无限地保存）。LSTM并不保证没有消失、爆炸梯度，但是提供了一种更容易的方法来学习远程依赖关系。</p>\n<h3 id=\"Gated-Recurrent-Units-GRU\"><a href=\"#Gated-Recurrent-Units-GRU\" class=\"headerlink\" title=\"Gated Recurrent Units (GRU)\"></a>Gated Recurrent Units (GRU)</h3><p>&emsp;&emsp;<strong>门控循环单元</strong>是一种比LSTM网络更加简单的循环神经网络,在每个时间步t上，我们都有输入$x^{(t)}$和隐藏状态$h^{(t)}$而没有单元状态。<br>&emsp;&emsp;GRU引入了一个更新门来控制当前状态需要从历史状态中保留多少信息（不经过非线性变换），同时需要从候选状态中接受多少新信息。</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}</script><p>&emsp;&emsp;其中$\\boldsymbol{u^{(t)}}$为更新门，</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{u^{(t)}}=\\sigma\\left(\\boldsymbol{W_uh^{(t-1)}+\\boldsymbol{U_ux^{(t)}}+\\boldsymbol{b_u}}        \\right)</script><p>&emsp;&emsp;在LSTM网络中，输入门和遗忘门是互补关系，具有一定的冗余性。GRU网络直接使用一个门来控制输入和遗忘之间的平衡。</p>\n<ul>\n<li>当$\\boldsymbol{u^{(t)}}=1$时，当前状态$\\boldsymbol{h^{(t)}}$和前一时刻的状态$\\boldsymbol{h^{(t-1)}}$之间为非线性函数关系</li>\n<li>当$\\boldsymbol{u^{(t)}}=0$时，$\\boldsymbol{h^{(t)}}$与$\\boldsymbol{h^{(t-1)}}$之间为线性函数关系。  </li>\n</ul>\n<p>&emsp;&emsp;在GRU网络中，$\\boldsymbol{\\widetilde{h}^{(t)}}$表示当前时刻的候选状态</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{\\widetilde{h}^{(t)}} =\\tanh \\boldsymbol{\\left(W_h(r^{(t)}\\circ h^{(t-1)})+U_hx^{(t)}+b_h         \\right)}</script><p>&emsp;&emsp;$\\boldsymbol{r^{(t)}}$为重置门，用来控制候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}$的计算是否依赖上一时刻的状态$\\boldsymbol{h^{(t-1)}}$</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{r^{(t)}} =\\sigma\\left(\\boldsymbol{W_rh^{(t-1)}+\\boldsymbol{U_rx^{(t)}}+\\boldsymbol{b_r}}        \\right)</script><ul>\n<li>当$\\boldsymbol{r^{(t)}}=0$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(U_hx^{(t)}+b)}$只和当前输入$\\boldsymbol{x^{(t)}}$有关，和历史状态无关</li>\n<li>当$\\boldsymbol{r^{(t)}}=1$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(W_hh^{(t-1)}+U_hx^{(t)}+b)}$和当前输入$\\boldsymbol{x^{(t)}}$以及历史状态$\\boldsymbol{h^{(t-1)}}$相关，和<strong>简单循环网络</strong>一致。</li>\n</ul>\n<p>&emsp;&emsp;综上，GRU网络的状态更新方式为</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}</script><p>&emsp;&emsp;可以看出，</p>\n<ul>\n<li>当$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=1$时，GRU网络退化为<strong>简单循环网络</strong></li>\n<li>若$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=0$时，当前状态$\\boldsymbol{h^{(t)}}$只和当前输入$\\boldsymbol{x^{(t)}}$相关，和历史状态$\\boldsymbol{h^{(t-1)}}$无关。</li>\n<li>当$\\boldsymbol{u^{(t)}}=0$时，当前状态$\\boldsymbol{h^{(t)}}$等于上一时刻状态$\\boldsymbol{h^{(t-1)}}$，和当前输入$\\boldsymbol{x^{(t)}}$无关。</li>\n</ul>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/GRU.png\" alt></p>\n","site":{"data":{}},"length":4330,"excerpt":"","more":"<p>&emsp;&emsp;这节课助教主要介绍了RNN的问题（其实不止在RNN上出现）并且介绍了几种更复杂的RNN变体</p>\n<h2 id=\"Vanishing-gradient-intuition\"><a href=\"#Vanishing-gradient-intuition\" class=\"headerlink\" title=\"Vanishing gradient intuition\"></a>Vanishing gradient intuition</h2><p>&emsp;&emsp;RNN理论上可与捕捉较早的历史信息，但是由于梯度消失的原因会导致远程信息无法被有效的被捕捉到。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_gradient_intuition.PNG\" alt><br>&emsp;&emsp;当图上这些梯度很小时，反向传播得越深入，梯度信号就会越来越小。<br>&emsp;&emsp;上节课提到，t 时间步下的hidden state表达式为：</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)</script><p>&emsp;&emsp;由链式法则可得：</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial \\boldsymbol{h}^{(t)}}{\\partial \\boldsymbol{h}^{(t-1)}} = diag\\left(\\sigma^{'}\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}_{1}\\right)\\boldsymbol{W}_{h}        \\right)</script><p>&emsp;&emsp;考虑一下第$i$步上的损失梯度$J^{(i)}(\\theta)$,以及第$j$步上的隐藏状态$h^{(j)}$<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/chainrule.png\" alt><br>&emsp;&emsp;由此可见，如果权重矩阵$W_h$很小，那么这一项会随着$i$和$j$的距离越来越大而变得越来越小。  </p>\n<h3 id=\"why-is-vanishing-gradient-a-problem\"><a href=\"#why-is-vanishing-gradient-a-problem\" class=\"headerlink\" title=\"why is vanishing gradient a problem?\"></a>why is vanishing gradient a problem?</h3><p>&emsp;&emsp;<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/why_vanishing_gradient.png\" alt><br>&emsp;&emsp;&emsp;&emsp;来自远处的梯度信号会丢失，因为它比邻近的梯度信号小很多，模型权重只会根据近期效应而不是长期效应进行更新。</p>\n<h3 id=\"Effect-of-vanishing-gradient-on-RNN-LM\"><a href=\"#Effect-of-vanishing-gradient-on-RNN-LM\" class=\"headerlink\" title=\"Effect of vanishing gradient on RNN-LM\"></a>Effect of vanishing gradient on RNN-LM</h3><p>例如以下这个语言任务：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/language_task.png\" alt><br>&emsp;&emsp;为了从这个例子中学习，RNN-LM需要对第七步的“tickets”和最后的目标“tickets”之间的依赖关系建模，但是如果梯度很小，模型就不能学习这种依赖关系。<br>&emsp;&emsp;再如下面这个例子：</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/vanishing_problem.PNG\" alt><br>&emsp;&emsp;由于梯度的消失，RNN-LMs更善于从顺序近因（sequential recency）学习而不是语法近因（sybtactic recency）。</p>\n<h3 id=\"why-is-exploding-gradient-a-problem\"><a href=\"#why-is-exploding-gradient-a-problem\" class=\"headerlink\" title=\"why is exploding gradient a problem?\"></a>why is exploding gradient a problem?</h3><p>&emsp;&emsp;如果梯度过大，则SGD更新步骤过大：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/exploding_gradient.png\" alt><br>&emsp;&emsp;这可能导致错误的更新：更新得太多，会导致错误的参数配置。在最坏情况下，会导致网络中的<strong>INF</strong>或<strong>NAN</strong>。  </p>\n<h3 id=\"Gradient-clipping-solution-for-exploding-gradient\"><a href=\"#Gradient-clipping-solution-for-exploding-gradient\" class=\"headerlink\" title=\"Gradient clipping: solution for exploding gradient\"></a>Gradient clipping: solution for exploding gradient</h3><p>&emsp;&emsp;<strong>梯度裁剪</strong>：如果梯度的范数大于某个阈值，在应用SGD更新前将其缩小：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping.png\" alt><br>&emsp;&emsp;<strong>思路</strong>：朝着同样的方向迈出一步，但要小一些。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/gradient_clipping_pic.png\" alt>  </p>\n<h3 id=\"How-to-fix-vanishing-gradient-problem\"><a href=\"#How-to-fix-vanishing-gradient-problem\" class=\"headerlink\" title=\"How to fix vanishing gradient problem?\"></a>How to fix vanishing gradient problem?</h3><p>&emsp;&emsp;梯度消失的主要原因是RNN很难学习在多个时间步长下保存信息，在普通的RNN中，隐藏状态被不断地重写：</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h}^{(t)}=\\sigma\\left(\\boldsymbol{W}_{h} \\boldsymbol{h}^{(t-1)}+\\boldsymbol{W}_{x} \\boldsymbol{x}^{(t)}+\\boldsymbol{b}\\right)</script><h3 id=\"Long-Short-Term-Memory-LSTM\"><a href=\"#Long-Short-Term-Memory-LSTM\" class=\"headerlink\" title=\"Long Short-Term Memory (LSTM)\"></a>Long Short-Term Memory (LSTM)</h3><p>&emsp;&emsp;长短期记忆网络是循环神经网络的一个变体，可以有效解决<strong>简单循环神经网络</strong>的梯度爆炸或消失问题。<br>&emsp;&emsp;在第t步，该网络有一个隐藏状态$\\boldsymbol{h^{(t)}}$和一个单元状态$\\boldsymbol{c^{(t)}}$,它们  </p>\n<ul>\n<li>都是长度为n的向量</li>\n<li>在每个时间步长上，门的每个元素可以打开（1）、关闭（0）或介于两者之间</li>\n<li>门是动态的：它们的值是基于上下文计算的<br>&emsp;&emsp;我们有一个输入序列$\\boldsymbol{x^{(t)}}$,我们将计算一个隐藏状态$\\boldsymbol{h^{(t)}}$和单元状态$\\boldsymbol{c^{(t)}}$的序列。在时间步t时，<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM.png\" alt></li>\n<li>遗忘门$\\boldsymbol{f^{(t)}}$控制上一个时刻的内部状态$\\boldsymbol{c^{(t-1)}}$需要遗忘多少信息。</li>\n<li>输入门$\\boldsymbol{i^{(t)}}$控制当前时刻的候选状态$\\boldsymbol{\\widetilde{c}^{(t)}}$有多少信息需要保存。</li>\n<li>输出门$\\boldsymbol{o^{(t)}}$控制当前时刻的内部状态$\\boldsymbol{c^{(t)}}$有多少信息需要输出给外部状态$\\boldsymbol{h^{(t)}}$</li>\n<li>$\\boldsymbol{\\widetilde{c}^{(t)}}$是通过非线性函数的得到的<strong>候选状态</strong></li>\n<li>新的<strong>内部状态</strong>$\\boldsymbol{c^{(t)}}$专门进行线性的循环信息传递 </li>\n</ul>\n<p>&emsp;&emsp;下面这张图可以更方便来理解LSTM方程<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/LSTM_2.png\" alt></p>\n<h3 id=\"How-does-LSTM-solve-vanishing-gradients\"><a href=\"#How-does-LSTM-solve-vanishing-gradients\" class=\"headerlink\" title=\"How does LSTM solve vanishing gradients?\"></a>How does LSTM solve vanishing gradients?</h3><p>&emsp;&emsp;RNN的LSTM架构更容易保存许多时间步上的信息（如果遗忘门设置为记得每一时间步上的所有信息，那么单元中的信息被无限地保存）。LSTM并不保证没有消失、爆炸梯度，但是提供了一种更容易的方法来学习远程依赖关系。</p>\n<h3 id=\"Gated-Recurrent-Units-GRU\"><a href=\"#Gated-Recurrent-Units-GRU\" class=\"headerlink\" title=\"Gated Recurrent Units (GRU)\"></a>Gated Recurrent Units (GRU)</h3><p>&emsp;&emsp;<strong>门控循环单元</strong>是一种比LSTM网络更加简单的循环神经网络,在每个时间步t上，我们都有输入$x^{(t)}$和隐藏状态$h^{(t)}$而没有单元状态。<br>&emsp;&emsp;GRU引入了一个更新门来控制当前状态需要从历史状态中保留多少信息（不经过非线性变换），同时需要从候选状态中接受多少新信息。</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}</script><p>&emsp;&emsp;其中$\\boldsymbol{u^{(t)}}$为更新门，</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{u^{(t)}}=\\sigma\\left(\\boldsymbol{W_uh^{(t-1)}+\\boldsymbol{U_ux^{(t)}}+\\boldsymbol{b_u}}        \\right)</script><p>&emsp;&emsp;在LSTM网络中，输入门和遗忘门是互补关系，具有一定的冗余性。GRU网络直接使用一个门来控制输入和遗忘之间的平衡。</p>\n<ul>\n<li>当$\\boldsymbol{u^{(t)}}=1$时，当前状态$\\boldsymbol{h^{(t)}}$和前一时刻的状态$\\boldsymbol{h^{(t-1)}}$之间为非线性函数关系</li>\n<li>当$\\boldsymbol{u^{(t)}}=0$时，$\\boldsymbol{h^{(t)}}$与$\\boldsymbol{h^{(t-1)}}$之间为线性函数关系。  </li>\n</ul>\n<p>&emsp;&emsp;在GRU网络中，$\\boldsymbol{\\widetilde{h}^{(t)}}$表示当前时刻的候选状态</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{\\widetilde{h}^{(t)}} =\\tanh \\boldsymbol{\\left(W_h(r^{(t)}\\circ h^{(t-1)})+U_hx^{(t)}+b_h         \\right)}</script><p>&emsp;&emsp;$\\boldsymbol{r^{(t)}}$为重置门，用来控制候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}$的计算是否依赖上一时刻的状态$\\boldsymbol{h^{(t-1)}}$</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{r^{(t)}} =\\sigma\\left(\\boldsymbol{W_rh^{(t-1)}+\\boldsymbol{U_rx^{(t)}}+\\boldsymbol{b_r}}        \\right)</script><ul>\n<li>当$\\boldsymbol{r^{(t)}}=0$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(U_hx^{(t)}+b)}$只和当前输入$\\boldsymbol{x^{(t)}}$有关，和历史状态无关</li>\n<li>当$\\boldsymbol{r^{(t)}}=1$时，候选状态$\\boldsymbol{\\widetilde{h}^{(t)}}=\\tanh\\boldsymbol{(W_hh^{(t-1)}+U_hx^{(t)}+b)}$和当前输入$\\boldsymbol{x^{(t)}}$以及历史状态$\\boldsymbol{h^{(t-1)}}$相关，和<strong>简单循环网络</strong>一致。</li>\n</ul>\n<p>&emsp;&emsp;综上，GRU网络的状态更新方式为</p>\n<script type=\"math/tex; mode=display\">\\boldsymbol{h^{(t)}} = (1-\\boldsymbol{u^{(t)}})\\circ \\boldsymbol{h^{(t-1)}}+\\boldsymbol{u^{(t)}}\\circ \\boldsymbol{\\widetilde{h}^{(t)}}</script><p>&emsp;&emsp;可以看出，</p>\n<ul>\n<li>当$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=1$时，GRU网络退化为<strong>简单循环网络</strong></li>\n<li>若$\\boldsymbol{u^{(t)}}=1，\\boldsymbol{r}=0$时，当前状态$\\boldsymbol{h^{(t)}}$只和当前输入$\\boldsymbol{x^{(t)}}$相关，和历史状态$\\boldsymbol{h^{(t-1)}}$无关。</li>\n<li>当$\\boldsymbol{u^{(t)}}=0$时，当前状态$\\boldsymbol{h^{(t)}}$等于上一时刻状态$\\boldsymbol{h^{(t-1)}}$，和当前输入$\\boldsymbol{x^{(t)}}$无关。</li>\n</ul>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/GRU.png\" alt></p>\n"},{"title":"CS224N笔记(五)-Dependency Parsing","date":"2020-06-11T07:13:51.000Z","top":80,"copyright":true,"mathjax":true,"_content":"# Linguistic Structure:Dependency Parsing   \n&emsp;&emsp;对于**句法结构（syntactic structure）**而言,教授提到主要有两种方式：**Constituency Parsing**与**Dependency Parsing**\n\n## Constituency Parsing\n&emsp;&emsp;Constituency Parsing主要使用短语语法来不断地将词语整理成嵌套的组成成分，又被称为context-free grammers(CFG)\n- 短语结构将单词组织成嵌套的成分\n- 单词被赋予了一个词性\n- 短语可以递归形成更大的短语\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/CFGS.PNG)\n\n## Dependency Parsing\n&emsp;&emsp;不是使用各种类型的短语，而是直接通过单词与其他单词的关系表示句子的结构，显示哪些单词依赖于哪些其他单词\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Dependemcy_Look.png)\n\n&emsp;&emsp;为什么我们需要句子结构\n- 为了能够正确地解释语言，我们需要理解句子结构\n- 人们通过将单词组合成更大的单元来传达复杂的思想，从而交流复杂的思想\n- 我们需要知道哪些词是哪些词的修饰词，否则我们无法弄清句子是什么意思\n\n&emsp;&emsp;课堂上教授主要介绍了这几种类型的歧义：\n- 介词短语依附歧义：拿刀的是警察还是被杀的人？ ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/介词短语依附歧义.png)\n&emsp;  \n- 协调范围模糊：主语是一个人还是两个人？![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/协调范围模糊.png)\n&emsp;  \n- 形容词修饰语歧义：是直接（first hand）的工作还是第一份hand job？🤔![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/handjob.png)\n&emsp;  \n- 动词短语依附歧义：文中的***to be used for Olympic beach volleyball*** 作为动词短语修饰的是body还是beach?![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/动词短语歧义.png)\n&emsp;  \n&emsp;  \n&emsp;&emsp;面对复杂的句子结构，我们可能需要处理的数量级是指数级的，这个序列被称为[卡特兰数](https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0)\n$$C_{n} = \\frac{(2n)!}{[(n+1)!n!]}$$\n&emsp;&emsp;Dependency Structure展示了词语之间的依赖关系，通常用箭头表示其依存关系，有时也会在肩头上标出具体的语法关系。  \n&emsp;&emsp;Dependency Structure有两种表现形式，一种是直接在句子上标出依存关系箭头及语法关系：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/箭头符号.PNG)\n&emsp;&emsp;另一种是将其做成树状结构：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/树状图.PNG)\n&emsp;&emsp;Dependency Parsing可以认为是给定输入句子$S=w_0w_1...w_n$(其中$w_0$经常是设置的fake root,使得每一个词都依赖于一个节点)构建对应的Dependency Tree Graph的任务，而**Transition-based Dependency Parsing**是其中的一个有效方法。\n### Transition-based Dependency Parsing\n&emsp;&emsp;可以将其看成一种[状态机](https://zh.wikipedia.org/wiki/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA),对于$S=w_0w_1...w_n$,state由三部分构成$(\\sigma,\\beta,A)$。  \n&emsp;&emsp;$\\sigma$是$S$中若干$w_i$构成的stack  \n&emsp;&emsp;$\\beta$是$S$中若干$w_i$构成的buffer  \n&emsp;&emsp;$A$是denpency arc(代表依赖关系的箭头)构成的集合，每一条边的形式是$(w_i,r,w_j)$,其中$r$描述了节点之间的依存关系。  \n&emsp;&emsp;初始状态下，$\\sigma$仅包含root $w_0$,$\\beta$包含了所有单词$w_1...w_n$,而A是空集合$\\emptyset$。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/初始状态.PNG)\n\n&emsp;&emsp;最终目标是$\\sigma$包含root $w_0$，$\\beta$清空，而$A$包含了所有的dependency arc,则$A$就是我们想要的描述Denpendency的结果。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/中止状态.PNG)\n&emsp;&emsp;状态间的转换有三类\n- SHIFT:将buffer中的第一个词移除并放到stack上\n- LEFT-ARC：将$(w_j,r,w_i)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。\n- RIGHT-ARC：将$(w_i,r,w_j)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.PNG)\n&emsp;&emsp;我们不断的进行上述三类操作，直到从初始态达到最终态。在每个状态下如何选择哪种操作呢？当我们考虑到LEFT-ARC与RIGHT-ARC各有|R|（|R|为r的类的个数）种class，我们可以将其看做是class数为2|R|+1的分类问题，可以用SVM等传统机器学习方法解决。\n### Evaluation\n&emsp;&emsp;针对上面的模型，我们有两种评估方式。一个是**LAS（labeled attachment score）**,只有在arc的箭头以及语法关系均正确时才算正确，另一种是**UAS（unlabeled attachment score）**,只要arc的箭头方向正确即可。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Evaluation.PNG)\n### Neural Dependency Parsing\n&emsp;&emsp;传统的Transition-based Dependency Parsing对feature engineering要求较高，我们可以用神经网络来减少human labor。\n&emsp;&emsp;对于Neural Dependency Parser，其输入特征通常包含三种：\n- stack和buffer中的单词及其dependent word。\n- 单词的Part-of-Speech tag。\n- 描述语法关系的arc label。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/三类输入.jpg)\n&emsp;&emsp;我们将其转换为embedding vector并将它们联结起来作为输入层，再经过若干非线性的隐藏层，最后加入softmax layer得到每个class的概率。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.jpg)\n","source":"_posts/CS224N笔记-五-Dependency-Parsing.md","raw":"---\ntitle: CS224N笔记(五)-Dependency Parsing\ndate: 2020-06-11 15:13:51\ntags: nlp 机器学习\ncategories: CS224N\ntop: 80\ncopyright: true\nmathjax: true \n---\n# Linguistic Structure:Dependency Parsing   \n&emsp;&emsp;对于**句法结构（syntactic structure）**而言,教授提到主要有两种方式：**Constituency Parsing**与**Dependency Parsing**\n\n## Constituency Parsing\n&emsp;&emsp;Constituency Parsing主要使用短语语法来不断地将词语整理成嵌套的组成成分，又被称为context-free grammers(CFG)\n- 短语结构将单词组织成嵌套的成分\n- 单词被赋予了一个词性\n- 短语可以递归形成更大的短语\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/CFGS.PNG)\n\n## Dependency Parsing\n&emsp;&emsp;不是使用各种类型的短语，而是直接通过单词与其他单词的关系表示句子的结构，显示哪些单词依赖于哪些其他单词\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Dependemcy_Look.png)\n\n&emsp;&emsp;为什么我们需要句子结构\n- 为了能够正确地解释语言，我们需要理解句子结构\n- 人们通过将单词组合成更大的单元来传达复杂的思想，从而交流复杂的思想\n- 我们需要知道哪些词是哪些词的修饰词，否则我们无法弄清句子是什么意思\n\n&emsp;&emsp;课堂上教授主要介绍了这几种类型的歧义：\n- 介词短语依附歧义：拿刀的是警察还是被杀的人？ ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/介词短语依附歧义.png)\n&emsp;  \n- 协调范围模糊：主语是一个人还是两个人？![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/协调范围模糊.png)\n&emsp;  \n- 形容词修饰语歧义：是直接（first hand）的工作还是第一份hand job？🤔![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/handjob.png)\n&emsp;  \n- 动词短语依附歧义：文中的***to be used for Olympic beach volleyball*** 作为动词短语修饰的是body还是beach?![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/动词短语歧义.png)\n&emsp;  \n&emsp;  \n&emsp;&emsp;面对复杂的句子结构，我们可能需要处理的数量级是指数级的，这个序列被称为[卡特兰数](https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0)\n$$C_{n} = \\frac{(2n)!}{[(n+1)!n!]}$$\n&emsp;&emsp;Dependency Structure展示了词语之间的依赖关系，通常用箭头表示其依存关系，有时也会在肩头上标出具体的语法关系。  \n&emsp;&emsp;Dependency Structure有两种表现形式，一种是直接在句子上标出依存关系箭头及语法关系：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/箭头符号.PNG)\n&emsp;&emsp;另一种是将其做成树状结构：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/树状图.PNG)\n&emsp;&emsp;Dependency Parsing可以认为是给定输入句子$S=w_0w_1...w_n$(其中$w_0$经常是设置的fake root,使得每一个词都依赖于一个节点)构建对应的Dependency Tree Graph的任务，而**Transition-based Dependency Parsing**是其中的一个有效方法。\n### Transition-based Dependency Parsing\n&emsp;&emsp;可以将其看成一种[状态机](https://zh.wikipedia.org/wiki/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA),对于$S=w_0w_1...w_n$,state由三部分构成$(\\sigma,\\beta,A)$。  \n&emsp;&emsp;$\\sigma$是$S$中若干$w_i$构成的stack  \n&emsp;&emsp;$\\beta$是$S$中若干$w_i$构成的buffer  \n&emsp;&emsp;$A$是denpency arc(代表依赖关系的箭头)构成的集合，每一条边的形式是$(w_i,r,w_j)$,其中$r$描述了节点之间的依存关系。  \n&emsp;&emsp;初始状态下，$\\sigma$仅包含root $w_0$,$\\beta$包含了所有单词$w_1...w_n$,而A是空集合$\\emptyset$。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/初始状态.PNG)\n\n&emsp;&emsp;最终目标是$\\sigma$包含root $w_0$，$\\beta$清空，而$A$包含了所有的dependency arc,则$A$就是我们想要的描述Denpendency的结果。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/中止状态.PNG)\n&emsp;&emsp;状态间的转换有三类\n- SHIFT:将buffer中的第一个词移除并放到stack上\n- LEFT-ARC：将$(w_j,r,w_i)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。\n- RIGHT-ARC：将$(w_i,r,w_j)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.PNG)\n&emsp;&emsp;我们不断的进行上述三类操作，直到从初始态达到最终态。在每个状态下如何选择哪种操作呢？当我们考虑到LEFT-ARC与RIGHT-ARC各有|R|（|R|为r的类的个数）种class，我们可以将其看做是class数为2|R|+1的分类问题，可以用SVM等传统机器学习方法解决。\n### Evaluation\n&emsp;&emsp;针对上面的模型，我们有两种评估方式。一个是**LAS（labeled attachment score）**,只有在arc的箭头以及语法关系均正确时才算正确，另一种是**UAS（unlabeled attachment score）**,只要arc的箭头方向正确即可。![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Evaluation.PNG)\n### Neural Dependency Parsing\n&emsp;&emsp;传统的Transition-based Dependency Parsing对feature engineering要求较高，我们可以用神经网络来减少human labor。\n&emsp;&emsp;对于Neural Dependency Parser，其输入特征通常包含三种：\n- stack和buffer中的单词及其dependent word。\n- 单词的Part-of-Speech tag。\n- 描述语法关系的arc label。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/三类输入.jpg)\n&emsp;&emsp;我们将其转换为embedding vector并将它们联结起来作为输入层，再经过若干非线性的隐藏层，最后加入softmax layer得到每个class的概率。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.jpg)\n","slug":"CS224N笔记-五-Dependency-Parsing","published":1,"updated":"2020-06-11T13:39:20.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jr9000biwvzbt0wfjzt","content":"<h1 id=\"Linguistic-Structure-Dependency-Parsing\"><a href=\"#Linguistic-Structure-Dependency-Parsing\" class=\"headerlink\" title=\"Linguistic Structure:Dependency Parsing\"></a>Linguistic Structure:Dependency Parsing</h1><p>&emsp;&emsp;对于<strong>句法结构（syntactic structure）</strong>而言,教授提到主要有两种方式：<strong>Constituency Parsing</strong>与<strong>Dependency Parsing</strong></p>\n<h2 id=\"Constituency-Parsing\"><a href=\"#Constituency-Parsing\" class=\"headerlink\" title=\"Constituency Parsing\"></a>Constituency Parsing</h2><p>&emsp;&emsp;Constituency Parsing主要使用短语语法来不断地将词语整理成嵌套的组成成分，又被称为context-free grammers(CFG)</p>\n<ul>\n<li>短语结构将单词组织成嵌套的成分</li>\n<li>单词被赋予了一个词性</li>\n<li>短语可以递归形成更大的短语<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/CFGS.PNG\" alt></li>\n</ul>\n<h2 id=\"Dependency-Parsing\"><a href=\"#Dependency-Parsing\" class=\"headerlink\" title=\"Dependency Parsing\"></a>Dependency Parsing</h2><p>&emsp;&emsp;不是使用各种类型的短语，而是直接通过单词与其他单词的关系表示句子的结构，显示哪些单词依赖于哪些其他单词<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Dependemcy_Look.png\" alt></p>\n<p>&emsp;&emsp;为什么我们需要句子结构</p>\n<ul>\n<li>为了能够正确地解释语言，我们需要理解句子结构</li>\n<li>人们通过将单词组合成更大的单元来传达复杂的思想，从而交流复杂的思想</li>\n<li>我们需要知道哪些词是哪些词的修饰词，否则我们无法弄清句子是什么意思</li>\n</ul>\n<p>&emsp;&emsp;课堂上教授主要介绍了这几种类型的歧义：</p>\n<ul>\n<li>介词短语依附歧义：拿刀的是警察还是被杀的人？ <img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/介词短语依附歧义.png\" alt><br>&emsp;  </li>\n<li>协调范围模糊：主语是一个人还是两个人？<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/协调范围模糊.png\" alt><br>&emsp;  </li>\n<li>形容词修饰语歧义：是直接（first hand）的工作还是第一份hand job？🤔<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/handjob.png\" alt><br>&emsp;  </li>\n<li>动词短语依附歧义：文中的<strong><em>to be used for Olympic beach volleyball</em></strong> 作为动词短语修饰的是body还是beach?<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/动词短语歧义.png\" alt><br>&emsp;<br>&emsp;<br>&emsp;&emsp;面对复杂的句子结构，我们可能需要处理的数量级是指数级的，这个序列被称为<a href=\"https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0\" target=\"_blank\" rel=\"noopener\">卡特兰数</a><script type=\"math/tex; mode=display\">C_{n} = \\frac{(2n)!}{[(n+1)!n!]}</script>&emsp;&emsp;Dependency Structure展示了词语之间的依赖关系，通常用箭头表示其依存关系，有时也会在肩头上标出具体的语法关系。<br>&emsp;&emsp;Dependency Structure有两种表现形式，一种是直接在句子上标出依存关系箭头及语法关系：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/箭头符号.PNG\" alt><br>&emsp;&emsp;另一种是将其做成树状结构：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/树状图.PNG\" alt><br>&emsp;&emsp;Dependency Parsing可以认为是给定输入句子$S=w_0w_1…w_n$(其中$w_0$经常是设置的fake root,使得每一个词都依赖于一个节点)构建对应的Dependency Tree Graph的任务，而<strong>Transition-based Dependency Parsing</strong>是其中的一个有效方法。<h3 id=\"Transition-based-Dependency-Parsing\"><a href=\"#Transition-based-Dependency-Parsing\" class=\"headerlink\" title=\"Transition-based Dependency Parsing\"></a>Transition-based Dependency Parsing</h3>&emsp;&emsp;可以将其看成一种<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA\" target=\"_blank\" rel=\"noopener\">状态机</a>,对于$S=w_0w_1…w_n$,state由三部分构成$(\\sigma,\\beta,A)$。<br>&emsp;&emsp;$\\sigma$是$S$中若干$w_i$构成的stack<br>&emsp;&emsp;$\\beta$是$S$中若干$w_i$构成的buffer<br>&emsp;&emsp;$A$是denpency arc(代表依赖关系的箭头)构成的集合，每一条边的形式是$(w_i,r,w_j)$,其中$r$描述了节点之间的依存关系。<br>&emsp;&emsp;初始状态下，$\\sigma$仅包含root $w_0$,$\\beta$包含了所有单词$w_1…w_n$,而A是空集合$\\emptyset$。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/初始状态.PNG\" alt></li>\n</ul>\n<p>&emsp;&emsp;最终目标是$\\sigma$包含root $w_0$，$\\beta$清空，而$A$包含了所有的dependency arc,则$A$就是我们想要的描述Denpendency的结果。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/中止状态.PNG\" alt><br>&emsp;&emsp;状态间的转换有三类</p>\n<ul>\n<li>SHIFT:将buffer中的第一个词移除并放到stack上</li>\n<li>LEFT-ARC：将$(w_j,r,w_i)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。</li>\n<li>RIGHT-ARC：将$(w_i,r,w_j)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.PNG\" alt><br>&emsp;&emsp;我们不断的进行上述三类操作，直到从初始态达到最终态。在每个状态下如何选择哪种操作呢？当我们考虑到LEFT-ARC与RIGHT-ARC各有|R|（|R|为r的类的个数）种class，我们可以将其看做是class数为2|R|+1的分类问题，可以用SVM等传统机器学习方法解决。<h3 id=\"Evaluation\"><a href=\"#Evaluation\" class=\"headerlink\" title=\"Evaluation\"></a>Evaluation</h3>&emsp;&emsp;针对上面的模型，我们有两种评估方式。一个是<strong>LAS（labeled attachment score）</strong>,只有在arc的箭头以及语法关系均正确时才算正确，另一种是<strong>UAS（unlabeled attachment score）</strong>,只要arc的箭头方向正确即可。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Evaluation.PNG\" alt><h3 id=\"Neural-Dependency-Parsing\"><a href=\"#Neural-Dependency-Parsing\" class=\"headerlink\" title=\"Neural Dependency Parsing\"></a>Neural Dependency Parsing</h3>&emsp;&emsp;传统的Transition-based Dependency Parsing对feature engineering要求较高，我们可以用神经网络来减少human labor。<br>&emsp;&emsp;对于Neural Dependency Parser，其输入特征通常包含三种：</li>\n<li>stack和buffer中的单词及其dependent word。</li>\n<li>单词的Part-of-Speech tag。</li>\n<li>描述语法关系的arc label。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/三类输入.jpg\" alt><br>&emsp;&emsp;我们将其转换为embedding vector并将它们联结起来作为输入层，再经过若干非线性的隐藏层，最后加入softmax layer得到每个class的概率。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.jpg\" alt></li>\n</ul>\n","site":{"data":{}},"length":2341,"excerpt":"","more":"<h1 id=\"Linguistic-Structure-Dependency-Parsing\"><a href=\"#Linguistic-Structure-Dependency-Parsing\" class=\"headerlink\" title=\"Linguistic Structure:Dependency Parsing\"></a>Linguistic Structure:Dependency Parsing</h1><p>&emsp;&emsp;对于<strong>句法结构（syntactic structure）</strong>而言,教授提到主要有两种方式：<strong>Constituency Parsing</strong>与<strong>Dependency Parsing</strong></p>\n<h2 id=\"Constituency-Parsing\"><a href=\"#Constituency-Parsing\" class=\"headerlink\" title=\"Constituency Parsing\"></a>Constituency Parsing</h2><p>&emsp;&emsp;Constituency Parsing主要使用短语语法来不断地将词语整理成嵌套的组成成分，又被称为context-free grammers(CFG)</p>\n<ul>\n<li>短语结构将单词组织成嵌套的成分</li>\n<li>单词被赋予了一个词性</li>\n<li>短语可以递归形成更大的短语<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/CFGS.PNG\" alt></li>\n</ul>\n<h2 id=\"Dependency-Parsing\"><a href=\"#Dependency-Parsing\" class=\"headerlink\" title=\"Dependency Parsing\"></a>Dependency Parsing</h2><p>&emsp;&emsp;不是使用各种类型的短语，而是直接通过单词与其他单词的关系表示句子的结构，显示哪些单词依赖于哪些其他单词<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Dependemcy_Look.png\" alt></p>\n<p>&emsp;&emsp;为什么我们需要句子结构</p>\n<ul>\n<li>为了能够正确地解释语言，我们需要理解句子结构</li>\n<li>人们通过将单词组合成更大的单元来传达复杂的思想，从而交流复杂的思想</li>\n<li>我们需要知道哪些词是哪些词的修饰词，否则我们无法弄清句子是什么意思</li>\n</ul>\n<p>&emsp;&emsp;课堂上教授主要介绍了这几种类型的歧义：</p>\n<ul>\n<li>介词短语依附歧义：拿刀的是警察还是被杀的人？ <img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/介词短语依附歧义.png\" alt><br>&emsp;  </li>\n<li>协调范围模糊：主语是一个人还是两个人？<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/协调范围模糊.png\" alt><br>&emsp;  </li>\n<li>形容词修饰语歧义：是直接（first hand）的工作还是第一份hand job？🤔<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/handjob.png\" alt><br>&emsp;  </li>\n<li>动词短语依附歧义：文中的<strong><em>to be used for Olympic beach volleyball</em></strong> 作为动词短语修饰的是body还是beach?<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/动词短语歧义.png\" alt><br>&emsp;<br>&emsp;<br>&emsp;&emsp;面对复杂的句子结构，我们可能需要处理的数量级是指数级的，这个序列被称为<a href=\"https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0\" target=\"_blank\" rel=\"noopener\">卡特兰数</a><script type=\"math/tex; mode=display\">C_{n} = \\frac{(2n)!}{[(n+1)!n!]}</script>&emsp;&emsp;Dependency Structure展示了词语之间的依赖关系，通常用箭头表示其依存关系，有时也会在肩头上标出具体的语法关系。<br>&emsp;&emsp;Dependency Structure有两种表现形式，一种是直接在句子上标出依存关系箭头及语法关系：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/箭头符号.PNG\" alt><br>&emsp;&emsp;另一种是将其做成树状结构：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/树状图.PNG\" alt><br>&emsp;&emsp;Dependency Parsing可以认为是给定输入句子$S=w_0w_1…w_n$(其中$w_0$经常是设置的fake root,使得每一个词都依赖于一个节点)构建对应的Dependency Tree Graph的任务，而<strong>Transition-based Dependency Parsing</strong>是其中的一个有效方法。<h3 id=\"Transition-based-Dependency-Parsing\"><a href=\"#Transition-based-Dependency-Parsing\" class=\"headerlink\" title=\"Transition-based Dependency Parsing\"></a>Transition-based Dependency Parsing</h3>&emsp;&emsp;可以将其看成一种<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA\" target=\"_blank\" rel=\"noopener\">状态机</a>,对于$S=w_0w_1…w_n$,state由三部分构成$(\\sigma,\\beta,A)$。<br>&emsp;&emsp;$\\sigma$是$S$中若干$w_i$构成的stack<br>&emsp;&emsp;$\\beta$是$S$中若干$w_i$构成的buffer<br>&emsp;&emsp;$A$是denpency arc(代表依赖关系的箭头)构成的集合，每一条边的形式是$(w_i,r,w_j)$,其中$r$描述了节点之间的依存关系。<br>&emsp;&emsp;初始状态下，$\\sigma$仅包含root $w_0$,$\\beta$包含了所有单词$w_1…w_n$,而A是空集合$\\emptyset$。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/初始状态.PNG\" alt></li>\n</ul>\n<p>&emsp;&emsp;最终目标是$\\sigma$包含root $w_0$，$\\beta$清空，而$A$包含了所有的dependency arc,则$A$就是我们想要的描述Denpendency的结果。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/中止状态.PNG\" alt><br>&emsp;&emsp;状态间的转换有三类</p>\n<ul>\n<li>SHIFT:将buffer中的第一个词移除并放到stack上</li>\n<li>LEFT-ARC：将$(w_j,r,w_i)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。</li>\n<li>RIGHT-ARC：将$(w_i,r,w_j)$加入边的集合$A$,其中$w_i$是stack上的次顶层的词，$w_j$是stack上最顶层的词。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.PNG\" alt><br>&emsp;&emsp;我们不断的进行上述三类操作，直到从初始态达到最终态。在每个状态下如何选择哪种操作呢？当我们考虑到LEFT-ARC与RIGHT-ARC各有|R|（|R|为r的类的个数）种class，我们可以将其看做是class数为2|R|+1的分类问题，可以用SVM等传统机器学习方法解决。<h3 id=\"Evaluation\"><a href=\"#Evaluation\" class=\"headerlink\" title=\"Evaluation\"></a>Evaluation</h3>&emsp;&emsp;针对上面的模型，我们有两种评估方式。一个是<strong>LAS（labeled attachment score）</strong>,只有在arc的箭头以及语法关系均正确时才算正确，另一种是<strong>UAS（unlabeled attachment score）</strong>,只要arc的箭头方向正确即可。<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Evaluation.PNG\" alt><h3 id=\"Neural-Dependency-Parsing\"><a href=\"#Neural-Dependency-Parsing\" class=\"headerlink\" title=\"Neural Dependency Parsing\"></a>Neural Dependency Parsing</h3>&emsp;&emsp;传统的Transition-based Dependency Parsing对feature engineering要求较高，我们可以用神经网络来减少human labor。<br>&emsp;&emsp;对于Neural Dependency Parser，其输入特征通常包含三种：</li>\n<li>stack和buffer中的单词及其dependent word。</li>\n<li>单词的Part-of-Speech tag。</li>\n<li>描述语法关系的arc label。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/三类输入.jpg\" alt><br>&emsp;&emsp;我们将其转换为embedding vector并将它们联结起来作为输入层，再经过若干非线性的隐藏层，最后加入softmax layer得到每个class的概率。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/流程.jpg\" alt></li>\n</ul>\n"},{"title":"CS224N笔记-六-Language Modeling And RNN","date":"2020-06-12T08:55:40.000Z","top":90,"copyright":true,"mathjax":true,"_content":"本次课程助教小姐姐主要介绍的是**Language Modeling**与**Recurrent Neural Network(RNN)**\n\n## Language Modeling \n&emsp;&emsp;语言模型研究的是根据已知的序列来推测下一个单词的问题，也就是假设给定一个单词序列$x^{(1)},x^{(2)},...,x^{(t)}$，计算下一个单词$x^{(t+1)}$的概率分布\n$$P(x^{(t+1)}|x^{(t)},...,x^{(1)})$$\n&emsp;&emsp;根据条件概率的链式法则，我们也可以将其看作一系列词出现的概率问题：\n$$P(x^{(t)},...,x^{(1)}) = \\prod_{t=1}^{T} P\\left(x^{(t)}|x^{(t-1)},...,x^{(1)}\\right)$$\n\n## n-gram Language Models\n&emsp;&emsp;n-gram模型的定义就是连续的n个单词组成的块，例如对于“the students opened their __”这句话：\n- unigrams:\"the\",\"student\",\"opened\",\"their\"\n- biagrams:\"the students\",\"students opened\",\"opend their\"\n- trigrams:\"the students opened\",\"students opened their\"\n- 4-grams:\"the students opened their\"\n&emsp;&emsp;该模型的核心思想是n-gram的概率应正比于器出现的频率，所以可以用此模型预测下一个单词。\n&emsp;&emsp;假设$P(x^{(t+1)})$仅依赖它之前的n-1个单词，即\n$$P(x^{(t+1)}|x^{(t)},...,x^{(1)}) = P(x^{(t+1)}|x^{(t)},...,x^{(t-n+2)}) = \\\\\n\\frac{ P(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{P(x^{(t)},...,x^{(t-n+2)})}\\approx \\frac{ count(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{count (x^{(t)},...,x^{(t-n+2)})}$$\n&emsp;&emsp;其中count是通过处理大量文本相对应的n-gram出现次数得到的。\n\n&emsp;&emsp;假设在学习一个**4-gram**的语言模型：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/4-gram-model.png)\n&emsp;&emsp;在语料库中：\n- “students opened their”出现了1000次\n- \"students opened their books\"出现了400次\n$$P(books|students\\ opened\\ their) = 0.4$$ \n- \"students opened their exams\"出现了100次\n$$P(exams|students\\ opened\\ their) = 0.1$$\n- 由于上下文出现了“proctor”,所以在这里exams的概率应当比book更大\n### Sparsity Problems with n-gram Language Models\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/SparsityProblems.png) \n### Storage Problems with n-gram Language Models\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/storage_problems.png)\n\n### How to build a neural Language Model?\n&emsp;&emsp;可以使用在第三讲中被用于NER问题的**window-based neural model**\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Ner.png)\n\n&emsp;&emsp;对于下列句子：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/sentence.png)\n&emsp;&emsp;使用上述模型网络结构\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/network.png)\n\n#### 存在的问题\n- 固定窗口大小\n- 扩大窗口就要扩大权重矩阵$W$\n- 窗口再大也不够用\n- $x^{(1)}和x^{(2)}$乘以不同的权重，输入的处理不整齐。  \n\n需要一个可以处理任何长度的输入的神经网络。\n\n## Recurrent Neural Networks (RNN)\n&emsp;&emsp;RNN（Recurrent Neural Network）结构通过不断应用**同一个**矩阵$W$来实现参数的有效共享(个人推荐[这一篇](https://zhuanlan.zhihu.com/p/30844905)扫盲)\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN1.png)\n\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN2.png)\n\nRNN的优点\n- 可以处理**任意长度**的输入\n- 步骤t的计算理论上可以使用许多**步骤前**的信息\n- 模型大小**不会**随着输入的增加而增加\n- 在每个time step上都应用相同的权重，因此在处理输入时具有**一致性**。  \n  \nRNN的缺点\n- 递归计算速度慢\n- 在实践中，很难从**许多步骤前**获得信息\n- 更多后续课程中会提到\n\n&emsp;&emsp;RNN的训练过程依赖于大量文本，在每个时刻t会计算模型预测的输出$y^{(t)}$与真实值$\\hat{y}^{(t)}$(即$x^{(t+1)}$的one-hot向量)的交叉熵：\n$$\\begin{aligned}\nJ^{(t)}(\\theta) = CE(y^{(t)},\\hat{y}^{(t)}) &= -\\sum_{w\\in V} y^{(t)}_w \\log \\hat{y}^{(t)}_w \\\\ &= -\\log\\hat{y}^{(t)}_{x_{t+1}}\n\\end{aligned}$$\n&emsp;&emsp;将其平均，得到整个训练集的overall loss\n$$J(\\theta) = \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta) = \\frac{1}{T}-\\log\\hat{y}^{(t)}_{x_{t+1}}$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/loss.png)\n$$\\begin{aligned}\nJ^{(1)}(\\theta)+J^{(2)}(\\theta)+J^{(3)}(\\theta)+... &= J(\\theta) \\\\ &=  \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta)\n\\end{aligned}$$\n\n&emsp;&emsp;然而，计算**整个**语料库$x^{(1)},...,x^{(T)}$的损失和梯度成本太过昂贵了，在实践中，我们将$x^{(1)},...,x^{(T)}$看作一个**句子**或**文档**，应用**随机梯度下降算法**计算小块数据的损失和梯度，并进行更新\n\n### Backpropagation for RNNs\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/BackPropagation.png)\n&emsp;&emsp;重复权重的梯度是每次其出现时的梯度总和\n$$\\frac{\\partial J^{(t)}}{\\partial W_h}=  \\sum_{i=1}^t \\frac{\\partial J^{(t)}}{\\partial W_h} \\bigg|_{(i)}$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/caluclate_gradient.png)\n\n### Evaluating Language Models\n&emsp;&emsp;标准语言模型评估指标是perplexity 困惑度\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/perplexity-困惑度.png)\n&emsp;&emsp;等于交叉熵损失$J(\\theta)$的指数\n$$\\begin{aligned}\n=\\prod_{t=1}^T \\left( {\\frac{1}{\\hat y ^ {(t)}_{x_{t+1}}}} \\right)^{1/T} &= \\exp \\left( \\frac{1}{T}\\sum_{t=1}^T-\\log \\hat y ^ {(t)}_{x_{t+1}} \\right) \\\\ &= \\exp(J(\\theta))  \n\\end{aligned}$$\n&emsp;&emsp;低困惑度是好的\n### Why should we care about Language Modeling?\n&emsp;&emsp;语言模型是一项**基准测试**任务，它帮助我们**衡量**我们在理解语言方面的**进展**\n&emsp;&emsp;语言建模是许多NLP任务的**子组件**，尤其是那些涉及**生成文本** 或**估计文本概率**的任务","source":"_posts/CS224N笔记-六-Language-Modeling-And-RNN.md","raw":"---\ntitle: CS224N笔记-六-Language Modeling And RNN\ndate: 2020-06-12 16:55:40\ntags: nlp 机器学习\ncategories: CS224N\ntop: 90\ncopyright: true\nmathjax: true\n---\n本次课程助教小姐姐主要介绍的是**Language Modeling**与**Recurrent Neural Network(RNN)**\n\n## Language Modeling \n&emsp;&emsp;语言模型研究的是根据已知的序列来推测下一个单词的问题，也就是假设给定一个单词序列$x^{(1)},x^{(2)},...,x^{(t)}$，计算下一个单词$x^{(t+1)}$的概率分布\n$$P(x^{(t+1)}|x^{(t)},...,x^{(1)})$$\n&emsp;&emsp;根据条件概率的链式法则，我们也可以将其看作一系列词出现的概率问题：\n$$P(x^{(t)},...,x^{(1)}) = \\prod_{t=1}^{T} P\\left(x^{(t)}|x^{(t-1)},...,x^{(1)}\\right)$$\n\n## n-gram Language Models\n&emsp;&emsp;n-gram模型的定义就是连续的n个单词组成的块，例如对于“the students opened their __”这句话：\n- unigrams:\"the\",\"student\",\"opened\",\"their\"\n- biagrams:\"the students\",\"students opened\",\"opend their\"\n- trigrams:\"the students opened\",\"students opened their\"\n- 4-grams:\"the students opened their\"\n&emsp;&emsp;该模型的核心思想是n-gram的概率应正比于器出现的频率，所以可以用此模型预测下一个单词。\n&emsp;&emsp;假设$P(x^{(t+1)})$仅依赖它之前的n-1个单词，即\n$$P(x^{(t+1)}|x^{(t)},...,x^{(1)}) = P(x^{(t+1)}|x^{(t)},...,x^{(t-n+2)}) = \\\\\n\\frac{ P(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{P(x^{(t)},...,x^{(t-n+2)})}\\approx \\frac{ count(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{count (x^{(t)},...,x^{(t-n+2)})}$$\n&emsp;&emsp;其中count是通过处理大量文本相对应的n-gram出现次数得到的。\n\n&emsp;&emsp;假设在学习一个**4-gram**的语言模型：\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/4-gram-model.png)\n&emsp;&emsp;在语料库中：\n- “students opened their”出现了1000次\n- \"students opened their books\"出现了400次\n$$P(books|students\\ opened\\ their) = 0.4$$ \n- \"students opened their exams\"出现了100次\n$$P(exams|students\\ opened\\ their) = 0.1$$\n- 由于上下文出现了“proctor”,所以在这里exams的概率应当比book更大\n### Sparsity Problems with n-gram Language Models\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/SparsityProblems.png) \n### Storage Problems with n-gram Language Models\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/storage_problems.png)\n\n### How to build a neural Language Model?\n&emsp;&emsp;可以使用在第三讲中被用于NER问题的**window-based neural model**\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Ner.png)\n\n&emsp;&emsp;对于下列句子：![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/sentence.png)\n&emsp;&emsp;使用上述模型网络结构\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/network.png)\n\n#### 存在的问题\n- 固定窗口大小\n- 扩大窗口就要扩大权重矩阵$W$\n- 窗口再大也不够用\n- $x^{(1)}和x^{(2)}$乘以不同的权重，输入的处理不整齐。  \n\n需要一个可以处理任何长度的输入的神经网络。\n\n## Recurrent Neural Networks (RNN)\n&emsp;&emsp;RNN（Recurrent Neural Network）结构通过不断应用**同一个**矩阵$W$来实现参数的有效共享(个人推荐[这一篇](https://zhuanlan.zhihu.com/p/30844905)扫盲)\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN1.png)\n\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN2.png)\n\nRNN的优点\n- 可以处理**任意长度**的输入\n- 步骤t的计算理论上可以使用许多**步骤前**的信息\n- 模型大小**不会**随着输入的增加而增加\n- 在每个time step上都应用相同的权重，因此在处理输入时具有**一致性**。  \n  \nRNN的缺点\n- 递归计算速度慢\n- 在实践中，很难从**许多步骤前**获得信息\n- 更多后续课程中会提到\n\n&emsp;&emsp;RNN的训练过程依赖于大量文本，在每个时刻t会计算模型预测的输出$y^{(t)}$与真实值$\\hat{y}^{(t)}$(即$x^{(t+1)}$的one-hot向量)的交叉熵：\n$$\\begin{aligned}\nJ^{(t)}(\\theta) = CE(y^{(t)},\\hat{y}^{(t)}) &= -\\sum_{w\\in V} y^{(t)}_w \\log \\hat{y}^{(t)}_w \\\\ &= -\\log\\hat{y}^{(t)}_{x_{t+1}}\n\\end{aligned}$$\n&emsp;&emsp;将其平均，得到整个训练集的overall loss\n$$J(\\theta) = \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta) = \\frac{1}{T}-\\log\\hat{y}^{(t)}_{x_{t+1}}$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/loss.png)\n$$\\begin{aligned}\nJ^{(1)}(\\theta)+J^{(2)}(\\theta)+J^{(3)}(\\theta)+... &= J(\\theta) \\\\ &=  \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta)\n\\end{aligned}$$\n\n&emsp;&emsp;然而，计算**整个**语料库$x^{(1)},...,x^{(T)}$的损失和梯度成本太过昂贵了，在实践中，我们将$x^{(1)},...,x^{(T)}$看作一个**句子**或**文档**，应用**随机梯度下降算法**计算小块数据的损失和梯度，并进行更新\n\n### Backpropagation for RNNs\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/BackPropagation.png)\n&emsp;&emsp;重复权重的梯度是每次其出现时的梯度总和\n$$\\frac{\\partial J^{(t)}}{\\partial W_h}=  \\sum_{i=1}^t \\frac{\\partial J^{(t)}}{\\partial W_h} \\bigg|_{(i)}$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/caluclate_gradient.png)\n\n### Evaluating Language Models\n&emsp;&emsp;标准语言模型评估指标是perplexity 困惑度\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/perplexity-困惑度.png)\n&emsp;&emsp;等于交叉熵损失$J(\\theta)$的指数\n$$\\begin{aligned}\n=\\prod_{t=1}^T \\left( {\\frac{1}{\\hat y ^ {(t)}_{x_{t+1}}}} \\right)^{1/T} &= \\exp \\left( \\frac{1}{T}\\sum_{t=1}^T-\\log \\hat y ^ {(t)}_{x_{t+1}} \\right) \\\\ &= \\exp(J(\\theta))  \n\\end{aligned}$$\n&emsp;&emsp;低困惑度是好的\n### Why should we care about Language Modeling?\n&emsp;&emsp;语言模型是一项**基准测试**任务，它帮助我们**衡量**我们在理解语言方面的**进展**\n&emsp;&emsp;语言建模是许多NLP任务的**子组件**，尤其是那些涉及**生成文本** 或**估计文本概率**的任务","slug":"CS224N笔记-六-Language-Modeling-And-RNN","published":1,"updated":"2020-06-13T11:57:56.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jrb000eiwvze2a7604s","content":"<p>本次课程助教小姐姐主要介绍的是<strong>Language Modeling</strong>与<strong>Recurrent Neural Network(RNN)</strong></p>\n<h2 id=\"Language-Modeling\"><a href=\"#Language-Modeling\" class=\"headerlink\" title=\"Language Modeling\"></a>Language Modeling</h2><p>&emsp;&emsp;语言模型研究的是根据已知的序列来推测下一个单词的问题，也就是假设给定一个单词序列$x^{(1)},x^{(2)},…,x^{(t)}$，计算下一个单词$x^{(t+1)}$的概率分布</p>\n<script type=\"math/tex; mode=display\">P(x^{(t+1)}|x^{(t)},...,x^{(1)})</script><p>&emsp;&emsp;根据条件概率的链式法则，我们也可以将其看作一系列词出现的概率问题：</p>\n<script type=\"math/tex; mode=display\">P(x^{(t)},...,x^{(1)}) = \\prod_{t=1}^{T} P\\left(x^{(t)}|x^{(t-1)},...,x^{(1)}\\right)</script><h2 id=\"n-gram-Language-Models\"><a href=\"#n-gram-Language-Models\" class=\"headerlink\" title=\"n-gram Language Models\"></a>n-gram Language Models</h2><p>&emsp;&emsp;n-gram模型的定义就是连续的n个单词组成的块，例如对于“the students opened their __”这句话：</p>\n<ul>\n<li>unigrams:”the”,”student”,”opened”,”their”</li>\n<li>biagrams:”the students”,”students opened”,”opend their”</li>\n<li>trigrams:”the students opened”,”students opened their”</li>\n<li>4-grams:”the students opened their”<br>&emsp;&emsp;该模型的核心思想是n-gram的概率应正比于器出现的频率，所以可以用此模型预测下一个单词。<br>&emsp;&emsp;假设$P(x^{(t+1)})$仅依赖它之前的n-1个单词，即<script type=\"math/tex; mode=display\">P(x^{(t+1)}|x^{(t)},...,x^{(1)}) = P(x^{(t+1)}|x^{(t)},...,x^{(t-n+2)}) = \\\\\n\\frac{ P(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{P(x^{(t)},...,x^{(t-n+2)})}\\approx \\frac{ count(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{count (x^{(t)},...,x^{(t-n+2)})}</script>&emsp;&emsp;其中count是通过处理大量文本相对应的n-gram出现次数得到的。</li>\n</ul>\n<p>&emsp;&emsp;假设在学习一个<strong>4-gram</strong>的语言模型：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/4-gram-model.png\" alt><br>&emsp;&emsp;在语料库中：</p>\n<ul>\n<li>“students opened their”出现了1000次</li>\n<li>“students opened their books”出现了400次<script type=\"math/tex; mode=display\">P(books|students\\ opened\\ their) = 0.4</script></li>\n<li>“students opened their exams”出现了100次<script type=\"math/tex; mode=display\">P(exams|students\\ opened\\ their) = 0.1</script></li>\n<li>由于上下文出现了“proctor”,所以在这里exams的概率应当比book更大<h3 id=\"Sparsity-Problems-with-n-gram-Language-Models\"><a href=\"#Sparsity-Problems-with-n-gram-Language-Models\" class=\"headerlink\" title=\"Sparsity Problems with n-gram Language Models\"></a>Sparsity Problems with n-gram Language Models</h3><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/SparsityProblems.png\" alt> <h3 id=\"Storage-Problems-with-n-gram-Language-Models\"><a href=\"#Storage-Problems-with-n-gram-Language-Models\" class=\"headerlink\" title=\"Storage Problems with n-gram Language Models\"></a>Storage Problems with n-gram Language Models</h3><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/storage_problems.png\" alt></li>\n</ul>\n<h3 id=\"How-to-build-a-neural-Language-Model\"><a href=\"#How-to-build-a-neural-Language-Model\" class=\"headerlink\" title=\"How to build a neural Language Model?\"></a>How to build a neural Language Model?</h3><p>&emsp;&emsp;可以使用在第三讲中被用于NER问题的<strong>window-based neural model</strong><br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Ner.png\" alt></p>\n<p>&emsp;&emsp;对于下列句子：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/sentence.png\" alt><br>&emsp;&emsp;使用上述模型网络结构<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/network.png\" alt></p>\n<h4 id=\"存在的问题\"><a href=\"#存在的问题\" class=\"headerlink\" title=\"存在的问题\"></a>存在的问题</h4><ul>\n<li>固定窗口大小</li>\n<li>扩大窗口就要扩大权重矩阵$W$</li>\n<li>窗口再大也不够用</li>\n<li>$x^{(1)}和x^{(2)}$乘以不同的权重，输入的处理不整齐。  </li>\n</ul>\n<p>需要一个可以处理任何长度的输入的神经网络。</p>\n<h2 id=\"Recurrent-Neural-Networks-RNN\"><a href=\"#Recurrent-Neural-Networks-RNN\" class=\"headerlink\" title=\"Recurrent Neural Networks (RNN)\"></a>Recurrent Neural Networks (RNN)</h2><p>&emsp;&emsp;RNN（Recurrent Neural Network）结构通过不断应用<strong>同一个</strong>矩阵$W$来实现参数的有效共享(个人推荐<a href=\"https://zhuanlan.zhihu.com/p/30844905\" target=\"_blank\" rel=\"noopener\">这一篇</a>扫盲)<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN1.png\" alt></p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN2.png\" alt></p>\n<p>RNN的优点</p>\n<ul>\n<li>可以处理<strong>任意长度</strong>的输入</li>\n<li>步骤t的计算理论上可以使用许多<strong>步骤前</strong>的信息</li>\n<li>模型大小<strong>不会</strong>随着输入的增加而增加</li>\n<li>在每个time step上都应用相同的权重，因此在处理输入时具有<strong>一致性</strong>。  </li>\n</ul>\n<p>RNN的缺点</p>\n<ul>\n<li>递归计算速度慢</li>\n<li>在实践中，很难从<strong>许多步骤前</strong>获得信息</li>\n<li>更多后续课程中会提到</li>\n</ul>\n<p>&emsp;&emsp;RNN的训练过程依赖于大量文本，在每个时刻t会计算模型预测的输出$y^{(t)}$与真实值$\\hat{y}^{(t)}$(即$x^{(t+1)}$的one-hot向量)的交叉熵：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nJ^{(t)}(\\theta) = CE(y^{(t)},\\hat{y}^{(t)}) &= -\\sum_{w\\in V} y^{(t)}_w \\log \\hat{y}^{(t)}_w \\\\ &= -\\log\\hat{y}^{(t)}_{x_{t+1}}\n\\end{aligned}</script><p>&emsp;&emsp;将其平均，得到整个训练集的overall loss</p>\n<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta) = \\frac{1}{T}-\\log\\hat{y}^{(t)}_{x_{t+1}}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/loss.png\" alt></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nJ^{(1)}(\\theta)+J^{(2)}(\\theta)+J^{(3)}(\\theta)+... &= J(\\theta) \\\\ &=  \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta)\n\\end{aligned}</script><p>&emsp;&emsp;然而，计算<strong>整个</strong>语料库$x^{(1)},…,x^{(T)}$的损失和梯度成本太过昂贵了，在实践中，我们将$x^{(1)},…,x^{(T)}$看作一个<strong>句子</strong>或<strong>文档</strong>，应用<strong>随机梯度下降算法</strong>计算小块数据的损失和梯度，并进行更新</p>\n<h3 id=\"Backpropagation-for-RNNs\"><a href=\"#Backpropagation-for-RNNs\" class=\"headerlink\" title=\"Backpropagation for RNNs\"></a>Backpropagation for RNNs</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/BackPropagation.png\" alt><br>&emsp;&emsp;重复权重的梯度是每次其出现时的梯度总和</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial J^{(t)}}{\\partial W_h}=  \\sum_{i=1}^t \\frac{\\partial J^{(t)}}{\\partial W_h} \\bigg|_{(i)}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/caluclate_gradient.png\" alt></p>\n<h3 id=\"Evaluating-Language-Models\"><a href=\"#Evaluating-Language-Models\" class=\"headerlink\" title=\"Evaluating Language Models\"></a>Evaluating Language Models</h3><p>&emsp;&emsp;标准语言模型评估指标是perplexity 困惑度<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/perplexity-困惑度.png\" alt><br>&emsp;&emsp;等于交叉熵损失$J(\\theta)$的指数</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=\\prod_{t=1}^T \\left( {\\frac{1}{\\hat y ^ {(t)}_{x_{t+1}}}} \\right)^{1/T} &= \\exp \\left( \\frac{1}{T}\\sum_{t=1}^T-\\log \\hat y ^ {(t)}_{x_{t+1}} \\right) \\\\ &= \\exp(J(\\theta))  \n\\end{aligned}</script><p>&emsp;&emsp;低困惑度是好的</p>\n<h3 id=\"Why-should-we-care-about-Language-Modeling\"><a href=\"#Why-should-we-care-about-Language-Modeling\" class=\"headerlink\" title=\"Why should we care about Language Modeling?\"></a>Why should we care about Language Modeling?</h3><p>&emsp;&emsp;语言模型是一项<strong>基准测试</strong>任务，它帮助我们<strong>衡量</strong>我们在理解语言方面的<strong>进展</strong><br>&emsp;&emsp;语言建模是许多NLP任务的<strong>子组件</strong>，尤其是那些涉及<strong>生成文本</strong> 或<strong>估计文本概率</strong>的任务</p>\n","site":{"data":{}},"length":2949,"excerpt":"","more":"<p>本次课程助教小姐姐主要介绍的是<strong>Language Modeling</strong>与<strong>Recurrent Neural Network(RNN)</strong></p>\n<h2 id=\"Language-Modeling\"><a href=\"#Language-Modeling\" class=\"headerlink\" title=\"Language Modeling\"></a>Language Modeling</h2><p>&emsp;&emsp;语言模型研究的是根据已知的序列来推测下一个单词的问题，也就是假设给定一个单词序列$x^{(1)},x^{(2)},…,x^{(t)}$，计算下一个单词$x^{(t+1)}$的概率分布</p>\n<script type=\"math/tex; mode=display\">P(x^{(t+1)}|x^{(t)},...,x^{(1)})</script><p>&emsp;&emsp;根据条件概率的链式法则，我们也可以将其看作一系列词出现的概率问题：</p>\n<script type=\"math/tex; mode=display\">P(x^{(t)},...,x^{(1)}) = \\prod_{t=1}^{T} P\\left(x^{(t)}|x^{(t-1)},...,x^{(1)}\\right)</script><h2 id=\"n-gram-Language-Models\"><a href=\"#n-gram-Language-Models\" class=\"headerlink\" title=\"n-gram Language Models\"></a>n-gram Language Models</h2><p>&emsp;&emsp;n-gram模型的定义就是连续的n个单词组成的块，例如对于“the students opened their __”这句话：</p>\n<ul>\n<li>unigrams:”the”,”student”,”opened”,”their”</li>\n<li>biagrams:”the students”,”students opened”,”opend their”</li>\n<li>trigrams:”the students opened”,”students opened their”</li>\n<li>4-grams:”the students opened their”<br>&emsp;&emsp;该模型的核心思想是n-gram的概率应正比于器出现的频率，所以可以用此模型预测下一个单词。<br>&emsp;&emsp;假设$P(x^{(t+1)})$仅依赖它之前的n-1个单词，即<script type=\"math/tex; mode=display\">P(x^{(t+1)}|x^{(t)},...,x^{(1)}) = P(x^{(t+1)}|x^{(t)},...,x^{(t-n+2)}) = \\\\\n\\frac{ P(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{P(x^{(t)},...,x^{(t-n+2)})}\\approx \\frac{ count(x^{(t+1)},x^{(t)},...,x^{(t-n+2)})}{count (x^{(t)},...,x^{(t-n+2)})}</script>&emsp;&emsp;其中count是通过处理大量文本相对应的n-gram出现次数得到的。</li>\n</ul>\n<p>&emsp;&emsp;假设在学习一个<strong>4-gram</strong>的语言模型：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/4-gram-model.png\" alt><br>&emsp;&emsp;在语料库中：</p>\n<ul>\n<li>“students opened their”出现了1000次</li>\n<li>“students opened their books”出现了400次<script type=\"math/tex; mode=display\">P(books|students\\ opened\\ their) = 0.4</script></li>\n<li>“students opened their exams”出现了100次<script type=\"math/tex; mode=display\">P(exams|students\\ opened\\ their) = 0.1</script></li>\n<li>由于上下文出现了“proctor”,所以在这里exams的概率应当比book更大<h3 id=\"Sparsity-Problems-with-n-gram-Language-Models\"><a href=\"#Sparsity-Problems-with-n-gram-Language-Models\" class=\"headerlink\" title=\"Sparsity Problems with n-gram Language Models\"></a>Sparsity Problems with n-gram Language Models</h3><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/SparsityProblems.png\" alt> <h3 id=\"Storage-Problems-with-n-gram-Language-Models\"><a href=\"#Storage-Problems-with-n-gram-Language-Models\" class=\"headerlink\" title=\"Storage Problems with n-gram Language Models\"></a>Storage Problems with n-gram Language Models</h3><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/storage_problems.png\" alt></li>\n</ul>\n<h3 id=\"How-to-build-a-neural-Language-Model\"><a href=\"#How-to-build-a-neural-Language-Model\" class=\"headerlink\" title=\"How to build a neural Language Model?\"></a>How to build a neural Language Model?</h3><p>&emsp;&emsp;可以使用在第三讲中被用于NER问题的<strong>window-based neural model</strong><br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Ner.png\" alt></p>\n<p>&emsp;&emsp;对于下列句子：<img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/sentence.png\" alt><br>&emsp;&emsp;使用上述模型网络结构<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/network.png\" alt></p>\n<h4 id=\"存在的问题\"><a href=\"#存在的问题\" class=\"headerlink\" title=\"存在的问题\"></a>存在的问题</h4><ul>\n<li>固定窗口大小</li>\n<li>扩大窗口就要扩大权重矩阵$W$</li>\n<li>窗口再大也不够用</li>\n<li>$x^{(1)}和x^{(2)}$乘以不同的权重，输入的处理不整齐。  </li>\n</ul>\n<p>需要一个可以处理任何长度的输入的神经网络。</p>\n<h2 id=\"Recurrent-Neural-Networks-RNN\"><a href=\"#Recurrent-Neural-Networks-RNN\" class=\"headerlink\" title=\"Recurrent Neural Networks (RNN)\"></a>Recurrent Neural Networks (RNN)</h2><p>&emsp;&emsp;RNN（Recurrent Neural Network）结构通过不断应用<strong>同一个</strong>矩阵$W$来实现参数的有效共享(个人推荐<a href=\"https://zhuanlan.zhihu.com/p/30844905\" target=\"_blank\" rel=\"noopener\">这一篇</a>扫盲)<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN1.png\" alt></p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/RNN2.png\" alt></p>\n<p>RNN的优点</p>\n<ul>\n<li>可以处理<strong>任意长度</strong>的输入</li>\n<li>步骤t的计算理论上可以使用许多<strong>步骤前</strong>的信息</li>\n<li>模型大小<strong>不会</strong>随着输入的增加而增加</li>\n<li>在每个time step上都应用相同的权重，因此在处理输入时具有<strong>一致性</strong>。  </li>\n</ul>\n<p>RNN的缺点</p>\n<ul>\n<li>递归计算速度慢</li>\n<li>在实践中，很难从<strong>许多步骤前</strong>获得信息</li>\n<li>更多后续课程中会提到</li>\n</ul>\n<p>&emsp;&emsp;RNN的训练过程依赖于大量文本，在每个时刻t会计算模型预测的输出$y^{(t)}$与真实值$\\hat{y}^{(t)}$(即$x^{(t+1)}$的one-hot向量)的交叉熵：</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nJ^{(t)}(\\theta) = CE(y^{(t)},\\hat{y}^{(t)}) &= -\\sum_{w\\in V} y^{(t)}_w \\log \\hat{y}^{(t)}_w \\\\ &= -\\log\\hat{y}^{(t)}_{x_{t+1}}\n\\end{aligned}</script><p>&emsp;&emsp;将其平均，得到整个训练集的overall loss</p>\n<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta) = \\frac{1}{T}-\\log\\hat{y}^{(t)}_{x_{t+1}}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/loss.png\" alt></p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\nJ^{(1)}(\\theta)+J^{(2)}(\\theta)+J^{(3)}(\\theta)+... &= J(\\theta) \\\\ &=  \\frac{1}{T}\\sum^T_{t=1}J^{(t)}(\\theta)\n\\end{aligned}</script><p>&emsp;&emsp;然而，计算<strong>整个</strong>语料库$x^{(1)},…,x^{(T)}$的损失和梯度成本太过昂贵了，在实践中，我们将$x^{(1)},…,x^{(T)}$看作一个<strong>句子</strong>或<strong>文档</strong>，应用<strong>随机梯度下降算法</strong>计算小块数据的损失和梯度，并进行更新</p>\n<h3 id=\"Backpropagation-for-RNNs\"><a href=\"#Backpropagation-for-RNNs\" class=\"headerlink\" title=\"Backpropagation for RNNs\"></a>Backpropagation for RNNs</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/BackPropagation.png\" alt><br>&emsp;&emsp;重复权重的梯度是每次其出现时的梯度总和</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial J^{(t)}}{\\partial W_h}=  \\sum_{i=1}^t \\frac{\\partial J^{(t)}}{\\partial W_h} \\bigg|_{(i)}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/caluclate_gradient.png\" alt></p>\n<h3 id=\"Evaluating-Language-Models\"><a href=\"#Evaluating-Language-Models\" class=\"headerlink\" title=\"Evaluating Language Models\"></a>Evaluating Language Models</h3><p>&emsp;&emsp;标准语言模型评估指标是perplexity 困惑度<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/perplexity-困惑度.png\" alt><br>&emsp;&emsp;等于交叉熵损失$J(\\theta)$的指数</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n=\\prod_{t=1}^T \\left( {\\frac{1}{\\hat y ^ {(t)}_{x_{t+1}}}} \\right)^{1/T} &= \\exp \\left( \\frac{1}{T}\\sum_{t=1}^T-\\log \\hat y ^ {(t)}_{x_{t+1}} \\right) \\\\ &= \\exp(J(\\theta))  \n\\end{aligned}</script><p>&emsp;&emsp;低困惑度是好的</p>\n<h3 id=\"Why-should-we-care-about-Language-Modeling\"><a href=\"#Why-should-we-care-about-Language-Modeling\" class=\"headerlink\" title=\"Why should we care about Language Modeling?\"></a>Why should we care about Language Modeling?</h3><p>&emsp;&emsp;语言模型是一项<strong>基准测试</strong>任务，它帮助我们<strong>衡量</strong>我们在理解语言方面的<strong>进展</strong><br>&emsp;&emsp;语言建模是许多NLP任务的<strong>子组件</strong>，尤其是那些涉及<strong>生成文本</strong> 或<strong>估计文本概率</strong>的任务</p>\n"},{"title":"CS224N笔记 (二):Glove","date":"2020-05-28T02:43:21.000Z","top":90,"copyright":true,"mathjax":true,"_content":"&emsp;&emsp;上一篇笔记[CS224N笔记(一):word vector](https://woshibwt.com/2020/05/25/CS224N%E7%AC%94%E8%AE%B0-%E4%B8%80-word-vector/#more)中教授主要讲课重点是基于local context window的**Word2Vec**模型，它是一种direct prediction模型。那么对于word vector是否还存在其他模型呢，答案当然是有，本次介绍的就是另一类count based global matrix factorization模型以及Manning教授结合这两种模型的优点提出的**Glove**模型。   \n&emsp;\n## 回顾：word2vec的主要思想\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG)\n$$P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n- 遍历整个语料库中的每个单词\n- 使用单词向量更好的预测周围的单词\n- 更新向量以更好的预测\n  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_Word2vex_ParametersAndComputations.PNG)\n>在这张图中，选取的特定向量是v矩阵的第四行与U的每一行向量做点积\n- 在这张图以及许多深度学习包中，每一行代表一个单词的词向量。经过点乘操作后的数字通过softmax映射为概率分布，注意该概率分布是对于该中心词而言的上下文中的概率分布，该分布与上下文所在的具体位置无关。\n- 我们希望对上下文中（相当频繁）出现的所有单词给出一个合理的概率统计。\n- the,and,that,of这类的停用词，有时简单地去掉这一部分可以使词向量效果更好。\n\n### 梯度下降的优化\n**Gradient Descent**： 每次使用全部样本进行更新\n**Stochastic Gradient Decent**:每次只使用单个样本更新  \n**Mini-batch**:\n- 通过平均值，减少梯度估计的噪音\n- 可在GPU上并行化运算，加快运算速度\n#### 词向量的随机梯度下降\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_SGDvector.PNG)\n\n由于$\\nabla_{\\theta}J_t(\\theta)$将会非常稀疏，因此我们只更新实际出现的向量。  \n解决方案  \n- 需要稀疏矩阵更新操作来只更新矩阵U和V中的特定行\n- 需要保留单词向量的散列\n  如果有数百万个单词向量，并且进行分布式计算，那么不用到处发送巨大的更新是很重要的。  \n#### 更多关于word2vec的细节\n为什么需要两个向量？\n- 更容易优化，最后可对两个向量取平均值  \n\n两个模型变体\n- **Skip-grams(SG)**\n  - 输入中心词并预测上下文中的单词(正是课堂中展示的这一种)\n- **Continuous Bag of Words(CBOW)**\n  - 输入上下文中的单词并预测中心词    \n   \n提升训练效率  \n&emsp;&emsp;之前选择的softmax训练方法虽然简单但代价很高，考虑使用负采样方法加快训练速率。  \n&emsp;&emsp;[作业二]()实现了使用**nagative sampling**(负采样方法)的skip-gram模型\n- 对一个由true pair(中心词及其上下文窗口中的词)与几个noise pair(中心词与随机词搭配)形成的样本，训练二元逻辑回归。  \n\n在论文中的(最大化)目标函数是  \n$$J(\\theta)=\\frac{1}{T}\\sum_{t=1}^TJ_t(\\theta)$$\n\n$$J_t(\\theta) = \\log\\sigma(u_o^Tv_c)+\\sum_{i=1}^k\\mathbb {E}_{j\\sim P(w)}\\left[\\log\\sigma\\left(-u_j^Tv_c\\right)\\right]$$  \n本课及作业中的目标函数是  \n$$J_{neg-sample}(o,v_c,U) = -log(\\sigma(u_o^Tv_c)) - \\sum_{k=1}^K\\log(\\sigma(-u_k^Tv_c))$$\n- 我们希望中心词与真实上下文单词的向量点积更大，中心词与随机单词的点击更小\n- k是负采样的样本数目\n  $$P(w) = U(w)^{3/4}/Z$$  \n&emsp;&emsp;使用上式作为抽样的分布，$U(w)$是[unigram分布]()，通过$\\frac{3}{4}$次方，相对减少常见单词的频率，增大稀有词的频率。$Z$用于生成概率分布。  \n## SVD模型\n&emsp;&emsp;暂时放下local context window的模型，现在来讨论count based模型，它的一个经典代表是**SVD**（Single Value Decomposition）模型：我们先扫过一遍所有数据，然后得到共现矩阵(co-occurance matrix),假设矩阵用$X$表示，我们对其使用SVD得到$X$的分解形式$USV^T$ (详情请见[奇异值分解](https://zhuanlan.zhihu.com/p/29846048))\n&emsp;&emsp;如何产生矩阵$X$通常有两种选择：\n- **word-document co-occurrence matrix**:其基本假设是在同一篇文章中出现的单词更有可能相互关联。假设单词$i$出现在文章$j$中，则矩阵元素$X_{ij}$加一，当我们处理完所有的文章后，就得到了矩阵$X$,其大小为$\\lvert V \\rvert \\times M$,其中$\\lvert V \\rvert$为词汇量，而$M$为文章数\n- **window-based word-word co-occurrence matrix**:该矩阵是利用某个定长窗口中单词与单词同时出现的个数来产生，下面用窗口长度为1来举例(常见的是5-10)，假设我们的数据包含以下几个句子：\n \n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_ExampleCorpus.PNG)\n  则根据上述原理，我们可以获得如下的word-word co-occurrence matrix:\n\n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_word-wordMatrix.PNG)\n\n  &emsp;&emsp;使用共现次数可以衡量单词的相似性，但是随着词汇量的增加，矩阵的大小也会增加，需要很多空间来存储这一高维矩阵，后续的分类模型也会由于矩阵的稀疏性而存在稀疏性问题，因此我们需要对这一矩阵进行降维，获得低维（25-1000）的稠密向量。\n- **Method 1: Dimensionality Reduction on X (HW1)**:可以使用上文提到的SVD方法将共现矩阵分解。为了减少维数同时尽量保存有效信息，可保留对角矩阵的最大k个值，并将矩阵$U$,$V$相应的行列保留，对于大型矩阵而言，计算代价昂贵。\n- **Hacks to X (several used in Rohde et al. 2005)**  \n  按比例调整计数会很有效\n     - 对高频词进行缩放\n       - 使用$log$进行缩放\n       - $min(X,t),t\\approx100$\n       - 直接全部忽视\n     - 在基于窗口的计数中，提高更加接近的单词的计数\n     - 使用Person相关系数 \n   \n  实验结果如下图：\n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_InterestingSemanticPatterns.PNG)\n  $swim\\to swimmer , drive \\to driver$\n  &emsp;&emsp;在向量中出现了有趣的句法模式，语义向量基本上是动词和动词实施者的方向。\n\ncount based:使用整个矩阵的全局统计数据来直接估计\n- 优点\n   - 训练快速\n   - 统计数据高效利用\n- 缺点\n   - 主要用于捕捉单词相似性\n   - 对大量数据给予比例失调的重视  \n  \ndirect prediction：定义概率分布并试图预测单词\n- 优点\n   - 提高其他任务的性能\n   - 能捕获包括单词相似性等复杂模式\n- 缺点\n   - 量度与语料库相关\n   - 统计数据的低效使用\n\n## Glove算法\n &emsp;&emsp;Manning教授团队希望采取一种方法可与结合上述两种方法的优势，并将这种算法命名为**GloVe**(Global vectors的缩写)，该算法可以有效地利用全局地统计信息。  \n &emsp;&emsp;如何使用word-word co-occurance count来学习词语背后的含义呢？  \n &emsp;&emsp;首先定义一些符号：对于矩阵$X$,$X_{ij}$代表了单词$j$出现在单词$i$的上下文中的单词次数，则$X_i=\\sum_{k}X_{ik}$,即代表了所有出现在单词$i$的上下文中的单词个数，我们用$P_{ij}=P(j|i)=X_{ij}/X_i$来代表单词$j$出现在单词$i$上下文中的概率。\n >算法关键思想：共现概率的**比值**(而不是概率单一大小)可以对meaning component进行编码  \n\n &emsp;&emsp;来参考课上给出的例子：\n ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_RatiosOfCo-occurence.PNG)\n&emsp;&emsp;例如我们想区分热力学上两种不同状态ice与steam,它们之间的关系可通过与不同单词$x$的co-occurrence probablity的**比值**来描述，例如对于solid,虽然$P(solid|ice)$与$P(solid|steam)$本身很小，不能透露有效的信息，但是它们的**比值**$\\frac{P(solid|ice)}{P(solid|steam)}$较大，因为solid更多用来描述ice的状态而不是steam的状态，因此在ice的上下文中出现几率较大，对于gas情况则恰恰相反。而对于water这种描述ice与steam皆可或者fashion这种与两者都没什么联系的单词，比值接近于1.所以实际上co-occurence probablity的相对比值更有意义。  \n&emsp;&emsp;基于这些观察，课堂上直接给出了GloVe的损失函数形式：\n$$w_j \\cdot w_j = \\log P(i|j)$$\n$$J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2$$\n&emsp;&emsp;基于对以上概率比值的观察，我们假设模型的函数有如下形式：\n$$F(w_i,w_j,\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n&emsp;&emsp;其中$\\widetilde{w}$代表了上下文向量，如上文的solid,gas,water,fashion。$w_i,w_j$则是我们要比较的两个词汇，如上文的ice,steam。\n>&emsp;&emsp;F可选的形式很多，由于希望$F$能在单词向量空间内表示概率比值，有意向量空间是线性空间，一个自然假设是$F$是关于向量$w_i,w_j$的差的形式：\n$$F((w_i-w_j),\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n> 等式右边为标量形式，为了将左边矢量也转化为标量形式，使用矢量的点乘:\n$$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n>&emsp;&emsp;在此，作者又进行了对称性分析，即对于word-word co-occurrence,将一个vector划分为center word还是context word是不重要的，即在交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$的时候仍然成立，如何满足这种对称性呢？  \n>&emsp;&emsp;接下来分成两部来进行  \n>&emsp;&emsp;首先要求满足$F((w_i-w_j)^T \\widetilde{w}_k)=\\frac{F(w_i^T\\widetilde{w}_k)}{F(w_j^T\\widetilde{w}_k)}$,显然该方程的解为$F=\\exp$，同时也由此找对应项  \n\n&emsp;$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}} \\\\\\Rightarrow F(w_i^T\\widetilde{w}) = P_{ik} = \\frac{X_{ik}}{X_i}\\\\\\Rightarrow w_i^T\\widetilde{w}_k = \\log(P_{ik})=\\log(X_{ik}) - \\log(X_i)$  \n\n>&emsp;&emsp;注意其中$\\log(X_i)$破坏了交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$时的对称性，但是这一项与$k$无关，所以我们通过将其融入关于$w_i$的bias项$b_i$来解决。\n\n>&emsp;&emsp;第二步为了平衡对称性，我们对应的再加入一个关于$\\widetilde{w}_k$的bias项$\\widetilde{b}_k$,然后我们可以得到$w_i^T\\widetilde{w}_k+b_i+\\widetilde{b}_k = \\log(X_{ik})$\n\n>&emsp;&emsp;另一方面作者注意到模型的一个缺点是对于所有的co-occurrence的权重是一样的，所以他加入了前面的$f(X_{ij})$项来做weighted least squares regression模型，即为\n$$J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2$$\n>其中权重项$f$需满足以下条件\n - $f(0)=0$,因为要求$\\lim_{x\\rightarrow 0} f(x)\\log^2x$是有限的。\n - 较少发生的co-occurrence占比重较小\n - 对于较多发生的co-occurrence$f(x)$也不能过大\n  \n&emsp;&emsp;作者使用的较好的权重函数形式是：\n$$f(x)=\\begin{cases}\n(x/x_{max})^\\alpha &\\text{if $x\\lt x_{max}$}\\\\\n1 &\\text{otherwise}\n\\end{cases}\n$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_WeightedLeastSquaresRegression.PNG)\n- 模型优点\n  - 训练快速\n  - 可以扩展到大型语料库\n  - 即使是小语料库和小向量，性能也很好\n\n\n\n\n\n\n\n","source":"_posts/cs224N-CS224N笔记-二-Glove.md","raw":"---\ntitle: 'CS224N笔记 (二):Glove'\ndate: 2020-05-28 10:43:21\ntags: CS224N\ncategories: CS224N\ntop: 90\ncopyright: true\nmathjax: true \n---\n&emsp;&emsp;上一篇笔记[CS224N笔记(一):word vector](https://woshibwt.com/2020/05/25/CS224N%E7%AC%94%E8%AE%B0-%E4%B8%80-word-vector/#more)中教授主要讲课重点是基于local context window的**Word2Vec**模型，它是一种direct prediction模型。那么对于word vector是否还存在其他模型呢，答案当然是有，本次介绍的就是另一类count based global matrix factorization模型以及Manning教授结合这两种模型的优点提出的**Glove**模型。   \n&emsp;\n## 回顾：word2vec的主要思想\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG)\n$$P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}$$\n- 遍历整个语料库中的每个单词\n- 使用单词向量更好的预测周围的单词\n- 更新向量以更好的预测\n  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_Word2vex_ParametersAndComputations.PNG)\n>在这张图中，选取的特定向量是v矩阵的第四行与U的每一行向量做点积\n- 在这张图以及许多深度学习包中，每一行代表一个单词的词向量。经过点乘操作后的数字通过softmax映射为概率分布，注意该概率分布是对于该中心词而言的上下文中的概率分布，该分布与上下文所在的具体位置无关。\n- 我们希望对上下文中（相当频繁）出现的所有单词给出一个合理的概率统计。\n- the,and,that,of这类的停用词，有时简单地去掉这一部分可以使词向量效果更好。\n\n### 梯度下降的优化\n**Gradient Descent**： 每次使用全部样本进行更新\n**Stochastic Gradient Decent**:每次只使用单个样本更新  \n**Mini-batch**:\n- 通过平均值，减少梯度估计的噪音\n- 可在GPU上并行化运算，加快运算速度\n#### 词向量的随机梯度下降\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_SGDvector.PNG)\n\n由于$\\nabla_{\\theta}J_t(\\theta)$将会非常稀疏，因此我们只更新实际出现的向量。  \n解决方案  \n- 需要稀疏矩阵更新操作来只更新矩阵U和V中的特定行\n- 需要保留单词向量的散列\n  如果有数百万个单词向量，并且进行分布式计算，那么不用到处发送巨大的更新是很重要的。  \n#### 更多关于word2vec的细节\n为什么需要两个向量？\n- 更容易优化，最后可对两个向量取平均值  \n\n两个模型变体\n- **Skip-grams(SG)**\n  - 输入中心词并预测上下文中的单词(正是课堂中展示的这一种)\n- **Continuous Bag of Words(CBOW)**\n  - 输入上下文中的单词并预测中心词    \n   \n提升训练效率  \n&emsp;&emsp;之前选择的softmax训练方法虽然简单但代价很高，考虑使用负采样方法加快训练速率。  \n&emsp;&emsp;[作业二]()实现了使用**nagative sampling**(负采样方法)的skip-gram模型\n- 对一个由true pair(中心词及其上下文窗口中的词)与几个noise pair(中心词与随机词搭配)形成的样本，训练二元逻辑回归。  \n\n在论文中的(最大化)目标函数是  \n$$J(\\theta)=\\frac{1}{T}\\sum_{t=1}^TJ_t(\\theta)$$\n\n$$J_t(\\theta) = \\log\\sigma(u_o^Tv_c)+\\sum_{i=1}^k\\mathbb {E}_{j\\sim P(w)}\\left[\\log\\sigma\\left(-u_j^Tv_c\\right)\\right]$$  \n本课及作业中的目标函数是  \n$$J_{neg-sample}(o,v_c,U) = -log(\\sigma(u_o^Tv_c)) - \\sum_{k=1}^K\\log(\\sigma(-u_k^Tv_c))$$\n- 我们希望中心词与真实上下文单词的向量点积更大，中心词与随机单词的点击更小\n- k是负采样的样本数目\n  $$P(w) = U(w)^{3/4}/Z$$  \n&emsp;&emsp;使用上式作为抽样的分布，$U(w)$是[unigram分布]()，通过$\\frac{3}{4}$次方，相对减少常见单词的频率，增大稀有词的频率。$Z$用于生成概率分布。  \n## SVD模型\n&emsp;&emsp;暂时放下local context window的模型，现在来讨论count based模型，它的一个经典代表是**SVD**（Single Value Decomposition）模型：我们先扫过一遍所有数据，然后得到共现矩阵(co-occurance matrix),假设矩阵用$X$表示，我们对其使用SVD得到$X$的分解形式$USV^T$ (详情请见[奇异值分解](https://zhuanlan.zhihu.com/p/29846048))\n&emsp;&emsp;如何产生矩阵$X$通常有两种选择：\n- **word-document co-occurrence matrix**:其基本假设是在同一篇文章中出现的单词更有可能相互关联。假设单词$i$出现在文章$j$中，则矩阵元素$X_{ij}$加一，当我们处理完所有的文章后，就得到了矩阵$X$,其大小为$\\lvert V \\rvert \\times M$,其中$\\lvert V \\rvert$为词汇量，而$M$为文章数\n- **window-based word-word co-occurrence matrix**:该矩阵是利用某个定长窗口中单词与单词同时出现的个数来产生，下面用窗口长度为1来举例(常见的是5-10)，假设我们的数据包含以下几个句子：\n \n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_ExampleCorpus.PNG)\n  则根据上述原理，我们可以获得如下的word-word co-occurrence matrix:\n\n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_word-wordMatrix.PNG)\n\n  &emsp;&emsp;使用共现次数可以衡量单词的相似性，但是随着词汇量的增加，矩阵的大小也会增加，需要很多空间来存储这一高维矩阵，后续的分类模型也会由于矩阵的稀疏性而存在稀疏性问题，因此我们需要对这一矩阵进行降维，获得低维（25-1000）的稠密向量。\n- **Method 1: Dimensionality Reduction on X (HW1)**:可以使用上文提到的SVD方法将共现矩阵分解。为了减少维数同时尽量保存有效信息，可保留对角矩阵的最大k个值，并将矩阵$U$,$V$相应的行列保留，对于大型矩阵而言，计算代价昂贵。\n- **Hacks to X (several used in Rohde et al. 2005)**  \n  按比例调整计数会很有效\n     - 对高频词进行缩放\n       - 使用$log$进行缩放\n       - $min(X,t),t\\approx100$\n       - 直接全部忽视\n     - 在基于窗口的计数中，提高更加接近的单词的计数\n     - 使用Person相关系数 \n   \n  实验结果如下图：\n  ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_InterestingSemanticPatterns.PNG)\n  $swim\\to swimmer , drive \\to driver$\n  &emsp;&emsp;在向量中出现了有趣的句法模式，语义向量基本上是动词和动词实施者的方向。\n\ncount based:使用整个矩阵的全局统计数据来直接估计\n- 优点\n   - 训练快速\n   - 统计数据高效利用\n- 缺点\n   - 主要用于捕捉单词相似性\n   - 对大量数据给予比例失调的重视  \n  \ndirect prediction：定义概率分布并试图预测单词\n- 优点\n   - 提高其他任务的性能\n   - 能捕获包括单词相似性等复杂模式\n- 缺点\n   - 量度与语料库相关\n   - 统计数据的低效使用\n\n## Glove算法\n &emsp;&emsp;Manning教授团队希望采取一种方法可与结合上述两种方法的优势，并将这种算法命名为**GloVe**(Global vectors的缩写)，该算法可以有效地利用全局地统计信息。  \n &emsp;&emsp;如何使用word-word co-occurance count来学习词语背后的含义呢？  \n &emsp;&emsp;首先定义一些符号：对于矩阵$X$,$X_{ij}$代表了单词$j$出现在单词$i$的上下文中的单词次数，则$X_i=\\sum_{k}X_{ik}$,即代表了所有出现在单词$i$的上下文中的单词个数，我们用$P_{ij}=P(j|i)=X_{ij}/X_i$来代表单词$j$出现在单词$i$上下文中的概率。\n >算法关键思想：共现概率的**比值**(而不是概率单一大小)可以对meaning component进行编码  \n\n &emsp;&emsp;来参考课上给出的例子：\n ![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_RatiosOfCo-occurence.PNG)\n&emsp;&emsp;例如我们想区分热力学上两种不同状态ice与steam,它们之间的关系可通过与不同单词$x$的co-occurrence probablity的**比值**来描述，例如对于solid,虽然$P(solid|ice)$与$P(solid|steam)$本身很小，不能透露有效的信息，但是它们的**比值**$\\frac{P(solid|ice)}{P(solid|steam)}$较大，因为solid更多用来描述ice的状态而不是steam的状态，因此在ice的上下文中出现几率较大，对于gas情况则恰恰相反。而对于water这种描述ice与steam皆可或者fashion这种与两者都没什么联系的单词，比值接近于1.所以实际上co-occurence probablity的相对比值更有意义。  \n&emsp;&emsp;基于这些观察，课堂上直接给出了GloVe的损失函数形式：\n$$w_j \\cdot w_j = \\log P(i|j)$$\n$$J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2$$\n&emsp;&emsp;基于对以上概率比值的观察，我们假设模型的函数有如下形式：\n$$F(w_i,w_j,\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n&emsp;&emsp;其中$\\widetilde{w}$代表了上下文向量，如上文的solid,gas,water,fashion。$w_i,w_j$则是我们要比较的两个词汇，如上文的ice,steam。\n>&emsp;&emsp;F可选的形式很多，由于希望$F$能在单词向量空间内表示概率比值，有意向量空间是线性空间，一个自然假设是$F$是关于向量$w_i,w_j$的差的形式：\n$$F((w_i-w_j),\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n> 等式右边为标量形式，为了将左边矢量也转化为标量形式，使用矢量的点乘:\n$$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}$$\n>&emsp;&emsp;在此，作者又进行了对称性分析，即对于word-word co-occurrence,将一个vector划分为center word还是context word是不重要的，即在交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$的时候仍然成立，如何满足这种对称性呢？  \n>&emsp;&emsp;接下来分成两部来进行  \n>&emsp;&emsp;首先要求满足$F((w_i-w_j)^T \\widetilde{w}_k)=\\frac{F(w_i^T\\widetilde{w}_k)}{F(w_j^T\\widetilde{w}_k)}$,显然该方程的解为$F=\\exp$，同时也由此找对应项  \n\n&emsp;$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}} \\\\\\Rightarrow F(w_i^T\\widetilde{w}) = P_{ik} = \\frac{X_{ik}}{X_i}\\\\\\Rightarrow w_i^T\\widetilde{w}_k = \\log(P_{ik})=\\log(X_{ik}) - \\log(X_i)$  \n\n>&emsp;&emsp;注意其中$\\log(X_i)$破坏了交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$时的对称性，但是这一项与$k$无关，所以我们通过将其融入关于$w_i$的bias项$b_i$来解决。\n\n>&emsp;&emsp;第二步为了平衡对称性，我们对应的再加入一个关于$\\widetilde{w}_k$的bias项$\\widetilde{b}_k$,然后我们可以得到$w_i^T\\widetilde{w}_k+b_i+\\widetilde{b}_k = \\log(X_{ik})$\n\n>&emsp;&emsp;另一方面作者注意到模型的一个缺点是对于所有的co-occurrence的权重是一样的，所以他加入了前面的$f(X_{ij})$项来做weighted least squares regression模型，即为\n$$J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2$$\n>其中权重项$f$需满足以下条件\n - $f(0)=0$,因为要求$\\lim_{x\\rightarrow 0} f(x)\\log^2x$是有限的。\n - 较少发生的co-occurrence占比重较小\n - 对于较多发生的co-occurrence$f(x)$也不能过大\n  \n&emsp;&emsp;作者使用的较好的权重函数形式是：\n$$f(x)=\\begin{cases}\n(x/x_{max})^\\alpha &\\text{if $x\\lt x_{max}$}\\\\\n1 &\\text{otherwise}\n\\end{cases}\n$$\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_WeightedLeastSquaresRegression.PNG)\n- 模型优点\n  - 训练快速\n  - 可以扩展到大型语料库\n  - 即使是小语料库和小向量，性能也很好\n\n\n\n\n\n\n\n","slug":"cs224N-CS224N笔记-二-Glove","published":1,"updated":"2020-06-11T09:23:12.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jrc000fiwvzbs323fnd","content":"<p>&emsp;&emsp;上一篇笔记<a href=\"https://woshibwt.com/2020/05/25/CS224N%E7%AC%94%E8%AE%B0-%E4%B8%80-word-vector/#more\" target=\"_blank\" rel=\"noopener\">CS224N笔记(一):word vector</a>中教授主要讲课重点是基于local context window的<strong>Word2Vec</strong>模型，它是一种direct prediction模型。那么对于word vector是否还存在其他模型呢，答案当然是有，本次介绍的就是另一类count based global matrix factorization模型以及Manning教授结合这两种模型的优点提出的<strong>Glove</strong>模型。<br>&emsp;</p>\n<h2 id=\"回顾：word2vec的主要思想\"><a href=\"#回顾：word2vec的主要思想\" class=\"headerlink\" title=\"回顾：word2vec的主要思想\"></a>回顾：word2vec的主要思想</h2><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG\" alt></p>\n<script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script><ul>\n<li>遍历整个语料库中的每个单词</li>\n<li>使用单词向量更好的预测周围的单词</li>\n<li>更新向量以更好的预测</li>\n</ul>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_Word2vex_ParametersAndComputations.PNG\" alt></p>\n<blockquote>\n<p>在这张图中，选取的特定向量是v矩阵的第四行与U的每一行向量做点积</p>\n<ul>\n<li>在这张图以及许多深度学习包中，每一行代表一个单词的词向量。经过点乘操作后的数字通过softmax映射为概率分布，注意该概率分布是对于该中心词而言的上下文中的概率分布，该分布与上下文所在的具体位置无关。</li>\n<li>我们希望对上下文中（相当频繁）出现的所有单词给出一个合理的概率统计。</li>\n<li>the,and,that,of这类的停用词，有时简单地去掉这一部分可以使词向量效果更好。</li>\n</ul>\n</blockquote>\n<h3 id=\"梯度下降的优化\"><a href=\"#梯度下降的优化\" class=\"headerlink\" title=\"梯度下降的优化\"></a>梯度下降的优化</h3><p><strong>Gradient Descent</strong>： 每次使用全部样本进行更新<br><strong>Stochastic Gradient Decent</strong>:每次只使用单个样本更新<br><strong>Mini-batch</strong>:</p>\n<ul>\n<li>通过平均值，减少梯度估计的噪音</li>\n<li>可在GPU上并行化运算，加快运算速度<h4 id=\"词向量的随机梯度下降\"><a href=\"#词向量的随机梯度下降\" class=\"headerlink\" title=\"词向量的随机梯度下降\"></a>词向量的随机梯度下降</h4><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_SGDvector.PNG\" alt></li>\n</ul>\n<p>由于$\\nabla_{\\theta}J_t(\\theta)$将会非常稀疏，因此我们只更新实际出现的向量。<br>解决方案  </p>\n<ul>\n<li>需要稀疏矩阵更新操作来只更新矩阵U和V中的特定行</li>\n<li>需要保留单词向量的散列<br>如果有数百万个单词向量，并且进行分布式计算，那么不用到处发送巨大的更新是很重要的。  <h4 id=\"更多关于word2vec的细节\"><a href=\"#更多关于word2vec的细节\" class=\"headerlink\" title=\"更多关于word2vec的细节\"></a>更多关于word2vec的细节</h4>为什么需要两个向量？</li>\n<li>更容易优化，最后可对两个向量取平均值  </li>\n</ul>\n<p>两个模型变体</p>\n<ul>\n<li><strong>Skip-grams(SG)</strong><ul>\n<li>输入中心词并预测上下文中的单词(正是课堂中展示的这一种)</li>\n</ul>\n</li>\n<li><strong>Continuous Bag of Words(CBOW)</strong><ul>\n<li>输入上下文中的单词并预测中心词    </li>\n</ul>\n</li>\n</ul>\n<p>提升训练效率<br>&emsp;&emsp;之前选择的softmax训练方法虽然简单但代价很高，考虑使用负采样方法加快训练速率。<br>&emsp;&emsp;<a href>作业二</a>实现了使用<strong>nagative sampling</strong>(负采样方法)的skip-gram模型</p>\n<ul>\n<li>对一个由true pair(中心词及其上下文窗口中的词)与几个noise pair(中心词与随机词搭配)形成的样本，训练二元逻辑回归。  </li>\n</ul>\n<p>在论文中的(最大化)目标函数是  </p>\n<script type=\"math/tex; mode=display\">J(\\theta)=\\frac{1}{T}\\sum_{t=1}^TJ_t(\\theta)</script><script type=\"math/tex; mode=display\">J_t(\\theta) = \\log\\sigma(u_o^Tv_c)+\\sum_{i=1}^k\\mathbb {E}_{j\\sim P(w)}\\left[\\log\\sigma\\left(-u_j^Tv_c\\right)\\right]</script><p>本课及作业中的目标函数是  </p>\n<script type=\"math/tex; mode=display\">J_{neg-sample}(o,v_c,U) = -log(\\sigma(u_o^Tv_c)) - \\sum_{k=1}^K\\log(\\sigma(-u_k^Tv_c))</script><ul>\n<li>我们希望中心词与真实上下文单词的向量点积更大，中心词与随机单词的点击更小</li>\n<li>k是负采样的样本数目<script type=\"math/tex; mode=display\">P(w) = U(w)^{3/4}/Z</script>&emsp;&emsp;使用上式作为抽样的分布，$U(w)$是<a href>unigram分布</a>，通过$\\frac{3}{4}$次方，相对减少常见单词的频率，增大稀有词的频率。$Z$用于生成概率分布。  <h2 id=\"SVD模型\"><a href=\"#SVD模型\" class=\"headerlink\" title=\"SVD模型\"></a>SVD模型</h2>&emsp;&emsp;暂时放下local context window的模型，现在来讨论count based模型，它的一个经典代表是<strong>SVD</strong>（Single Value Decomposition）模型：我们先扫过一遍所有数据，然后得到共现矩阵(co-occurance matrix),假设矩阵用$X$表示，我们对其使用SVD得到$X$的分解形式$USV^T$ (详情请见<a href=\"https://zhuanlan.zhihu.com/p/29846048\" target=\"_blank\" rel=\"noopener\">奇异值分解</a>)<br>&emsp;&emsp;如何产生矩阵$X$通常有两种选择：</li>\n<li><strong>word-document co-occurrence matrix</strong>:其基本假设是在同一篇文章中出现的单词更有可能相互关联。假设单词$i$出现在文章$j$中，则矩阵元素$X_{ij}$加一，当我们处理完所有的文章后，就得到了矩阵$X$,其大小为$\\lvert V \\rvert \\times M$,其中$\\lvert V \\rvert$为词汇量，而$M$为文章数</li>\n<li><p><strong>window-based word-word co-occurrence matrix</strong>:该矩阵是利用某个定长窗口中单词与单词同时出现的个数来产生，下面用窗口长度为1来举例(常见的是5-10)，假设我们的数据包含以下几个句子：</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_ExampleCorpus.PNG\" alt><br>则根据上述原理，我们可以获得如下的word-word co-occurrence matrix:</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_word-wordMatrix.PNG\" alt></p>\n<p>&emsp;&emsp;使用共现次数可以衡量单词的相似性，但是随着词汇量的增加，矩阵的大小也会增加，需要很多空间来存储这一高维矩阵，后续的分类模型也会由于矩阵的稀疏性而存在稀疏性问题，因此我们需要对这一矩阵进行降维，获得低维（25-1000）的稠密向量。</p>\n</li>\n<li><strong>Method 1: Dimensionality Reduction on X (HW1)</strong>:可以使用上文提到的SVD方法将共现矩阵分解。为了减少维数同时尽量保存有效信息，可保留对角矩阵的最大k个值，并将矩阵$U$,$V$相应的行列保留，对于大型矩阵而言，计算代价昂贵。</li>\n<li><p><strong>Hacks to X (several used in Rohde et al. 2005)</strong><br>按比例调整计数会很有效</p>\n<ul>\n<li>对高频词进行缩放<ul>\n<li>使用$log$进行缩放</li>\n<li>$min(X,t),t\\approx100$</li>\n<li>直接全部忽视</li>\n</ul>\n</li>\n<li>在基于窗口的计数中，提高更加接近的单词的计数</li>\n<li>使用Person相关系数 </li>\n</ul>\n<p>实验结果如下图：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_InterestingSemanticPatterns.PNG\" alt><br>$swim\\to swimmer , drive \\to driver$<br>&emsp;&emsp;在向量中出现了有趣的句法模式，语义向量基本上是动词和动词实施者的方向。</p>\n</li>\n</ul>\n<p>count based:使用整个矩阵的全局统计数据来直接估计</p>\n<ul>\n<li>优点<ul>\n<li>训练快速</li>\n<li>统计数据高效利用</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>主要用于捕捉单词相似性</li>\n<li>对大量数据给予比例失调的重视  </li>\n</ul>\n</li>\n</ul>\n<p>direct prediction：定义概率分布并试图预测单词</p>\n<ul>\n<li>优点<ul>\n<li>提高其他任务的性能</li>\n<li>能捕获包括单词相似性等复杂模式</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>量度与语料库相关</li>\n<li>统计数据的低效使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Glove算法\"><a href=\"#Glove算法\" class=\"headerlink\" title=\"Glove算法\"></a>Glove算法</h2><p> &emsp;&emsp;Manning教授团队希望采取一种方法可与结合上述两种方法的优势，并将这种算法命名为<strong>GloVe</strong>(Global vectors的缩写)，该算法可以有效地利用全局地统计信息。<br> &emsp;&emsp;如何使用word-word co-occurance count来学习词语背后的含义呢？<br> &emsp;&emsp;首先定义一些符号：对于矩阵$X$,$X_{ij}$代表了单词$j$出现在单词$i$的上下文中的单词次数，则$X_i=\\sum_{k}X_{ik}$,即代表了所有出现在单词$i$的上下文中的单词个数，我们用$P_{ij}=P(j|i)=X_{ij}/X_i$来代表单词$j$出现在单词$i$上下文中的概率。</p>\n<blockquote>\n<p>算法关键思想：共现概率的<strong>比值</strong>(而不是概率单一大小)可以对meaning component进行编码  </p>\n</blockquote>\n<p> &emsp;&emsp;来参考课上给出的例子：<br> <img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_RatiosOfCo-occurence.PNG\" alt><br>&emsp;&emsp;例如我们想区分热力学上两种不同状态ice与steam,它们之间的关系可通过与不同单词$x$的co-occurrence probablity的<strong>比值</strong>来描述，例如对于solid,虽然$P(solid|ice)$与$P(solid|steam)$本身很小，不能透露有效的信息，但是它们的<strong>比值</strong>$\\frac{P(solid|ice)}{P(solid|steam)}$较大，因为solid更多用来描述ice的状态而不是steam的状态，因此在ice的上下文中出现几率较大，对于gas情况则恰恰相反。而对于water这种描述ice与steam皆可或者fashion这种与两者都没什么联系的单词，比值接近于1.所以实际上co-occurence probablity的相对比值更有意义。<br>&emsp;&emsp;基于这些观察，课堂上直接给出了GloVe的损失函数形式：</p>\n<script type=\"math/tex; mode=display\">w_j \\cdot w_j = \\log P(i|j)</script><script type=\"math/tex; mode=display\">J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2</script><p>&emsp;&emsp;基于对以上概率比值的观察，我们假设模型的函数有如下形式：</p>\n<script type=\"math/tex; mode=display\">F(w_i,w_j,\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>&emsp;&emsp;其中$\\widetilde{w}$代表了上下文向量，如上文的solid,gas,water,fashion。$w_i,w_j$则是我们要比较的两个词汇，如上文的ice,steam。</p>\n<blockquote>\n<p>&emsp;&emsp;F可选的形式很多，由于希望$F$能在单词向量空间内表示概率比值，有意向量空间是线性空间，一个自然假设是$F$是关于向量$w_i,w_j$的差的形式：</p>\n<script type=\"math/tex; mode=display\">F((w_i-w_j),\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>等式右边为标量形式，为了将左边矢量也转化为标量形式，使用矢量的点乘:</p>\n<script type=\"math/tex; mode=display\">F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>&emsp;&emsp;在此，作者又进行了对称性分析，即对于word-word co-occurrence,将一个vector划分为center word还是context word是不重要的，即在交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$的时候仍然成立，如何满足这种对称性呢？<br>&emsp;&emsp;接下来分成两部来进行<br>&emsp;&emsp;首先要求满足$F((w_i-w_j)^T \\widetilde{w}_k)=\\frac{F(w_i^T\\widetilde{w}_k)}{F(w_j^T\\widetilde{w}_k)}$,显然该方程的解为$F=\\exp$，同时也由此找对应项  </p>\n</blockquote>\n<p>&emsp;$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}} \\\\\\Rightarrow F(w_i^T\\widetilde{w}) = P_{ik} = \\frac{X_{ik}}{X_i}\\\\\\Rightarrow w_i^T\\widetilde{w}_k = \\log(P_{ik})=\\log(X_{ik}) - \\log(X_i)$  </p>\n<blockquote>\n<p>&emsp;&emsp;注意其中$\\log(X_i)$破坏了交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$时的对称性，但是这一项与$k$无关，所以我们通过将其融入关于$w_i$的bias项$b_i$来解决。</p>\n<p>&emsp;&emsp;第二步为了平衡对称性，我们对应的再加入一个关于$\\widetilde{w}_k$的bias项$\\widetilde{b}_k$,然后我们可以得到$w_i^T\\widetilde{w}_k+b_i+\\widetilde{b}_k = \\log(X_{ik})$</p>\n<p>&emsp;&emsp;另一方面作者注意到模型的一个缺点是对于所有的co-occurrence的权重是一样的，所以他加入了前面的$f(X_{ij})$项来做weighted least squares regression模型，即为</p>\n<script type=\"math/tex; mode=display\">J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2</script><p>其中权重项$f$需满足以下条件</p>\n<ul>\n<li>$f(0)=0$,因为要求$\\lim_{x\\rightarrow 0} f(x)\\log^2x$是有限的。</li>\n<li>较少发生的co-occurrence占比重较小</li>\n<li>对于较多发生的co-occurrence$f(x)$也不能过大</li>\n</ul>\n</blockquote>\n<p>&emsp;&emsp;作者使用的较好的权重函数形式是：</p>\n<script type=\"math/tex; mode=display\">f(x)=\\begin{cases}\n(x/x_{max})^\\alpha &\\text{if $x\\lt x_{max}$}\\\\\n1 &\\text{otherwise}\n\\end{cases}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_WeightedLeastSquaresRegression.PNG\" alt></p>\n<ul>\n<li>模型优点<ul>\n<li>训练快速</li>\n<li>可以扩展到大型语料库</li>\n<li>即使是小语料库和小向量，性能也很好</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":5241,"excerpt":"","more":"<p>&emsp;&emsp;上一篇笔记<a href=\"https://woshibwt.com/2020/05/25/CS224N%E7%AC%94%E8%AE%B0-%E4%B8%80-word-vector/#more\" target=\"_blank\" rel=\"noopener\">CS224N笔记(一):word vector</a>中教授主要讲课重点是基于local context window的<strong>Word2Vec</strong>模型，它是一种direct prediction模型。那么对于word vector是否还存在其他模型呢，答案当然是有，本次介绍的就是另一类count based global matrix factorization模型以及Manning教授结合这两种模型的优点提出的<strong>Glove</strong>模型。<br>&emsp;</p>\n<h2 id=\"回顾：word2vec的主要思想\"><a href=\"#回顾：word2vec的主要思想\" class=\"headerlink\" title=\"回顾：word2vec的主要思想\"></a>回顾：word2vec的主要思想</h2><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_centerword_into.PNG\" alt></p>\n<script type=\"math/tex; mode=display\">P(o|c) = \\frac{\\exp(u_o^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)}</script><ul>\n<li>遍历整个语料库中的每个单词</li>\n<li>使用单词向量更好的预测周围的单词</li>\n<li>更新向量以更好的预测</li>\n</ul>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_Word2vex_ParametersAndComputations.PNG\" alt></p>\n<blockquote>\n<p>在这张图中，选取的特定向量是v矩阵的第四行与U的每一行向量做点积</p>\n<ul>\n<li>在这张图以及许多深度学习包中，每一行代表一个单词的词向量。经过点乘操作后的数字通过softmax映射为概率分布，注意该概率分布是对于该中心词而言的上下文中的概率分布，该分布与上下文所在的具体位置无关。</li>\n<li>我们希望对上下文中（相当频繁）出现的所有单词给出一个合理的概率统计。</li>\n<li>the,and,that,of这类的停用词，有时简单地去掉这一部分可以使词向量效果更好。</li>\n</ul>\n</blockquote>\n<h3 id=\"梯度下降的优化\"><a href=\"#梯度下降的优化\" class=\"headerlink\" title=\"梯度下降的优化\"></a>梯度下降的优化</h3><p><strong>Gradient Descent</strong>： 每次使用全部样本进行更新<br><strong>Stochastic Gradient Decent</strong>:每次只使用单个样本更新<br><strong>Mini-batch</strong>:</p>\n<ul>\n<li>通过平均值，减少梯度估计的噪音</li>\n<li>可在GPU上并行化运算，加快运算速度<h4 id=\"词向量的随机梯度下降\"><a href=\"#词向量的随机梯度下降\" class=\"headerlink\" title=\"词向量的随机梯度下降\"></a>词向量的随机梯度下降</h4><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_SGDvector.PNG\" alt></li>\n</ul>\n<p>由于$\\nabla_{\\theta}J_t(\\theta)$将会非常稀疏，因此我们只更新实际出现的向量。<br>解决方案  </p>\n<ul>\n<li>需要稀疏矩阵更新操作来只更新矩阵U和V中的特定行</li>\n<li>需要保留单词向量的散列<br>如果有数百万个单词向量，并且进行分布式计算，那么不用到处发送巨大的更新是很重要的。  <h4 id=\"更多关于word2vec的细节\"><a href=\"#更多关于word2vec的细节\" class=\"headerlink\" title=\"更多关于word2vec的细节\"></a>更多关于word2vec的细节</h4>为什么需要两个向量？</li>\n<li>更容易优化，最后可对两个向量取平均值  </li>\n</ul>\n<p>两个模型变体</p>\n<ul>\n<li><strong>Skip-grams(SG)</strong><ul>\n<li>输入中心词并预测上下文中的单词(正是课堂中展示的这一种)</li>\n</ul>\n</li>\n<li><strong>Continuous Bag of Words(CBOW)</strong><ul>\n<li>输入上下文中的单词并预测中心词    </li>\n</ul>\n</li>\n</ul>\n<p>提升训练效率<br>&emsp;&emsp;之前选择的softmax训练方法虽然简单但代价很高，考虑使用负采样方法加快训练速率。<br>&emsp;&emsp;<a href>作业二</a>实现了使用<strong>nagative sampling</strong>(负采样方法)的skip-gram模型</p>\n<ul>\n<li>对一个由true pair(中心词及其上下文窗口中的词)与几个noise pair(中心词与随机词搭配)形成的样本，训练二元逻辑回归。  </li>\n</ul>\n<p>在论文中的(最大化)目标函数是  </p>\n<script type=\"math/tex; mode=display\">J(\\theta)=\\frac{1}{T}\\sum_{t=1}^TJ_t(\\theta)</script><script type=\"math/tex; mode=display\">J_t(\\theta) = \\log\\sigma(u_o^Tv_c)+\\sum_{i=1}^k\\mathbb {E}_{j\\sim P(w)}\\left[\\log\\sigma\\left(-u_j^Tv_c\\right)\\right]</script><p>本课及作业中的目标函数是  </p>\n<script type=\"math/tex; mode=display\">J_{neg-sample}(o,v_c,U) = -log(\\sigma(u_o^Tv_c)) - \\sum_{k=1}^K\\log(\\sigma(-u_k^Tv_c))</script><ul>\n<li>我们希望中心词与真实上下文单词的向量点积更大，中心词与随机单词的点击更小</li>\n<li>k是负采样的样本数目<script type=\"math/tex; mode=display\">P(w) = U(w)^{3/4}/Z</script>&emsp;&emsp;使用上式作为抽样的分布，$U(w)$是<a href>unigram分布</a>，通过$\\frac{3}{4}$次方，相对减少常见单词的频率，增大稀有词的频率。$Z$用于生成概率分布。  <h2 id=\"SVD模型\"><a href=\"#SVD模型\" class=\"headerlink\" title=\"SVD模型\"></a>SVD模型</h2>&emsp;&emsp;暂时放下local context window的模型，现在来讨论count based模型，它的一个经典代表是<strong>SVD</strong>（Single Value Decomposition）模型：我们先扫过一遍所有数据，然后得到共现矩阵(co-occurance matrix),假设矩阵用$X$表示，我们对其使用SVD得到$X$的分解形式$USV^T$ (详情请见<a href=\"https://zhuanlan.zhihu.com/p/29846048\" target=\"_blank\" rel=\"noopener\">奇异值分解</a>)<br>&emsp;&emsp;如何产生矩阵$X$通常有两种选择：</li>\n<li><strong>word-document co-occurrence matrix</strong>:其基本假设是在同一篇文章中出现的单词更有可能相互关联。假设单词$i$出现在文章$j$中，则矩阵元素$X_{ij}$加一，当我们处理完所有的文章后，就得到了矩阵$X$,其大小为$\\lvert V \\rvert \\times M$,其中$\\lvert V \\rvert$为词汇量，而$M$为文章数</li>\n<li><p><strong>window-based word-word co-occurrence matrix</strong>:该矩阵是利用某个定长窗口中单词与单词同时出现的个数来产生，下面用窗口长度为1来举例(常见的是5-10)，假设我们的数据包含以下几个句子：</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson1_ExampleCorpus.PNG\" alt><br>则根据上述原理，我们可以获得如下的word-word co-occurrence matrix:</p>\n<p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_word-wordMatrix.PNG\" alt></p>\n<p>&emsp;&emsp;使用共现次数可以衡量单词的相似性，但是随着词汇量的增加，矩阵的大小也会增加，需要很多空间来存储这一高维矩阵，后续的分类模型也会由于矩阵的稀疏性而存在稀疏性问题，因此我们需要对这一矩阵进行降维，获得低维（25-1000）的稠密向量。</p>\n</li>\n<li><strong>Method 1: Dimensionality Reduction on X (HW1)</strong>:可以使用上文提到的SVD方法将共现矩阵分解。为了减少维数同时尽量保存有效信息，可保留对角矩阵的最大k个值，并将矩阵$U$,$V$相应的行列保留，对于大型矩阵而言，计算代价昂贵。</li>\n<li><p><strong>Hacks to X (several used in Rohde et al. 2005)</strong><br>按比例调整计数会很有效</p>\n<ul>\n<li>对高频词进行缩放<ul>\n<li>使用$log$进行缩放</li>\n<li>$min(X,t),t\\approx100$</li>\n<li>直接全部忽视</li>\n</ul>\n</li>\n<li>在基于窗口的计数中，提高更加接近的单词的计数</li>\n<li>使用Person相关系数 </li>\n</ul>\n<p>实验结果如下图：<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_InterestingSemanticPatterns.PNG\" alt><br>$swim\\to swimmer , drive \\to driver$<br>&emsp;&emsp;在向量中出现了有趣的句法模式，语义向量基本上是动词和动词实施者的方向。</p>\n</li>\n</ul>\n<p>count based:使用整个矩阵的全局统计数据来直接估计</p>\n<ul>\n<li>优点<ul>\n<li>训练快速</li>\n<li>统计数据高效利用</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>主要用于捕捉单词相似性</li>\n<li>对大量数据给予比例失调的重视  </li>\n</ul>\n</li>\n</ul>\n<p>direct prediction：定义概率分布并试图预测单词</p>\n<ul>\n<li>优点<ul>\n<li>提高其他任务的性能</li>\n<li>能捕获包括单词相似性等复杂模式</li>\n</ul>\n</li>\n<li>缺点<ul>\n<li>量度与语料库相关</li>\n<li>统计数据的低效使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Glove算法\"><a href=\"#Glove算法\" class=\"headerlink\" title=\"Glove算法\"></a>Glove算法</h2><p> &emsp;&emsp;Manning教授团队希望采取一种方法可与结合上述两种方法的优势，并将这种算法命名为<strong>GloVe</strong>(Global vectors的缩写)，该算法可以有效地利用全局地统计信息。<br> &emsp;&emsp;如何使用word-word co-occurance count来学习词语背后的含义呢？<br> &emsp;&emsp;首先定义一些符号：对于矩阵$X$,$X_{ij}$代表了单词$j$出现在单词$i$的上下文中的单词次数，则$X_i=\\sum_{k}X_{ik}$,即代表了所有出现在单词$i$的上下文中的单词个数，我们用$P_{ij}=P(j|i)=X_{ij}/X_i$来代表单词$j$出现在单词$i$上下文中的概率。</p>\n<blockquote>\n<p>算法关键思想：共现概率的<strong>比值</strong>(而不是概率单一大小)可以对meaning component进行编码  </p>\n</blockquote>\n<p> &emsp;&emsp;来参考课上给出的例子：<br> <img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_RatiosOfCo-occurence.PNG\" alt><br>&emsp;&emsp;例如我们想区分热力学上两种不同状态ice与steam,它们之间的关系可通过与不同单词$x$的co-occurrence probablity的<strong>比值</strong>来描述，例如对于solid,虽然$P(solid|ice)$与$P(solid|steam)$本身很小，不能透露有效的信息，但是它们的<strong>比值</strong>$\\frac{P(solid|ice)}{P(solid|steam)}$较大，因为solid更多用来描述ice的状态而不是steam的状态，因此在ice的上下文中出现几率较大，对于gas情况则恰恰相反。而对于water这种描述ice与steam皆可或者fashion这种与两者都没什么联系的单词，比值接近于1.所以实际上co-occurence probablity的相对比值更有意义。<br>&emsp;&emsp;基于这些观察，课堂上直接给出了GloVe的损失函数形式：</p>\n<script type=\"math/tex; mode=display\">w_j \\cdot w_j = \\log P(i|j)</script><script type=\"math/tex; mode=display\">J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2</script><p>&emsp;&emsp;基于对以上概率比值的观察，我们假设模型的函数有如下形式：</p>\n<script type=\"math/tex; mode=display\">F(w_i,w_j,\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>&emsp;&emsp;其中$\\widetilde{w}$代表了上下文向量，如上文的solid,gas,water,fashion。$w_i,w_j$则是我们要比较的两个词汇，如上文的ice,steam。</p>\n<blockquote>\n<p>&emsp;&emsp;F可选的形式很多，由于希望$F$能在单词向量空间内表示概率比值，有意向量空间是线性空间，一个自然假设是$F$是关于向量$w_i,w_j$的差的形式：</p>\n<script type=\"math/tex; mode=display\">F((w_i-w_j),\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>等式右边为标量形式，为了将左边矢量也转化为标量形式，使用矢量的点乘:</p>\n<script type=\"math/tex; mode=display\">F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}}</script><p>&emsp;&emsp;在此，作者又进行了对称性分析，即对于word-word co-occurrence,将一个vector划分为center word还是context word是不重要的，即在交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$的时候仍然成立，如何满足这种对称性呢？<br>&emsp;&emsp;接下来分成两部来进行<br>&emsp;&emsp;首先要求满足$F((w_i-w_j)^T \\widetilde{w}_k)=\\frac{F(w_i^T\\widetilde{w}_k)}{F(w_j^T\\widetilde{w}_k)}$,显然该方程的解为$F=\\exp$，同时也由此找对应项  </p>\n</blockquote>\n<p>&emsp;$F((w_i-w_j)^T\\widetilde{w}_k) = \\frac{P_{ik}}{P_{jk}} \\\\\\Rightarrow F(w_i^T\\widetilde{w}) = P_{ik} = \\frac{X_{ik}}{X_i}\\\\\\Rightarrow w_i^T\\widetilde{w}_k = \\log(P_{ik})=\\log(X_{ik}) - \\log(X_i)$  </p>\n<blockquote>\n<p>&emsp;&emsp;注意其中$\\log(X_i)$破坏了交换$w\\Leftrightarrow \\widetilde{w}$与$X \\Leftrightarrow X^T$时的对称性，但是这一项与$k$无关，所以我们通过将其融入关于$w_i$的bias项$b_i$来解决。</p>\n<p>&emsp;&emsp;第二步为了平衡对称性，我们对应的再加入一个关于$\\widetilde{w}_k$的bias项$\\widetilde{b}_k$,然后我们可以得到$w_i^T\\widetilde{w}_k+b_i+\\widetilde{b}_k = \\log(X_{ik})$</p>\n<p>&emsp;&emsp;另一方面作者注意到模型的一个缺点是对于所有的co-occurrence的权重是一样的，所以他加入了前面的$f(X_{ij})$项来做weighted least squares regression模型，即为</p>\n<script type=\"math/tex; mode=display\">J = \\sum_{i,j=1}^V {f(X_{ij})(w_i^T\\widetilde{w}_j+b_i+\\widetilde{b}_j-\\log X_{ij})}^2</script><p>其中权重项$f$需满足以下条件</p>\n<ul>\n<li>$f(0)=0$,因为要求$\\lim_{x\\rightarrow 0} f(x)\\log^2x$是有限的。</li>\n<li>较少发生的co-occurrence占比重较小</li>\n<li>对于较多发生的co-occurrence$f(x)$也不能过大</li>\n</ul>\n</blockquote>\n<p>&emsp;&emsp;作者使用的较好的权重函数形式是：</p>\n<script type=\"math/tex; mode=display\">f(x)=\\begin{cases}\n(x/x_{max})^\\alpha &\\text{if $x\\lt x_{max}$}\\\\\n1 &\\text{otherwise}\n\\end{cases}</script><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson2_WeightedLeastSquaresRegression.PNG\" alt></p>\n<ul>\n<li>模型优点<ul>\n<li>训练快速</li>\n<li>可以扩展到大型语料库</li>\n<li>即使是小语料库和小向量，性能也很好</li>\n</ul>\n</li>\n</ul>\n"},{"title":"CS224N笔记（三，四）-Word Window Classification,Nerual Networks,Matrix Calculus","date":"2020-06-04T15:07:00.000Z","top":90,"copyright":true,"mathjax":true,"_content":"&emsp;&emsp;本次课程主要介绍了神经网络的基础知识并以**命名实体识别Named Entity Recognition(NER)**来介绍DNN在NLP领域内的应用。  \n\n## 分类的设置与符号\n&emsp;&emsp;通常我们有由样本组成的训练数据集\n$$\\{x_i,y_i\\}^{N}_{i=1} $$\n&emsp;&emsp;其中$x_i$是输入，例如单词，句子，文档，维度为$d$  \n&emsp;&emsp;而$y_i$是我们尝试预测的标签（C种类别中的其中一种）  \n### 直观分类\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG)\n- 固定的二维单词分类\n- 使用softmax/logistic回归\n- 线性决策边界\n\n**传统的机器学习、统计学方法**：假设$x_i$是固定的，训练softmax/logistic回归的权重$W \\in \\mathbb{R}^{C\\times d}$来决定边界（超平面）  \n**方法**：对每个$x$,预测\n$$p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}$$\n&emsp;&emsp;将预测函数分为两个步骤：  \n&emsp;&emsp;1.将$W$的$y^{th}$行和$x$中的对应行相乘得到分数\n$$W_y \\cdot x = \\sum_{i=1}^dW_{yi}x_i = f_y $$\n&emsp;&emsp;计算所有的$f_c,for \\ c =1,...,C$\n&emsp;&emsp;2.使用softmax函数获得归一化的概率\n$$p(y|x) = \\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)} = softmax(f_y)$$ \n### 使用softmax与交叉熵训练\n&emsp;&emsp;对于每个训练样本$(x,y)$,我们的目标是最大化正确类$y$的概率，或者最小化该类的负对数概率：\n$$-\\log p(y|x) = - \\log\\left(\\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$  \n### 什么是交叉熵\n- 其概念来源于信息论，用于衡量两个分布之间的差异\n- 令真实分布为$p$\n- 令我们计算的模型概率为$q$\n- 交叉熵即为：\n  $$H(p,q) = -\\sum_{c=1}^Cp(c)\\log q(c)$$\n### 整个数据集上的分类\n&emsp;&emsp;在整个数据集${\\{x_i,y_i\\}}_{i=1}^N$上的交叉熵损失函数，是所有样本的交叉熵的均值：\n$$J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$\n### 传统的机器学习优化\n&emsp;&emsp;一般机器学习的参数$\\theta$通常只由$W$的列组成：\n\n$$\\theta = \\begin{bmatrix}\nW_1          \\\\\n.            \\\\\n.            \\\\\n.            \\\\\nW_d\n  \n\\end{bmatrix} \\in W(:)\\in \\mathbb{R}^{Cd}$$\n&emsp;&emsp;因此，我们通过以下方式更新决策边界：\n\n$$\\nabla_\\theta J(\\theta) = \\begin{bmatrix}\n\\nabla_{W_1} \\\\\n.            \\\\\n.            \\\\\n.            \\\\\n\\nabla_{W_d}\n  \n\\end{bmatrix} \\in \\mathbb{R}^{Cd}$$\n### 神经网络分类器\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG)\n- 单独使用Softmax(或logistic回归)效果并不是很好\n- softmax只能给出线性决策边界   \n  \n&emsp;&emsp;**神经网络基础知识在这里省略**😀\n\n## 命名实体识别（NER）\n- 任务：比如查找和分类文本中的名称\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NERTask.PNG)\n- 可能的用途\n   - 跟踪文档中提到的特定实体\n   - 对于问答，答案通常是命名实体\n   - 许多需要的信息实施上是命名实体之间的关联  \n   - \n&emsp;&emsp;我们通过在上下文中对单词进行分类，然后将实体提取为单词子序列来预测实体。\n### 为什么NER可能相当困难\n- 很难计算出实体的边界\n- 很难知道某物是否是一个实体\n- 很难知道新奇实体的类别\n- 实体是模糊的，依赖于上下文\n### Window Classification\n&emsp;&emsp;由于同一个词在不同上下文中可能是不同的命名实体，因此一个思路是通过对该词在某一窗口内附近的词来对其进行分类(类别包括人民，地名，机构名等)。  \n&emsp;&emsp;对于museums in Paris are amazing,我们希望探测到地名Paris。假设窗口大小为2，并且通过word2vec得到窗口内五个单词的词向量，则我们可以将这5个向量连起来得到更大的向量，再对该向量进行分类。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_Paris.PNG)\n&emsp;&emsp;对于具有多个class的分类问题，我们通常用softmax classofier来解决假设用$x$来表示输入的词向量，$y$来表示对应的class，总计有$C$个class,则$x$对应类别为$y$的概率为：\n$$p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}$$\n&emsp;&emsp;损失函数为交叉熵：\n$$J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$\n&emsp;&emsp;为了处理输入元素间的非线性关系，我们可以利用神经网络，并且输出层是每一个class概率的softmax layer。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NerualNetworkParis.jpg)\n之后可以使用随机梯度下降算法SGD来更新网络并利用[反向传播算法]()来有效率的计算梯度。\n\n### Binary classification with unnormalized scores\n&emsp;&emsp;对于之前的例子$X_{window} = [X_{museum} \\ \\ \\ X_{in}\\ \\ \\ X_{paris}\\ \\ \\ X_{are} \\ \\ \\ X_{amazing}]$。假设我们要对中心词是否为一个地点进行分类，与word2vec类似，我们将便利语料库中的所有位置，但这一次只有一些位置能获得高分，例如，窗口的中心有一个实际的NER Location时会获得高分。\n### Binary classification with unnormalized scores\n&emsp;&emsp;例子：**Not all museums in Paris are amazing**  \n&emsp;&emsp;在这里只有以**Paris**为中心的窗口是真正的窗口，所有其他窗口都\"毁坏了\"，因为它们的中心没有具体的实体位置。\n### Binary classification with unnormalized scores\n&emsp;&emsp;使用神经激活$a$简单给出一个非标准化的分数\n$$score(x) = U^Ta\\in\\mathbb{R}$$\n&emsp;&emsp;在这里用一个三层神经网络计算一个窗口的得分\n$$s = score(\"museums in Paris are amazing\")$$\n$$s = U^Tf(Wx+b)$$\n$$x\\in\\mathbb{R}^{20\\times 1},W\\in\\mathbb{R}^{8\\times20},U\\in\\mathbb{R}^{8\\times1}$$\n### The max-margin loss\n- 训练目标，让真实窗口的得分更高，让被损坏的窗口得分更低\n- 真实窗口：$s = score(\"museums \\ in \\ Paris \\ \\ are \\ amazing\")$\n- 被损坏的窗口$sc = score(\"Not \\ all \\ museums \\ in \\ Paris\")$\n- 最小化$J=max(0)$\n- 可以使用SGD,单窗口的目标函数为：$J = max(0,1-s+s_c)$\n- 每个中心有Ner位置的窗口得分比被损坏的窗口高1分\n- 要获得完整的目标函数：为每个真实窗口采样几个损坏的窗口。对所有窗口求和。\n### Example Jacobian: Elementwise activation Function\n$$h = f(z),\\frac{\\partial h}{\\partial z} = ?,\\mathbf{h,z}\\in\\mathbb{R}^n$$","source":"_posts/CS224N笔记-（三，四）-Word-Window-Classification-Nerual-Networks-Matrix-Calculus.md","raw":"---\ntitle: 'CS224N笔记（三，四）-Word Window Classification,Nerual Networks,Matrix Calculus'\ndate: 2020-06-04 23:07:00\ntags: nlp 机器学习\ncategories: CS224N\ntop: 90\ncopyright: true\nmathjax: true\n---\n&emsp;&emsp;本次课程主要介绍了神经网络的基础知识并以**命名实体识别Named Entity Recognition(NER)**来介绍DNN在NLP领域内的应用。  \n\n## 分类的设置与符号\n&emsp;&emsp;通常我们有由样本组成的训练数据集\n$$\\{x_i,y_i\\}^{N}_{i=1} $$\n&emsp;&emsp;其中$x_i$是输入，例如单词，句子，文档，维度为$d$  \n&emsp;&emsp;而$y_i$是我们尝试预测的标签（C种类别中的其中一种）  \n### 直观分类\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG)\n- 固定的二维单词分类\n- 使用softmax/logistic回归\n- 线性决策边界\n\n**传统的机器学习、统计学方法**：假设$x_i$是固定的，训练softmax/logistic回归的权重$W \\in \\mathbb{R}^{C\\times d}$来决定边界（超平面）  \n**方法**：对每个$x$,预测\n$$p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}$$\n&emsp;&emsp;将预测函数分为两个步骤：  \n&emsp;&emsp;1.将$W$的$y^{th}$行和$x$中的对应行相乘得到分数\n$$W_y \\cdot x = \\sum_{i=1}^dW_{yi}x_i = f_y $$\n&emsp;&emsp;计算所有的$f_c,for \\ c =1,...,C$\n&emsp;&emsp;2.使用softmax函数获得归一化的概率\n$$p(y|x) = \\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)} = softmax(f_y)$$ \n### 使用softmax与交叉熵训练\n&emsp;&emsp;对于每个训练样本$(x,y)$,我们的目标是最大化正确类$y$的概率，或者最小化该类的负对数概率：\n$$-\\log p(y|x) = - \\log\\left(\\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$  \n### 什么是交叉熵\n- 其概念来源于信息论，用于衡量两个分布之间的差异\n- 令真实分布为$p$\n- 令我们计算的模型概率为$q$\n- 交叉熵即为：\n  $$H(p,q) = -\\sum_{c=1}^Cp(c)\\log q(c)$$\n### 整个数据集上的分类\n&emsp;&emsp;在整个数据集${\\{x_i,y_i\\}}_{i=1}^N$上的交叉熵损失函数，是所有样本的交叉熵的均值：\n$$J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$\n### 传统的机器学习优化\n&emsp;&emsp;一般机器学习的参数$\\theta$通常只由$W$的列组成：\n\n$$\\theta = \\begin{bmatrix}\nW_1          \\\\\n.            \\\\\n.            \\\\\n.            \\\\\nW_d\n  \n\\end{bmatrix} \\in W(:)\\in \\mathbb{R}^{Cd}$$\n&emsp;&emsp;因此，我们通过以下方式更新决策边界：\n\n$$\\nabla_\\theta J(\\theta) = \\begin{bmatrix}\n\\nabla_{W_1} \\\\\n.            \\\\\n.            \\\\\n.            \\\\\n\\nabla_{W_d}\n  \n\\end{bmatrix} \\in \\mathbb{R}^{Cd}$$\n### 神经网络分类器\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG)\n- 单独使用Softmax(或logistic回归)效果并不是很好\n- softmax只能给出线性决策边界   \n  \n&emsp;&emsp;**神经网络基础知识在这里省略**😀\n\n## 命名实体识别（NER）\n- 任务：比如查找和分类文本中的名称\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NERTask.PNG)\n- 可能的用途\n   - 跟踪文档中提到的特定实体\n   - 对于问答，答案通常是命名实体\n   - 许多需要的信息实施上是命名实体之间的关联  \n   - \n&emsp;&emsp;我们通过在上下文中对单词进行分类，然后将实体提取为单词子序列来预测实体。\n### 为什么NER可能相当困难\n- 很难计算出实体的边界\n- 很难知道某物是否是一个实体\n- 很难知道新奇实体的类别\n- 实体是模糊的，依赖于上下文\n### Window Classification\n&emsp;&emsp;由于同一个词在不同上下文中可能是不同的命名实体，因此一个思路是通过对该词在某一窗口内附近的词来对其进行分类(类别包括人民，地名，机构名等)。  \n&emsp;&emsp;对于museums in Paris are amazing,我们希望探测到地名Paris。假设窗口大小为2，并且通过word2vec得到窗口内五个单词的词向量，则我们可以将这5个向量连起来得到更大的向量，再对该向量进行分类。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_Paris.PNG)\n&emsp;&emsp;对于具有多个class的分类问题，我们通常用softmax classofier来解决假设用$x$来表示输入的词向量，$y$来表示对应的class，总计有$C$个class,则$x$对应类别为$y$的概率为：\n$$p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}$$\n&emsp;&emsp;损失函数为交叉熵：\n$$J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)$$\n&emsp;&emsp;为了处理输入元素间的非线性关系，我们可以利用神经网络，并且输出层是每一个class概率的softmax layer。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NerualNetworkParis.jpg)\n之后可以使用随机梯度下降算法SGD来更新网络并利用[反向传播算法]()来有效率的计算梯度。\n\n### Binary classification with unnormalized scores\n&emsp;&emsp;对于之前的例子$X_{window} = [X_{museum} \\ \\ \\ X_{in}\\ \\ \\ X_{paris}\\ \\ \\ X_{are} \\ \\ \\ X_{amazing}]$。假设我们要对中心词是否为一个地点进行分类，与word2vec类似，我们将便利语料库中的所有位置，但这一次只有一些位置能获得高分，例如，窗口的中心有一个实际的NER Location时会获得高分。\n### Binary classification with unnormalized scores\n&emsp;&emsp;例子：**Not all museums in Paris are amazing**  \n&emsp;&emsp;在这里只有以**Paris**为中心的窗口是真正的窗口，所有其他窗口都\"毁坏了\"，因为它们的中心没有具体的实体位置。\n### Binary classification with unnormalized scores\n&emsp;&emsp;使用神经激活$a$简单给出一个非标准化的分数\n$$score(x) = U^Ta\\in\\mathbb{R}$$\n&emsp;&emsp;在这里用一个三层神经网络计算一个窗口的得分\n$$s = score(\"museums in Paris are amazing\")$$\n$$s = U^Tf(Wx+b)$$\n$$x\\in\\mathbb{R}^{20\\times 1},W\\in\\mathbb{R}^{8\\times20},U\\in\\mathbb{R}^{8\\times1}$$\n### The max-margin loss\n- 训练目标，让真实窗口的得分更高，让被损坏的窗口得分更低\n- 真实窗口：$s = score(\"museums \\ in \\ Paris \\ \\ are \\ amazing\")$\n- 被损坏的窗口$sc = score(\"Not \\ all \\ museums \\ in \\ Paris\")$\n- 最小化$J=max(0)$\n- 可以使用SGD,单窗口的目标函数为：$J = max(0,1-s+s_c)$\n- 每个中心有Ner位置的窗口得分比被损坏的窗口高1分\n- 要获得完整的目标函数：为每个真实窗口采样几个损坏的窗口。对所有窗口求和。\n### Example Jacobian: Elementwise activation Function\n$$h = f(z),\\frac{\\partial h}{\\partial z} = ?,\\mathbf{h,z}\\in\\mathbb{R}^n$$","slug":"CS224N笔记-（三，四）-Word-Window-Classification-Nerual-Networks-Matrix-Calculus","published":1,"updated":"2020-06-11T09:23:10.496Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jre000jiwvzhlg43aud","content":"<p>&emsp;&emsp;本次课程主要介绍了神经网络的基础知识并以<strong>命名实体识别Named Entity Recognition(NER)</strong>来介绍DNN在NLP领域内的应用。  </p>\n<h2 id=\"分类的设置与符号\"><a href=\"#分类的设置与符号\" class=\"headerlink\" title=\"分类的设置与符号\"></a>分类的设置与符号</h2><p>&emsp;&emsp;通常我们有由样本组成的训练数据集</p>\n<script type=\"math/tex; mode=display\">\\{x_i,y_i\\}^{N}_{i=1}</script><p>&emsp;&emsp;其中$x_i$是输入，例如单词，句子，文档，维度为$d$<br>&emsp;&emsp;而$y_i$是我们尝试预测的标签（C种类别中的其中一种）  </p>\n<h3 id=\"直观分类\"><a href=\"#直观分类\" class=\"headerlink\" title=\"直观分类\"></a>直观分类</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG\" alt></p>\n<ul>\n<li>固定的二维单词分类</li>\n<li>使用softmax/logistic回归</li>\n<li>线性决策边界</li>\n</ul>\n<p><strong>传统的机器学习、统计学方法</strong>：假设$x_i$是固定的，训练softmax/logistic回归的权重$W \\in \\mathbb{R}^{C\\times d}$来决定边界（超平面）<br><strong>方法</strong>：对每个$x$,预测</p>\n<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}</script><p>&emsp;&emsp;将预测函数分为两个步骤：<br>&emsp;&emsp;1.将$W$的$y^{th}$行和$x$中的对应行相乘得到分数</p>\n<script type=\"math/tex; mode=display\">W_y \\cdot x = \\sum_{i=1}^dW_{yi}x_i = f_y</script><p>&emsp;&emsp;计算所有的$f_c,for \\ c =1,…,C$<br>&emsp;&emsp;2.使用softmax函数获得归一化的概率</p>\n<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)} = softmax(f_y)</script><h3 id=\"使用softmax与交叉熵训练\"><a href=\"#使用softmax与交叉熵训练\" class=\"headerlink\" title=\"使用softmax与交叉熵训练\"></a>使用softmax与交叉熵训练</h3><p>&emsp;&emsp;对于每个训练样本$(x,y)$,我们的目标是最大化正确类$y$的概率，或者最小化该类的负对数概率：</p>\n<script type=\"math/tex; mode=display\">-\\log p(y|x) = - \\log\\left(\\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script><h3 id=\"什么是交叉熵\"><a href=\"#什么是交叉熵\" class=\"headerlink\" title=\"什么是交叉熵\"></a>什么是交叉熵</h3><ul>\n<li>其概念来源于信息论，用于衡量两个分布之间的差异</li>\n<li>令真实分布为$p$</li>\n<li>令我们计算的模型概率为$q$</li>\n<li>交叉熵即为：<script type=\"math/tex; mode=display\">H(p,q) = -\\sum_{c=1}^Cp(c)\\log q(c)</script><h3 id=\"整个数据集上的分类\"><a href=\"#整个数据集上的分类\" class=\"headerlink\" title=\"整个数据集上的分类\"></a>整个数据集上的分类</h3>&emsp;&emsp;在整个数据集${\\{x_i,y_i\\}}_{i=1}^N$上的交叉熵损失函数，是所有样本的交叉熵的均值：<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script><h3 id=\"传统的机器学习优化\"><a href=\"#传统的机器学习优化\" class=\"headerlink\" title=\"传统的机器学习优化\"></a>传统的机器学习优化</h3>&emsp;&emsp;一般机器学习的参数$\\theta$通常只由$W$的列组成：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\\theta = \\begin{bmatrix}\nW_1          \\\\\n.            \\\\\n.            \\\\\n.            \\\\\nW_d\n\n\\end{bmatrix} \\in W(:)\\in \\mathbb{R}^{Cd}</script><p>&emsp;&emsp;因此，我们通过以下方式更新决策边界：</p>\n<script type=\"math/tex; mode=display\">\\nabla_\\theta J(\\theta) = \\begin{bmatrix}\n\\nabla_{W_1} \\\\\n.            \\\\\n.            \\\\\n.            \\\\\n\\nabla_{W_d}\n\n\\end{bmatrix} \\in \\mathbb{R}^{Cd}</script><h3 id=\"神经网络分类器\"><a href=\"#神经网络分类器\" class=\"headerlink\" title=\"神经网络分类器\"></a>神经网络分类器</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG\" alt></p>\n<ul>\n<li>单独使用Softmax(或logistic回归)效果并不是很好</li>\n<li>softmax只能给出线性决策边界   </li>\n</ul>\n<p>&emsp;&emsp;<strong>神经网络基础知识在这里省略</strong>😀</p>\n<h2 id=\"命名实体识别（NER）\"><a href=\"#命名实体识别（NER）\" class=\"headerlink\" title=\"命名实体识别（NER）\"></a>命名实体识别（NER）</h2><ul>\n<li>任务：比如查找和分类文本中的名称<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NERTask.PNG\" alt></li>\n<li>可能的用途<ul>\n<li>跟踪文档中提到的特定实体</li>\n<li>对于问答，答案通常是命名实体</li>\n<li>许多需要的信息实施上是命名实体之间的关联  </li>\n<li>&emsp;&emsp;我们通过在上下文中对单词进行分类，然后将实体提取为单词子序列来预测实体。<h3 id=\"为什么NER可能相当困难\"><a href=\"#为什么NER可能相当困难\" class=\"headerlink\" title=\"为什么NER可能相当困难\"></a>为什么NER可能相当困难</h3></li>\n</ul>\n</li>\n<li>很难计算出实体的边界</li>\n<li>很难知道某物是否是一个实体</li>\n<li>很难知道新奇实体的类别</li>\n<li>实体是模糊的，依赖于上下文<h3 id=\"Window-Classification\"><a href=\"#Window-Classification\" class=\"headerlink\" title=\"Window Classification\"></a>Window Classification</h3>&emsp;&emsp;由于同一个词在不同上下文中可能是不同的命名实体，因此一个思路是通过对该词在某一窗口内附近的词来对其进行分类(类别包括人民，地名，机构名等)。<br>&emsp;&emsp;对于museums in Paris are amazing,我们希望探测到地名Paris。假设窗口大小为2，并且通过word2vec得到窗口内五个单词的词向量，则我们可以将这5个向量连起来得到更大的向量，再对该向量进行分类。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_Paris.PNG\" alt><br>&emsp;&emsp;对于具有多个class的分类问题，我们通常用softmax classofier来解决假设用$x$来表示输入的词向量，$y$来表示对应的class，总计有$C$个class,则$x$对应类别为$y$的概率为：<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}</script>&emsp;&emsp;损失函数为交叉熵：<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script>&emsp;&emsp;为了处理输入元素间的非线性关系，我们可以利用神经网络，并且输出层是每一个class概率的softmax layer。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NerualNetworkParis.jpg\" alt><br>之后可以使用随机梯度下降算法SGD来更新网络并利用<a href>反向传播算法</a>来有效率的计算梯度。</li>\n</ul>\n<h3 id=\"Binary-classification-with-unnormalized-scores\"><a href=\"#Binary-classification-with-unnormalized-scores\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;对于之前的例子$X_{window} = [X_{museum} \\ \\ \\ X_{in}\\ \\ \\ X_{paris}\\ \\ \\ X_{are} \\ \\ \\ X_{amazing}]$。假设我们要对中心词是否为一个地点进行分类，与word2vec类似，我们将便利语料库中的所有位置，但这一次只有一些位置能获得高分，例如，窗口的中心有一个实际的NER Location时会获得高分。</p>\n<h3 id=\"Binary-classification-with-unnormalized-scores-1\"><a href=\"#Binary-classification-with-unnormalized-scores-1\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;例子：<strong>Not all museums in Paris are amazing</strong><br>&emsp;&emsp;在这里只有以<strong>Paris</strong>为中心的窗口是真正的窗口，所有其他窗口都”毁坏了”，因为它们的中心没有具体的实体位置。</p>\n<h3 id=\"Binary-classification-with-unnormalized-scores-2\"><a href=\"#Binary-classification-with-unnormalized-scores-2\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;使用神经激活$a$简单给出一个非标准化的分数</p>\n<script type=\"math/tex; mode=display\">score(x) = U^Ta\\in\\mathbb{R}</script><p>&emsp;&emsp;在这里用一个三层神经网络计算一个窗口的得分</p>\n<script type=\"math/tex; mode=display\">s = score(\"museums in Paris are amazing\")</script><script type=\"math/tex; mode=display\">s = U^Tf(Wx+b)</script><script type=\"math/tex; mode=display\">x\\in\\mathbb{R}^{20\\times 1},W\\in\\mathbb{R}^{8\\times20},U\\in\\mathbb{R}^{8\\times1}</script><h3 id=\"The-max-margin-loss\"><a href=\"#The-max-margin-loss\" class=\"headerlink\" title=\"The max-margin loss\"></a>The max-margin loss</h3><ul>\n<li>训练目标，让真实窗口的得分更高，让被损坏的窗口得分更低</li>\n<li>真实窗口：$s = score(“museums \\ in \\ Paris \\ \\ are \\ amazing”)$</li>\n<li>被损坏的窗口$sc = score(“Not \\ all \\ museums \\ in \\ Paris”)$</li>\n<li>最小化$J=max(0)$</li>\n<li>可以使用SGD,单窗口的目标函数为：$J = max(0,1-s+s_c)$</li>\n<li>每个中心有Ner位置的窗口得分比被损坏的窗口高1分</li>\n<li>要获得完整的目标函数：为每个真实窗口采样几个损坏的窗口。对所有窗口求和。<h3 id=\"Example-Jacobian-Elementwise-activation-Function\"><a href=\"#Example-Jacobian-Elementwise-activation-Function\" class=\"headerlink\" title=\"Example Jacobian: Elementwise activation Function\"></a>Example Jacobian: Elementwise activation Function</h3><script type=\"math/tex; mode=display\">h = f(z),\\frac{\\partial h}{\\partial z} = ?,\\mathbf{h,z}\\in\\mathbb{R}^n</script></li>\n</ul>\n","site":{"data":{}},"length":3185,"excerpt":"","more":"<p>&emsp;&emsp;本次课程主要介绍了神经网络的基础知识并以<strong>命名实体识别Named Entity Recognition(NER)</strong>来介绍DNN在NLP领域内的应用。  </p>\n<h2 id=\"分类的设置与符号\"><a href=\"#分类的设置与符号\" class=\"headerlink\" title=\"分类的设置与符号\"></a>分类的设置与符号</h2><p>&emsp;&emsp;通常我们有由样本组成的训练数据集</p>\n<script type=\"math/tex; mode=display\">\\{x_i,y_i\\}^{N}_{i=1}</script><p>&emsp;&emsp;其中$x_i$是输入，例如单词，句子，文档，维度为$d$<br>&emsp;&emsp;而$y_i$是我们尝试预测的标签（C种类别中的其中一种）  </p>\n<h3 id=\"直观分类\"><a href=\"#直观分类\" class=\"headerlink\" title=\"直观分类\"></a>直观分类</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG\" alt></p>\n<ul>\n<li>固定的二维单词分类</li>\n<li>使用softmax/logistic回归</li>\n<li>线性决策边界</li>\n</ul>\n<p><strong>传统的机器学习、统计学方法</strong>：假设$x_i$是固定的，训练softmax/logistic回归的权重$W \\in \\mathbb{R}^{C\\times d}$来决定边界（超平面）<br><strong>方法</strong>：对每个$x$,预测</p>\n<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}</script><p>&emsp;&emsp;将预测函数分为两个步骤：<br>&emsp;&emsp;1.将$W$的$y^{th}$行和$x$中的对应行相乘得到分数</p>\n<script type=\"math/tex; mode=display\">W_y \\cdot x = \\sum_{i=1}^dW_{yi}x_i = f_y</script><p>&emsp;&emsp;计算所有的$f_c,for \\ c =1,…,C$<br>&emsp;&emsp;2.使用softmax函数获得归一化的概率</p>\n<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)} = softmax(f_y)</script><h3 id=\"使用softmax与交叉熵训练\"><a href=\"#使用softmax与交叉熵训练\" class=\"headerlink\" title=\"使用softmax与交叉熵训练\"></a>使用softmax与交叉熵训练</h3><p>&emsp;&emsp;对于每个训练样本$(x,y)$,我们的目标是最大化正确类$y$的概率，或者最小化该类的负对数概率：</p>\n<script type=\"math/tex; mode=display\">-\\log p(y|x) = - \\log\\left(\\frac{\\exp(f_y)}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script><h3 id=\"什么是交叉熵\"><a href=\"#什么是交叉熵\" class=\"headerlink\" title=\"什么是交叉熵\"></a>什么是交叉熵</h3><ul>\n<li>其概念来源于信息论，用于衡量两个分布之间的差异</li>\n<li>令真实分布为$p$</li>\n<li>令我们计算的模型概率为$q$</li>\n<li>交叉熵即为：<script type=\"math/tex; mode=display\">H(p,q) = -\\sum_{c=1}^Cp(c)\\log q(c)</script><h3 id=\"整个数据集上的分类\"><a href=\"#整个数据集上的分类\" class=\"headerlink\" title=\"整个数据集上的分类\"></a>整个数据集上的分类</h3>&emsp;&emsp;在整个数据集${\\{x_i,y_i\\}}_{i=1}^N$上的交叉熵损失函数，是所有样本的交叉熵的均值：<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script><h3 id=\"传统的机器学习优化\"><a href=\"#传统的机器学习优化\" class=\"headerlink\" title=\"传统的机器学习优化\"></a>传统的机器学习优化</h3>&emsp;&emsp;一般机器学习的参数$\\theta$通常只由$W$的列组成：</li>\n</ul>\n<script type=\"math/tex; mode=display\">\\theta = \\begin{bmatrix}\nW_1          \\\\\n.            \\\\\n.            \\\\\n.            \\\\\nW_d\n\n\\end{bmatrix} \\in W(:)\\in \\mathbb{R}^{Cd}</script><p>&emsp;&emsp;因此，我们通过以下方式更新决策边界：</p>\n<script type=\"math/tex; mode=display\">\\nabla_\\theta J(\\theta) = \\begin{bmatrix}\n\\nabla_{W_1} \\\\\n.            \\\\\n.            \\\\\n.            \\\\\n\\nabla_{W_d}\n\n\\end{bmatrix} \\in \\mathbb{R}^{Cd}</script><h3 id=\"神经网络分类器\"><a href=\"#神经网络分类器\" class=\"headerlink\" title=\"神经网络分类器\"></a>神经网络分类器</h3><p><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_ClassificationIntuition.PNG\" alt></p>\n<ul>\n<li>单独使用Softmax(或logistic回归)效果并不是很好</li>\n<li>softmax只能给出线性决策边界   </li>\n</ul>\n<p>&emsp;&emsp;<strong>神经网络基础知识在这里省略</strong>😀</p>\n<h2 id=\"命名实体识别（NER）\"><a href=\"#命名实体识别（NER）\" class=\"headerlink\" title=\"命名实体识别（NER）\"></a>命名实体识别（NER）</h2><ul>\n<li>任务：比如查找和分类文本中的名称<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NERTask.PNG\" alt></li>\n<li>可能的用途<ul>\n<li>跟踪文档中提到的特定实体</li>\n<li>对于问答，答案通常是命名实体</li>\n<li>许多需要的信息实施上是命名实体之间的关联  </li>\n<li>&emsp;&emsp;我们通过在上下文中对单词进行分类，然后将实体提取为单词子序列来预测实体。<h3 id=\"为什么NER可能相当困难\"><a href=\"#为什么NER可能相当困难\" class=\"headerlink\" title=\"为什么NER可能相当困难\"></a>为什么NER可能相当困难</h3></li>\n</ul>\n</li>\n<li>很难计算出实体的边界</li>\n<li>很难知道某物是否是一个实体</li>\n<li>很难知道新奇实体的类别</li>\n<li>实体是模糊的，依赖于上下文<h3 id=\"Window-Classification\"><a href=\"#Window-Classification\" class=\"headerlink\" title=\"Window Classification\"></a>Window Classification</h3>&emsp;&emsp;由于同一个词在不同上下文中可能是不同的命名实体，因此一个思路是通过对该词在某一窗口内附近的词来对其进行分类(类别包括人民，地名，机构名等)。<br>&emsp;&emsp;对于museums in Paris are amazing,我们希望探测到地名Paris。假设窗口大小为2，并且通过word2vec得到窗口内五个单词的词向量，则我们可以将这5个向量连起来得到更大的向量，再对该向量进行分类。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_Paris.PNG\" alt><br>&emsp;&emsp;对于具有多个class的分类问题，我们通常用softmax classofier来解决假设用$x$来表示输入的词向量，$y$来表示对应的class，总计有$C$个class,则$x$对应类别为$y$的概率为：<script type=\"math/tex; mode=display\">p(y|x) = \\frac{\\exp(W_y\\cdot x)}{\\sum_{c=1}^C\\exp(W_c \\cdot x)}</script>&emsp;&emsp;损失函数为交叉熵：<script type=\"math/tex; mode=display\">J(\\theta) = \\frac{1}{N}\\sum_{i=1}^N-log\\left(\\frac{\\exp(f_{yi})}{\\sum_{c=1}^C\\exp(f_c)}\\right)</script>&emsp;&emsp;为了处理输入元素间的非线性关系，我们可以利用神经网络，并且输出层是每一个class概率的softmax layer。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/lesson34_NerualNetworkParis.jpg\" alt><br>之后可以使用随机梯度下降算法SGD来更新网络并利用<a href>反向传播算法</a>来有效率的计算梯度。</li>\n</ul>\n<h3 id=\"Binary-classification-with-unnormalized-scores\"><a href=\"#Binary-classification-with-unnormalized-scores\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;对于之前的例子$X_{window} = [X_{museum} \\ \\ \\ X_{in}\\ \\ \\ X_{paris}\\ \\ \\ X_{are} \\ \\ \\ X_{amazing}]$。假设我们要对中心词是否为一个地点进行分类，与word2vec类似，我们将便利语料库中的所有位置，但这一次只有一些位置能获得高分，例如，窗口的中心有一个实际的NER Location时会获得高分。</p>\n<h3 id=\"Binary-classification-with-unnormalized-scores-1\"><a href=\"#Binary-classification-with-unnormalized-scores-1\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;例子：<strong>Not all museums in Paris are amazing</strong><br>&emsp;&emsp;在这里只有以<strong>Paris</strong>为中心的窗口是真正的窗口，所有其他窗口都”毁坏了”，因为它们的中心没有具体的实体位置。</p>\n<h3 id=\"Binary-classification-with-unnormalized-scores-2\"><a href=\"#Binary-classification-with-unnormalized-scores-2\" class=\"headerlink\" title=\"Binary classification with unnormalized scores\"></a>Binary classification with unnormalized scores</h3><p>&emsp;&emsp;使用神经激活$a$简单给出一个非标准化的分数</p>\n<script type=\"math/tex; mode=display\">score(x) = U^Ta\\in\\mathbb{R}</script><p>&emsp;&emsp;在这里用一个三层神经网络计算一个窗口的得分</p>\n<script type=\"math/tex; mode=display\">s = score(\"museums in Paris are amazing\")</script><script type=\"math/tex; mode=display\">s = U^Tf(Wx+b)</script><script type=\"math/tex; mode=display\">x\\in\\mathbb{R}^{20\\times 1},W\\in\\mathbb{R}^{8\\times20},U\\in\\mathbb{R}^{8\\times1}</script><h3 id=\"The-max-margin-loss\"><a href=\"#The-max-margin-loss\" class=\"headerlink\" title=\"The max-margin loss\"></a>The max-margin loss</h3><ul>\n<li>训练目标，让真实窗口的得分更高，让被损坏的窗口得分更低</li>\n<li>真实窗口：$s = score(“museums \\ in \\ Paris \\ \\ are \\ amazing”)$</li>\n<li>被损坏的窗口$sc = score(“Not \\ all \\ museums \\ in \\ Paris”)$</li>\n<li>最小化$J=max(0)$</li>\n<li>可以使用SGD,单窗口的目标函数为：$J = max(0,1-s+s_c)$</li>\n<li>每个中心有Ner位置的窗口得分比被损坏的窗口高1分</li>\n<li>要获得完整的目标函数：为每个真实窗口采样几个损坏的窗口。对所有窗口求和。<h3 id=\"Example-Jacobian-Elementwise-activation-Function\"><a href=\"#Example-Jacobian-Elementwise-activation-Function\" class=\"headerlink\" title=\"Example Jacobian: Elementwise activation Function\"></a>Example Jacobian: Elementwise activation Function</h3><script type=\"math/tex; mode=display\">h = f(z),\\frac{\\partial h}{\\partial z} = ?,\\mathbf{h,z}\\in\\mathbb{R}^n</script></li>\n</ul>\n"},{"title":"基于噪声不一致性的科学图像篡改检测——论文简述","date":"2020-05-21T17:25:58.000Z","top":70,"copyright":true,"mathjax":true,"_content":"# Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets\n\n## 主要背景\n&emsp;&emsp;由于数字图像使用的日渐频繁以及技术的日趋进步，科学图像造假的情况愈发严重。尽管可以用已有的检测技术直接运用在科学图像上，但是仍需要发展适配于该领域的算法，因为该领域有着独特的模式，格式与解决方式。同时，科技论文造假的数据库的建设也应当与算法的进步同步进行。  \n&emsp;&emsp;随着愈来愈多的造假图片进入了科学界，Bik在短时间内就有相当数量的发现，这也说明了通过评审去发现造假图片相当的困难。\n\n## 论文工作简要概述\n&emsp;&emsp;过去种种研究篡改图像的算法在面对不同的科学条件下常常会失效，本论文提出的基于噪声矛盾的算法可适宜于很多不同的科学领域。实验结果证明本方法可以健壮地检测各种场景下的图像操纵，并且表现超过了现存地同类型算法。该方法有望可以为检测嫌疑图像成为系统性步骤做出贡献。\n\n## 为何选择基于噪声矛盾算法\n&emsp;&emsp;科学研究对图像处理已经相当宽容了，包括调整大小，对比度调整，锐化，白平衡都被认为是合理的预处理。而改变了上下文含义的行为则当然不被允许，如复制粘贴，切割移除等。对于专家而言，发现导致上下文语意不同的图像比较容易，而一些造假学者利用了人类很难去辨别噪声模式这一弱点。因此本文因此提出了一种基于发现噪声不一致性的科学图像篡改检测方法。\n\n## 算法特点\n- 基于监督学习，可以从已有的数据集与新实例中学习\n- 它适用于不同的分辨率和来自不同设备的图像\n- 不局限于某一种图像格式\n- 能够产生良好的预测以及一个小数据集\n- 具有灵活性，可以针对不同科学场景进行参数调整\n\n\n## 算法思路\n&emsp;&emsp;本算法运用了几种异构特征提取器，刚开始，一个输入图像会经过几种残差图像生成器，每种残差图像会有他们自己的特征提取器（可能会基于不同配置的特征提取方案），这种特征在后处理后会被送入分类器。  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_1.PNG)\n&emsp;&emsp;特征提取方法大大减少了维数，减少了对训练数据量需求,可以在后端使用轻量级分类器，如逻辑回归或支持向量机。生成残差图像的方法数量与特征提取地参数增加了该方法的灵活性，并且不像神经网络参数调节那样地模糊，对于人类可以方便地手动调节。\n\n## 残差图片生成器\n\n### Steganalytic Filters\n&emsp;&emsp;Steganalytic Filters是从速记式加密技术处借鉴而来，将隐写术中嵌入数据地行为类推到图像操作。选择高通的滤波器，丢弃关于图像的内容，尽可能地强调噪音模式。\n\n### Error Level Analysis (ELA)\n&emsp;&emsp;该算法地思想是基于在JPEG压缩时引入的错误是非线性的，如果图像中的一部分具有与图像剩余部分不一致的JPEG质量因子，那么在压缩后可以与对应的默认质量因子平均的图片进行比较，比较其差异。\n\n### Median Filtering Residual\n&emsp;&emsp;中值滤波可以抑制图像噪声，篡改的部分中值滤波后会表现出不同的噪声模式。残差图像是原始图像与中值滤波后的图像的差。\n\n### Wavelet Denoising Residual\n&emsp;&emsp;小波去噪是一种在小波域内对图像进行去噪的方法，它基于小波域去噪来消除图像中的噪声。该算法运用方法与前一种中值滤波法类似。\n\n&emsp;\n\n&emsp;&emsp;示例中的残差图像算法在论文的例子中都有效果，但这并不是常态，真实情况往往需要几种算法结合起来分析。\n\n## 特征提取\n&emsp;&emsp;在该论文中特征提取是基于patch而不是基于像素点，这减少了计算规模并丰富了每个最小单元内的统计信息量，patch size决定后会生成对应的特征向量v。\n\n### Patch Reinterpretation\n&emsp;&emsp;残差降低了图像数据的复杂性，但残差图像仍然具有与原始图像相同的维数。  \n&emsp;&emsp;为了进一步压缩数据进行分类，我们提出了一种新的图像篡改检测的特征提取方法。直观地说，一个图像区域被认为是被篡改的，不是因为它本身是唯一的，而是因为它与图像的其他部分不同。因此，一个理想的特征设计应该包含足够的全局信息。我们通过使用图像的其余部分重新解释图像区域来添加全局信息。  \n&emsp;&emsp;首先对于大小为（h;w）的图像会被分割为大小为（m;n）的图像，如果不可正好分割，就向下取最近整数，由此大小为（h;w）的图像就被成为了一个patch矩阵。然后将patch矩阵分割成大小为(s;t)，其中每个单元包含一定数量的patch。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_2.PNG)\n\n&emsp;&emsp;对于网格中的每个细胞，我们都安装了一个异常值检测器，它能够告诉新样本成为异常值的可能性。给定一个p，它可以被向量v重新解释,  \n$$ v = (l_{11}(p), l_{12}(p),l_{13}(p),...,l_{1t}(p)\\\\\n    \\qquad l_{21}(p), l_{22}(p),l_{23}(p),...,l_{2t}(p) \\\\\n     \\qquad l_{31}(p), l_{32}(p),l_{33}(p),...,l_{1t}(p)\\\\\n     \\qquad...\\\\\n     \\qquad l_{s1}(p), l_{s2}(p),l_{s3}(p),... ,l_{st}(p)).\n\n\n$$\n\n&emsp;&emsp;由于被篡改区域的残馀形态不同，且其污染斑块集中在其中一个cell内，\n因此该cell的离群点检测器与其他cell相比具有不同的判定边界。\n&emsp;&emsp;Eg.对于真实的patch pa,除了l23(pa)外别的离散概率都会较低；而对于伪造的patch pt,除了l23(pt)外别的离散概率都会较高。  \n&emsp;&emsp;在实际应用中，我们使用了v的直方图(用vh表示)，它不仅在摘要统计，空间中对结构进行编码，而且保留了位置信息。  \n\n&emsp;\n\n### Feature Design\n- vh:Patch Reinterpretation的直方图\n- 距离信息:patch与它邻居的欧式距离\n- 全局信息:patch与全图的信息差异，patch的附加全局信息是由重新解释和聚类中心之间的欧氏距离以及中心的相应权重给出的。  \n  \n&emsp;\n\n## 实验\n\n### 生成数据集\n#### 移除类型\n&emsp;&emsp;删除一个区域，并选用某一背景区域的噪声或色彩去采样填补这一区域。\n#### 拼接类型\n&emsp;&emsp;从前景图像中选取一小部分黏贴到任意位置，该区域要么用JPEG重新压缩，要么用锐化过滤器处理。\n#### 修整类型\n&emsp;&emsp;随机对一块区域使用高斯模糊。  \n\n&emsp;\n\n最终生成的图像有蛋白质印记法与显微镜观测两种类型\n\n### 实验配置\n- 利用离散余弦变换(DCT)将残差图像上的小块变换到频域，得到了较好的效果\n- 使用由scikit-learn提供的支持向量机离群点检测器，其核函数使用径向基函数\n- 优化公差设置为0:01;(训练误差分数的上界和支持向量分数的下界)设为0.1\n- 不同参数的设置会较大影响特征提取的速度。\n- 使用的分类器是一个简单的多层结构感知器神经网络。对于蛋白质标记模型，我们使用四层网络，每层200个unit;对于显微模型，我们使用类似的网络，每层300个unit。最后一层应用Softmax回归得到分类结果。\n\n\n&emsp;\n\n## 结果\n&emsp;&emsp;在使用的是patch级别的准确性，AUC分数和F1分数的评判下,总的来说，该论文方法在不同类型的操作之间的性能更一致，这使它在实践中更可靠。\n\n&emsp;\n\n## 研究中的不足\n- 数据集还是过小，但相信随着研究深入会逐渐扩充\n- 只基于噪声的方法会受到限制，例如一些图像篡改不会影响到噪声。如果一个人已经了解了自动检测的原理，他可以有意避开噪声不一致性\n  \n&emsp;&emsp;最终作者希望这种算法的灵活性可以帮助其顺利迁移到更多其他领域。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/基于噪声不一致性的科学图像篡改检测——论文简述.md","raw":"---\ntitle: 基于噪声不一致性的科学图像篡改检测——论文简述\ndate: 2020-05-22 01:25:58\ntags:\n- 科学图像篡改检测\n- 论文简述\ncategories: 篡改检测\ntop: 70\ncopyright: true\nmathjax: true\n---\n# Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets\n\n## 主要背景\n&emsp;&emsp;由于数字图像使用的日渐频繁以及技术的日趋进步，科学图像造假的情况愈发严重。尽管可以用已有的检测技术直接运用在科学图像上，但是仍需要发展适配于该领域的算法，因为该领域有着独特的模式，格式与解决方式。同时，科技论文造假的数据库的建设也应当与算法的进步同步进行。  \n&emsp;&emsp;随着愈来愈多的造假图片进入了科学界，Bik在短时间内就有相当数量的发现，这也说明了通过评审去发现造假图片相当的困难。\n\n## 论文工作简要概述\n&emsp;&emsp;过去种种研究篡改图像的算法在面对不同的科学条件下常常会失效，本论文提出的基于噪声矛盾的算法可适宜于很多不同的科学领域。实验结果证明本方法可以健壮地检测各种场景下的图像操纵，并且表现超过了现存地同类型算法。该方法有望可以为检测嫌疑图像成为系统性步骤做出贡献。\n\n## 为何选择基于噪声矛盾算法\n&emsp;&emsp;科学研究对图像处理已经相当宽容了，包括调整大小，对比度调整，锐化，白平衡都被认为是合理的预处理。而改变了上下文含义的行为则当然不被允许，如复制粘贴，切割移除等。对于专家而言，发现导致上下文语意不同的图像比较容易，而一些造假学者利用了人类很难去辨别噪声模式这一弱点。因此本文因此提出了一种基于发现噪声不一致性的科学图像篡改检测方法。\n\n## 算法特点\n- 基于监督学习，可以从已有的数据集与新实例中学习\n- 它适用于不同的分辨率和来自不同设备的图像\n- 不局限于某一种图像格式\n- 能够产生良好的预测以及一个小数据集\n- 具有灵活性，可以针对不同科学场景进行参数调整\n\n\n## 算法思路\n&emsp;&emsp;本算法运用了几种异构特征提取器，刚开始，一个输入图像会经过几种残差图像生成器，每种残差图像会有他们自己的特征提取器（可能会基于不同配置的特征提取方案），这种特征在后处理后会被送入分类器。  \n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_1.PNG)\n&emsp;&emsp;特征提取方法大大减少了维数，减少了对训练数据量需求,可以在后端使用轻量级分类器，如逻辑回归或支持向量机。生成残差图像的方法数量与特征提取地参数增加了该方法的灵活性，并且不像神经网络参数调节那样地模糊，对于人类可以方便地手动调节。\n\n## 残差图片生成器\n\n### Steganalytic Filters\n&emsp;&emsp;Steganalytic Filters是从速记式加密技术处借鉴而来，将隐写术中嵌入数据地行为类推到图像操作。选择高通的滤波器，丢弃关于图像的内容，尽可能地强调噪音模式。\n\n### Error Level Analysis (ELA)\n&emsp;&emsp;该算法地思想是基于在JPEG压缩时引入的错误是非线性的，如果图像中的一部分具有与图像剩余部分不一致的JPEG质量因子，那么在压缩后可以与对应的默认质量因子平均的图片进行比较，比较其差异。\n\n### Median Filtering Residual\n&emsp;&emsp;中值滤波可以抑制图像噪声，篡改的部分中值滤波后会表现出不同的噪声模式。残差图像是原始图像与中值滤波后的图像的差。\n\n### Wavelet Denoising Residual\n&emsp;&emsp;小波去噪是一种在小波域内对图像进行去噪的方法，它基于小波域去噪来消除图像中的噪声。该算法运用方法与前一种中值滤波法类似。\n\n&emsp;\n\n&emsp;&emsp;示例中的残差图像算法在论文的例子中都有效果，但这并不是常态，真实情况往往需要几种算法结合起来分析。\n\n## 特征提取\n&emsp;&emsp;在该论文中特征提取是基于patch而不是基于像素点，这减少了计算规模并丰富了每个最小单元内的统计信息量，patch size决定后会生成对应的特征向量v。\n\n### Patch Reinterpretation\n&emsp;&emsp;残差降低了图像数据的复杂性，但残差图像仍然具有与原始图像相同的维数。  \n&emsp;&emsp;为了进一步压缩数据进行分类，我们提出了一种新的图像篡改检测的特征提取方法。直观地说，一个图像区域被认为是被篡改的，不是因为它本身是唯一的，而是因为它与图像的其他部分不同。因此，一个理想的特征设计应该包含足够的全局信息。我们通过使用图像的其余部分重新解释图像区域来添加全局信息。  \n&emsp;&emsp;首先对于大小为（h;w）的图像会被分割为大小为（m;n）的图像，如果不可正好分割，就向下取最近整数，由此大小为（h;w）的图像就被成为了一个patch矩阵。然后将patch矩阵分割成大小为(s;t)，其中每个单元包含一定数量的patch。\n![](https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_2.PNG)\n\n&emsp;&emsp;对于网格中的每个细胞，我们都安装了一个异常值检测器，它能够告诉新样本成为异常值的可能性。给定一个p，它可以被向量v重新解释,  \n$$ v = (l_{11}(p), l_{12}(p),l_{13}(p),...,l_{1t}(p)\\\\\n    \\qquad l_{21}(p), l_{22}(p),l_{23}(p),...,l_{2t}(p) \\\\\n     \\qquad l_{31}(p), l_{32}(p),l_{33}(p),...,l_{1t}(p)\\\\\n     \\qquad...\\\\\n     \\qquad l_{s1}(p), l_{s2}(p),l_{s3}(p),... ,l_{st}(p)).\n\n\n$$\n\n&emsp;&emsp;由于被篡改区域的残馀形态不同，且其污染斑块集中在其中一个cell内，\n因此该cell的离群点检测器与其他cell相比具有不同的判定边界。\n&emsp;&emsp;Eg.对于真实的patch pa,除了l23(pa)外别的离散概率都会较低；而对于伪造的patch pt,除了l23(pt)外别的离散概率都会较高。  \n&emsp;&emsp;在实际应用中，我们使用了v的直方图(用vh表示)，它不仅在摘要统计，空间中对结构进行编码，而且保留了位置信息。  \n\n&emsp;\n\n### Feature Design\n- vh:Patch Reinterpretation的直方图\n- 距离信息:patch与它邻居的欧式距离\n- 全局信息:patch与全图的信息差异，patch的附加全局信息是由重新解释和聚类中心之间的欧氏距离以及中心的相应权重给出的。  \n  \n&emsp;\n\n## 实验\n\n### 生成数据集\n#### 移除类型\n&emsp;&emsp;删除一个区域，并选用某一背景区域的噪声或色彩去采样填补这一区域。\n#### 拼接类型\n&emsp;&emsp;从前景图像中选取一小部分黏贴到任意位置，该区域要么用JPEG重新压缩，要么用锐化过滤器处理。\n#### 修整类型\n&emsp;&emsp;随机对一块区域使用高斯模糊。  \n\n&emsp;\n\n最终生成的图像有蛋白质印记法与显微镜观测两种类型\n\n### 实验配置\n- 利用离散余弦变换(DCT)将残差图像上的小块变换到频域，得到了较好的效果\n- 使用由scikit-learn提供的支持向量机离群点检测器，其核函数使用径向基函数\n- 优化公差设置为0:01;(训练误差分数的上界和支持向量分数的下界)设为0.1\n- 不同参数的设置会较大影响特征提取的速度。\n- 使用的分类器是一个简单的多层结构感知器神经网络。对于蛋白质标记模型，我们使用四层网络，每层200个unit;对于显微模型，我们使用类似的网络，每层300个unit。最后一层应用Softmax回归得到分类结果。\n\n\n&emsp;\n\n## 结果\n&emsp;&emsp;在使用的是patch级别的准确性，AUC分数和F1分数的评判下,总的来说，该论文方法在不同类型的操作之间的性能更一致，这使它在实践中更可靠。\n\n&emsp;\n\n## 研究中的不足\n- 数据集还是过小，但相信随着研究深入会逐渐扩充\n- 只基于噪声的方法会受到限制，例如一些图像篡改不会影响到噪声。如果一个人已经了解了自动检测的原理，他可以有意避开噪声不一致性\n  \n&emsp;&emsp;最终作者希望这种算法的灵活性可以帮助其顺利迁移到更多其他领域。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"基于噪声不一致性的科学图像篡改检测——论文简述","published":1,"updated":"2020-06-11T09:23:18.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jrg000liwvzef3ba543","content":"<h1 id=\"Scientific-Image-Tampering-Detection-Based-On-Noise-Inconsistencies-A-Method-And-Datasets\"><a href=\"#Scientific-Image-Tampering-Detection-Based-On-Noise-Inconsistencies-A-Method-And-Datasets\" class=\"headerlink\" title=\"Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets\"></a>Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets</h1><h2 id=\"主要背景\"><a href=\"#主要背景\" class=\"headerlink\" title=\"主要背景\"></a>主要背景</h2><p>&emsp;&emsp;由于数字图像使用的日渐频繁以及技术的日趋进步，科学图像造假的情况愈发严重。尽管可以用已有的检测技术直接运用在科学图像上，但是仍需要发展适配于该领域的算法，因为该领域有着独特的模式，格式与解决方式。同时，科技论文造假的数据库的建设也应当与算法的进步同步进行。<br>&emsp;&emsp;随着愈来愈多的造假图片进入了科学界，Bik在短时间内就有相当数量的发现，这也说明了通过评审去发现造假图片相当的困难。</p>\n<h2 id=\"论文工作简要概述\"><a href=\"#论文工作简要概述\" class=\"headerlink\" title=\"论文工作简要概述\"></a>论文工作简要概述</h2><p>&emsp;&emsp;过去种种研究篡改图像的算法在面对不同的科学条件下常常会失效，本论文提出的基于噪声矛盾的算法可适宜于很多不同的科学领域。实验结果证明本方法可以健壮地检测各种场景下的图像操纵，并且表现超过了现存地同类型算法。该方法有望可以为检测嫌疑图像成为系统性步骤做出贡献。</p>\n<h2 id=\"为何选择基于噪声矛盾算法\"><a href=\"#为何选择基于噪声矛盾算法\" class=\"headerlink\" title=\"为何选择基于噪声矛盾算法\"></a>为何选择基于噪声矛盾算法</h2><p>&emsp;&emsp;科学研究对图像处理已经相当宽容了，包括调整大小，对比度调整，锐化，白平衡都被认为是合理的预处理。而改变了上下文含义的行为则当然不被允许，如复制粘贴，切割移除等。对于专家而言，发现导致上下文语意不同的图像比较容易，而一些造假学者利用了人类很难去辨别噪声模式这一弱点。因此本文因此提出了一种基于发现噪声不一致性的科学图像篡改检测方法。</p>\n<h2 id=\"算法特点\"><a href=\"#算法特点\" class=\"headerlink\" title=\"算法特点\"></a>算法特点</h2><ul>\n<li>基于监督学习，可以从已有的数据集与新实例中学习</li>\n<li>它适用于不同的分辨率和来自不同设备的图像</li>\n<li>不局限于某一种图像格式</li>\n<li>能够产生良好的预测以及一个小数据集</li>\n<li>具有灵活性，可以针对不同科学场景进行参数调整</li>\n</ul>\n<h2 id=\"算法思路\"><a href=\"#算法思路\" class=\"headerlink\" title=\"算法思路\"></a>算法思路</h2><p>&emsp;&emsp;本算法运用了几种异构特征提取器，刚开始，一个输入图像会经过几种残差图像生成器，每种残差图像会有他们自己的特征提取器（可能会基于不同配置的特征提取方案），这种特征在后处理后会被送入分类器。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_1.PNG\" alt><br>&emsp;&emsp;特征提取方法大大减少了维数，减少了对训练数据量需求,可以在后端使用轻量级分类器，如逻辑回归或支持向量机。生成残差图像的方法数量与特征提取地参数增加了该方法的灵活性，并且不像神经网络参数调节那样地模糊，对于人类可以方便地手动调节。</p>\n<h2 id=\"残差图片生成器\"><a href=\"#残差图片生成器\" class=\"headerlink\" title=\"残差图片生成器\"></a>残差图片生成器</h2><h3 id=\"Steganalytic-Filters\"><a href=\"#Steganalytic-Filters\" class=\"headerlink\" title=\"Steganalytic Filters\"></a>Steganalytic Filters</h3><p>&emsp;&emsp;Steganalytic Filters是从速记式加密技术处借鉴而来，将隐写术中嵌入数据地行为类推到图像操作。选择高通的滤波器，丢弃关于图像的内容，尽可能地强调噪音模式。</p>\n<h3 id=\"Error-Level-Analysis-ELA\"><a href=\"#Error-Level-Analysis-ELA\" class=\"headerlink\" title=\"Error Level Analysis (ELA)\"></a>Error Level Analysis (ELA)</h3><p>&emsp;&emsp;该算法地思想是基于在JPEG压缩时引入的错误是非线性的，如果图像中的一部分具有与图像剩余部分不一致的JPEG质量因子，那么在压缩后可以与对应的默认质量因子平均的图片进行比较，比较其差异。</p>\n<h3 id=\"Median-Filtering-Residual\"><a href=\"#Median-Filtering-Residual\" class=\"headerlink\" title=\"Median Filtering Residual\"></a>Median Filtering Residual</h3><p>&emsp;&emsp;中值滤波可以抑制图像噪声，篡改的部分中值滤波后会表现出不同的噪声模式。残差图像是原始图像与中值滤波后的图像的差。</p>\n<h3 id=\"Wavelet-Denoising-Residual\"><a href=\"#Wavelet-Denoising-Residual\" class=\"headerlink\" title=\"Wavelet Denoising Residual\"></a>Wavelet Denoising Residual</h3><p>&emsp;&emsp;小波去噪是一种在小波域内对图像进行去噪的方法，它基于小波域去噪来消除图像中的噪声。该算法运用方法与前一种中值滤波法类似。</p>\n<p>&emsp;</p>\n<p>&emsp;&emsp;示例中的残差图像算法在论文的例子中都有效果，但这并不是常态，真实情况往往需要几种算法结合起来分析。</p>\n<h2 id=\"特征提取\"><a href=\"#特征提取\" class=\"headerlink\" title=\"特征提取\"></a>特征提取</h2><p>&emsp;&emsp;在该论文中特征提取是基于patch而不是基于像素点，这减少了计算规模并丰富了每个最小单元内的统计信息量，patch size决定后会生成对应的特征向量v。</p>\n<h3 id=\"Patch-Reinterpretation\"><a href=\"#Patch-Reinterpretation\" class=\"headerlink\" title=\"Patch Reinterpretation\"></a>Patch Reinterpretation</h3><p>&emsp;&emsp;残差降低了图像数据的复杂性，但残差图像仍然具有与原始图像相同的维数。<br>&emsp;&emsp;为了进一步压缩数据进行分类，我们提出了一种新的图像篡改检测的特征提取方法。直观地说，一个图像区域被认为是被篡改的，不是因为它本身是唯一的，而是因为它与图像的其他部分不同。因此，一个理想的特征设计应该包含足够的全局信息。我们通过使用图像的其余部分重新解释图像区域来添加全局信息。<br>&emsp;&emsp;首先对于大小为（h;w）的图像会被分割为大小为（m;n）的图像，如果不可正好分割，就向下取最近整数，由此大小为（h;w）的图像就被成为了一个patch矩阵。然后将patch矩阵分割成大小为(s;t)，其中每个单元包含一定数量的patch。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_2.PNG\" alt></p>\n<p>&emsp;&emsp;对于网格中的每个细胞，我们都安装了一个异常值检测器，它能够告诉新样本成为异常值的可能性。给定一个p，它可以被向量v重新解释,  </p>\n<script type=\"math/tex; mode=display\">v = (l_{11}(p), l_{12}(p),l_{13}(p),...,l_{1t}(p)\\\\\n    \\qquad l_{21}(p), l_{22}(p),l_{23}(p),...,l_{2t}(p) \\\\\n     \\qquad l_{31}(p), l_{32}(p),l_{33}(p),...,l_{1t}(p)\\\\\n     \\qquad...\\\\\n     \\qquad l_{s1}(p), l_{s2}(p),l_{s3}(p),... ,l_{st}(p)).</script><p>&emsp;&emsp;由于被篡改区域的残馀形态不同，且其污染斑块集中在其中一个cell内，<br>因此该cell的离群点检测器与其他cell相比具有不同的判定边界。<br>&emsp;&emsp;Eg.对于真实的patch pa,除了l23(pa)外别的离散概率都会较低；而对于伪造的patch pt,除了l23(pt)外别的离散概率都会较高。<br>&emsp;&emsp;在实际应用中，我们使用了v的直方图(用vh表示)，它不仅在摘要统计，空间中对结构进行编码，而且保留了位置信息。  </p>\n<p>&emsp;</p>\n<h3 id=\"Feature-Design\"><a href=\"#Feature-Design\" class=\"headerlink\" title=\"Feature Design\"></a>Feature Design</h3><ul>\n<li>vh:Patch Reinterpretation的直方图</li>\n<li>距离信息:patch与它邻居的欧式距离</li>\n<li>全局信息:patch与全图的信息差异，patch的附加全局信息是由重新解释和聚类中心之间的欧氏距离以及中心的相应权重给出的。  </li>\n</ul>\n<p>&emsp;</p>\n<h2 id=\"实验\"><a href=\"#实验\" class=\"headerlink\" title=\"实验\"></a>实验</h2><h3 id=\"生成数据集\"><a href=\"#生成数据集\" class=\"headerlink\" title=\"生成数据集\"></a>生成数据集</h3><h4 id=\"移除类型\"><a href=\"#移除类型\" class=\"headerlink\" title=\"移除类型\"></a>移除类型</h4><p>&emsp;&emsp;删除一个区域，并选用某一背景区域的噪声或色彩去采样填补这一区域。</p>\n<h4 id=\"拼接类型\"><a href=\"#拼接类型\" class=\"headerlink\" title=\"拼接类型\"></a>拼接类型</h4><p>&emsp;&emsp;从前景图像中选取一小部分黏贴到任意位置，该区域要么用JPEG重新压缩，要么用锐化过滤器处理。</p>\n<h4 id=\"修整类型\"><a href=\"#修整类型\" class=\"headerlink\" title=\"修整类型\"></a>修整类型</h4><p>&emsp;&emsp;随机对一块区域使用高斯模糊。  </p>\n<p>&emsp;</p>\n<p>最终生成的图像有蛋白质印记法与显微镜观测两种类型</p>\n<h3 id=\"实验配置\"><a href=\"#实验配置\" class=\"headerlink\" title=\"实验配置\"></a>实验配置</h3><ul>\n<li>利用离散余弦变换(DCT)将残差图像上的小块变换到频域，得到了较好的效果</li>\n<li>使用由scikit-learn提供的支持向量机离群点检测器，其核函数使用径向基函数</li>\n<li>优化公差设置为0:01;(训练误差分数的上界和支持向量分数的下界)设为0.1</li>\n<li>不同参数的设置会较大影响特征提取的速度。</li>\n<li>使用的分类器是一个简单的多层结构感知器神经网络。对于蛋白质标记模型，我们使用四层网络，每层200个unit;对于显微模型，我们使用类似的网络，每层300个unit。最后一层应用Softmax回归得到分类结果。</li>\n</ul>\n<p>&emsp;</p>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>&emsp;&emsp;在使用的是patch级别的准确性，AUC分数和F1分数的评判下,总的来说，该论文方法在不同类型的操作之间的性能更一致，这使它在实践中更可靠。</p>\n<p>&emsp;</p>\n<h2 id=\"研究中的不足\"><a href=\"#研究中的不足\" class=\"headerlink\" title=\"研究中的不足\"></a>研究中的不足</h2><ul>\n<li>数据集还是过小，但相信随着研究深入会逐渐扩充</li>\n<li>只基于噪声的方法会受到限制，例如一些图像篡改不会影响到噪声。如果一个人已经了解了自动检测的原理，他可以有意避开噪声不一致性</li>\n</ul>\n<p>&emsp;&emsp;最终作者希望这种算法的灵活性可以帮助其顺利迁移到更多其他领域。</p>\n","site":{"data":{}},"length":3204,"excerpt":"","more":"<h1 id=\"Scientific-Image-Tampering-Detection-Based-On-Noise-Inconsistencies-A-Method-And-Datasets\"><a href=\"#Scientific-Image-Tampering-Detection-Based-On-Noise-Inconsistencies-A-Method-And-Datasets\" class=\"headerlink\" title=\"Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets\"></a>Scientific Image Tampering Detection Based On Noise Inconsistencies: A Method And Datasets</h1><h2 id=\"主要背景\"><a href=\"#主要背景\" class=\"headerlink\" title=\"主要背景\"></a>主要背景</h2><p>&emsp;&emsp;由于数字图像使用的日渐频繁以及技术的日趋进步，科学图像造假的情况愈发严重。尽管可以用已有的检测技术直接运用在科学图像上，但是仍需要发展适配于该领域的算法，因为该领域有着独特的模式，格式与解决方式。同时，科技论文造假的数据库的建设也应当与算法的进步同步进行。<br>&emsp;&emsp;随着愈来愈多的造假图片进入了科学界，Bik在短时间内就有相当数量的发现，这也说明了通过评审去发现造假图片相当的困难。</p>\n<h2 id=\"论文工作简要概述\"><a href=\"#论文工作简要概述\" class=\"headerlink\" title=\"论文工作简要概述\"></a>论文工作简要概述</h2><p>&emsp;&emsp;过去种种研究篡改图像的算法在面对不同的科学条件下常常会失效，本论文提出的基于噪声矛盾的算法可适宜于很多不同的科学领域。实验结果证明本方法可以健壮地检测各种场景下的图像操纵，并且表现超过了现存地同类型算法。该方法有望可以为检测嫌疑图像成为系统性步骤做出贡献。</p>\n<h2 id=\"为何选择基于噪声矛盾算法\"><a href=\"#为何选择基于噪声矛盾算法\" class=\"headerlink\" title=\"为何选择基于噪声矛盾算法\"></a>为何选择基于噪声矛盾算法</h2><p>&emsp;&emsp;科学研究对图像处理已经相当宽容了，包括调整大小，对比度调整，锐化，白平衡都被认为是合理的预处理。而改变了上下文含义的行为则当然不被允许，如复制粘贴，切割移除等。对于专家而言，发现导致上下文语意不同的图像比较容易，而一些造假学者利用了人类很难去辨别噪声模式这一弱点。因此本文因此提出了一种基于发现噪声不一致性的科学图像篡改检测方法。</p>\n<h2 id=\"算法特点\"><a href=\"#算法特点\" class=\"headerlink\" title=\"算法特点\"></a>算法特点</h2><ul>\n<li>基于监督学习，可以从已有的数据集与新实例中学习</li>\n<li>它适用于不同的分辨率和来自不同设备的图像</li>\n<li>不局限于某一种图像格式</li>\n<li>能够产生良好的预测以及一个小数据集</li>\n<li>具有灵活性，可以针对不同科学场景进行参数调整</li>\n</ul>\n<h2 id=\"算法思路\"><a href=\"#算法思路\" class=\"headerlink\" title=\"算法思路\"></a>算法思路</h2><p>&emsp;&emsp;本算法运用了几种异构特征提取器，刚开始，一个输入图像会经过几种残差图像生成器，每种残差图像会有他们自己的特征提取器（可能会基于不同配置的特征提取方案），这种特征在后处理后会被送入分类器。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_1.PNG\" alt><br>&emsp;&emsp;特征提取方法大大减少了维数，减少了对训练数据量需求,可以在后端使用轻量级分类器，如逻辑回归或支持向量机。生成残差图像的方法数量与特征提取地参数增加了该方法的灵活性，并且不像神经网络参数调节那样地模糊，对于人类可以方便地手动调节。</p>\n<h2 id=\"残差图片生成器\"><a href=\"#残差图片生成器\" class=\"headerlink\" title=\"残差图片生成器\"></a>残差图片生成器</h2><h3 id=\"Steganalytic-Filters\"><a href=\"#Steganalytic-Filters\" class=\"headerlink\" title=\"Steganalytic Filters\"></a>Steganalytic Filters</h3><p>&emsp;&emsp;Steganalytic Filters是从速记式加密技术处借鉴而来，将隐写术中嵌入数据地行为类推到图像操作。选择高通的滤波器，丢弃关于图像的内容，尽可能地强调噪音模式。</p>\n<h3 id=\"Error-Level-Analysis-ELA\"><a href=\"#Error-Level-Analysis-ELA\" class=\"headerlink\" title=\"Error Level Analysis (ELA)\"></a>Error Level Analysis (ELA)</h3><p>&emsp;&emsp;该算法地思想是基于在JPEG压缩时引入的错误是非线性的，如果图像中的一部分具有与图像剩余部分不一致的JPEG质量因子，那么在压缩后可以与对应的默认质量因子平均的图片进行比较，比较其差异。</p>\n<h3 id=\"Median-Filtering-Residual\"><a href=\"#Median-Filtering-Residual\" class=\"headerlink\" title=\"Median Filtering Residual\"></a>Median Filtering Residual</h3><p>&emsp;&emsp;中值滤波可以抑制图像噪声，篡改的部分中值滤波后会表现出不同的噪声模式。残差图像是原始图像与中值滤波后的图像的差。</p>\n<h3 id=\"Wavelet-Denoising-Residual\"><a href=\"#Wavelet-Denoising-Residual\" class=\"headerlink\" title=\"Wavelet Denoising Residual\"></a>Wavelet Denoising Residual</h3><p>&emsp;&emsp;小波去噪是一种在小波域内对图像进行去噪的方法，它基于小波域去噪来消除图像中的噪声。该算法运用方法与前一种中值滤波法类似。</p>\n<p>&emsp;</p>\n<p>&emsp;&emsp;示例中的残差图像算法在论文的例子中都有效果，但这并不是常态，真实情况往往需要几种算法结合起来分析。</p>\n<h2 id=\"特征提取\"><a href=\"#特征提取\" class=\"headerlink\" title=\"特征提取\"></a>特征提取</h2><p>&emsp;&emsp;在该论文中特征提取是基于patch而不是基于像素点，这减少了计算规模并丰富了每个最小单元内的统计信息量，patch size决定后会生成对应的特征向量v。</p>\n<h3 id=\"Patch-Reinterpretation\"><a href=\"#Patch-Reinterpretation\" class=\"headerlink\" title=\"Patch Reinterpretation\"></a>Patch Reinterpretation</h3><p>&emsp;&emsp;残差降低了图像数据的复杂性，但残差图像仍然具有与原始图像相同的维数。<br>&emsp;&emsp;为了进一步压缩数据进行分类，我们提出了一种新的图像篡改检测的特征提取方法。直观地说，一个图像区域被认为是被篡改的，不是因为它本身是唯一的，而是因为它与图像的其他部分不同。因此，一个理想的特征设计应该包含足够的全局信息。我们通过使用图像的其余部分重新解释图像区域来添加全局信息。<br>&emsp;&emsp;首先对于大小为（h;w）的图像会被分割为大小为（m;n）的图像，如果不可正好分割，就向下取最近整数，由此大小为（h;w）的图像就被成为了一个patch矩阵。然后将patch矩阵分割成大小为(s;t)，其中每个单元包含一定数量的patch。<br><img src=\"https://bwtpicturehouse.oss-cn-shanghai.aliyuncs.com/img/Figure_2.PNG\" alt></p>\n<p>&emsp;&emsp;对于网格中的每个细胞，我们都安装了一个异常值检测器，它能够告诉新样本成为异常值的可能性。给定一个p，它可以被向量v重新解释,  </p>\n<script type=\"math/tex; mode=display\">v = (l_{11}(p), l_{12}(p),l_{13}(p),...,l_{1t}(p)\\\\\n    \\qquad l_{21}(p), l_{22}(p),l_{23}(p),...,l_{2t}(p) \\\\\n     \\qquad l_{31}(p), l_{32}(p),l_{33}(p),...,l_{1t}(p)\\\\\n     \\qquad...\\\\\n     \\qquad l_{s1}(p), l_{s2}(p),l_{s3}(p),... ,l_{st}(p)).</script><p>&emsp;&emsp;由于被篡改区域的残馀形态不同，且其污染斑块集中在其中一个cell内，<br>因此该cell的离群点检测器与其他cell相比具有不同的判定边界。<br>&emsp;&emsp;Eg.对于真实的patch pa,除了l23(pa)外别的离散概率都会较低；而对于伪造的patch pt,除了l23(pt)外别的离散概率都会较高。<br>&emsp;&emsp;在实际应用中，我们使用了v的直方图(用vh表示)，它不仅在摘要统计，空间中对结构进行编码，而且保留了位置信息。  </p>\n<p>&emsp;</p>\n<h3 id=\"Feature-Design\"><a href=\"#Feature-Design\" class=\"headerlink\" title=\"Feature Design\"></a>Feature Design</h3><ul>\n<li>vh:Patch Reinterpretation的直方图</li>\n<li>距离信息:patch与它邻居的欧式距离</li>\n<li>全局信息:patch与全图的信息差异，patch的附加全局信息是由重新解释和聚类中心之间的欧氏距离以及中心的相应权重给出的。  </li>\n</ul>\n<p>&emsp;</p>\n<h2 id=\"实验\"><a href=\"#实验\" class=\"headerlink\" title=\"实验\"></a>实验</h2><h3 id=\"生成数据集\"><a href=\"#生成数据集\" class=\"headerlink\" title=\"生成数据集\"></a>生成数据集</h3><h4 id=\"移除类型\"><a href=\"#移除类型\" class=\"headerlink\" title=\"移除类型\"></a>移除类型</h4><p>&emsp;&emsp;删除一个区域，并选用某一背景区域的噪声或色彩去采样填补这一区域。</p>\n<h4 id=\"拼接类型\"><a href=\"#拼接类型\" class=\"headerlink\" title=\"拼接类型\"></a>拼接类型</h4><p>&emsp;&emsp;从前景图像中选取一小部分黏贴到任意位置，该区域要么用JPEG重新压缩，要么用锐化过滤器处理。</p>\n<h4 id=\"修整类型\"><a href=\"#修整类型\" class=\"headerlink\" title=\"修整类型\"></a>修整类型</h4><p>&emsp;&emsp;随机对一块区域使用高斯模糊。  </p>\n<p>&emsp;</p>\n<p>最终生成的图像有蛋白质印记法与显微镜观测两种类型</p>\n<h3 id=\"实验配置\"><a href=\"#实验配置\" class=\"headerlink\" title=\"实验配置\"></a>实验配置</h3><ul>\n<li>利用离散余弦变换(DCT)将残差图像上的小块变换到频域，得到了较好的效果</li>\n<li>使用由scikit-learn提供的支持向量机离群点检测器，其核函数使用径向基函数</li>\n<li>优化公差设置为0:01;(训练误差分数的上界和支持向量分数的下界)设为0.1</li>\n<li>不同参数的设置会较大影响特征提取的速度。</li>\n<li>使用的分类器是一个简单的多层结构感知器神经网络。对于蛋白质标记模型，我们使用四层网络，每层200个unit;对于显微模型，我们使用类似的网络，每层300个unit。最后一层应用Softmax回归得到分类结果。</li>\n</ul>\n<p>&emsp;</p>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>&emsp;&emsp;在使用的是patch级别的准确性，AUC分数和F1分数的评判下,总的来说，该论文方法在不同类型的操作之间的性能更一致，这使它在实践中更可靠。</p>\n<p>&emsp;</p>\n<h2 id=\"研究中的不足\"><a href=\"#研究中的不足\" class=\"headerlink\" title=\"研究中的不足\"></a>研究中的不足</h2><ul>\n<li>数据集还是过小，但相信随着研究深入会逐渐扩充</li>\n<li>只基于噪声的方法会受到限制，例如一些图像篡改不会影响到噪声。如果一个人已经了解了自动检测的原理，他可以有意避开噪声不一致性</li>\n</ul>\n<p>&emsp;&emsp;最终作者希望这种算法的灵活性可以帮助其顺利迁移到更多其他领域。</p>\n"},{"title":"敏捷生活宣言","date":"2020-05-21T16:32:34.000Z","top":1000,"_content":"# Mannifesto for Agile Living Style\n## ——每日三省吾身\n敏捷生活精神欢迎变化、提倡定期反思、追求可持续；主张面对面沟通、崇尚简单，有助于长期保持乐观高效的生活状态。\n\n我们最重要的目标，是通过持续不断地尽早调整行为习惯使自己对生活满意。\n\nOur highest priority is to satisfy ourselves through early and continuous change of living habits.\n\n欣然面对生活中或好或坏的变化，即使在低谷期也一样。\n\nWelcome changes in life, even when we are under bad mood. No matter whether changes are \"good\" or not.\n\n经常性地反思如何能够优化生活，并依此调整自身的行为习惯。相隔几星期或一两个月，倾向于采取较短的周期。\n\nReflect on how to better life frequently and adjust habits accordingly from a couple of weeks to several months , with a preference to a shorter timescale.\n\n激发自己的斗志，给自己创造需要的环境，并信任自己，从而达成目标。\n\nMake ourselves motivated, give ourselves environment we need, and trust ourselves to achieve goals.\n\n不论何时，面对面的交谈是最富有效果和效率的信息传递方式。\n\nThe most efficient and effective method of of conveying information is face-to-face conversation.\n\n可见的实物是进度的首要度量标准。\n\nVisible objects are the primary measure of progress.\n\n敏捷生活倡导可持续生活。敏捷生活者应该能够长期保持稳定的生活。\n\nAgile living style promotes sustainable living style. An \"agile liver\" should be able to maintain a constant and stable living style.\n\n不断地关注优秀的个体和技能能够增强敏捷生活的能力。\n\nContinuous attention to excellent individuals and techniques enhances agility.\n\n以简洁为本，它是极力减少不必要工作的艺术。\n\nSimplicity is essential because it's an art of minimizing unnecessary work.\n\n最好的生活方式来源于自我管理。\n\nThe best life style comes from self-organizing individuals.\n\n保持敏捷生活的重点在于使得自己到底每一个决策都是基于敏捷的价值和原则的。\n\nThe key idea of living agilely is to make each decision based on the principles and values described above.\n","source":"_posts/敏捷生活宣言.md","raw":"---\ntitle: 敏捷生活宣言\ndate: 2020-05-22 00:32:34\ntags:\n- 自我提升\n- 敏捷生活\ncategories: 生活方式\ntop: 1000\n---\n# Mannifesto for Agile Living Style\n## ——每日三省吾身\n敏捷生活精神欢迎变化、提倡定期反思、追求可持续；主张面对面沟通、崇尚简单，有助于长期保持乐观高效的生活状态。\n\n我们最重要的目标，是通过持续不断地尽早调整行为习惯使自己对生活满意。\n\nOur highest priority is to satisfy ourselves through early and continuous change of living habits.\n\n欣然面对生活中或好或坏的变化，即使在低谷期也一样。\n\nWelcome changes in life, even when we are under bad mood. No matter whether changes are \"good\" or not.\n\n经常性地反思如何能够优化生活，并依此调整自身的行为习惯。相隔几星期或一两个月，倾向于采取较短的周期。\n\nReflect on how to better life frequently and adjust habits accordingly from a couple of weeks to several months , with a preference to a shorter timescale.\n\n激发自己的斗志，给自己创造需要的环境，并信任自己，从而达成目标。\n\nMake ourselves motivated, give ourselves environment we need, and trust ourselves to achieve goals.\n\n不论何时，面对面的交谈是最富有效果和效率的信息传递方式。\n\nThe most efficient and effective method of of conveying information is face-to-face conversation.\n\n可见的实物是进度的首要度量标准。\n\nVisible objects are the primary measure of progress.\n\n敏捷生活倡导可持续生活。敏捷生活者应该能够长期保持稳定的生活。\n\nAgile living style promotes sustainable living style. An \"agile liver\" should be able to maintain a constant and stable living style.\n\n不断地关注优秀的个体和技能能够增强敏捷生活的能力。\n\nContinuous attention to excellent individuals and techniques enhances agility.\n\n以简洁为本，它是极力减少不必要工作的艺术。\n\nSimplicity is essential because it's an art of minimizing unnecessary work.\n\n最好的生活方式来源于自我管理。\n\nThe best life style comes from self-organizing individuals.\n\n保持敏捷生活的重点在于使得自己到底每一个决策都是基于敏捷的价值和原则的。\n\nThe key idea of living agilely is to make each decision based on the principles and values described above.\n","slug":"敏捷生活宣言","published":1,"updated":"2020-05-23T12:48:49.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jrj000qiwvz3fe8e98o","content":"<h1 id=\"Mannifesto-for-Agile-Living-Style\"><a href=\"#Mannifesto-for-Agile-Living-Style\" class=\"headerlink\" title=\"Mannifesto for Agile Living Style\"></a>Mannifesto for Agile Living Style</h1><h2 id=\"——每日三省吾身\"><a href=\"#——每日三省吾身\" class=\"headerlink\" title=\"——每日三省吾身\"></a>——每日三省吾身</h2><p>敏捷生活精神欢迎变化、提倡定期反思、追求可持续；主张面对面沟通、崇尚简单，有助于长期保持乐观高效的生活状态。</p>\n<p>我们最重要的目标，是通过持续不断地尽早调整行为习惯使自己对生活满意。</p>\n<p>Our highest priority is to satisfy ourselves through early and continuous change of living habits.</p>\n<p>欣然面对生活中或好或坏的变化，即使在低谷期也一样。</p>\n<p>Welcome changes in life, even when we are under bad mood. No matter whether changes are “good” or not.</p>\n<p>经常性地反思如何能够优化生活，并依此调整自身的行为习惯。相隔几星期或一两个月，倾向于采取较短的周期。</p>\n<p>Reflect on how to better life frequently and adjust habits accordingly from a couple of weeks to several months , with a preference to a shorter timescale.</p>\n<p>激发自己的斗志，给自己创造需要的环境，并信任自己，从而达成目标。</p>\n<p>Make ourselves motivated, give ourselves environment we need, and trust ourselves to achieve goals.</p>\n<p>不论何时，面对面的交谈是最富有效果和效率的信息传递方式。</p>\n<p>The most efficient and effective method of of conveying information is face-to-face conversation.</p>\n<p>可见的实物是进度的首要度量标准。</p>\n<p>Visible objects are the primary measure of progress.</p>\n<p>敏捷生活倡导可持续生活。敏捷生活者应该能够长期保持稳定的生活。</p>\n<p>Agile living style promotes sustainable living style. An “agile liver” should be able to maintain a constant and stable living style.</p>\n<p>不断地关注优秀的个体和技能能够增强敏捷生活的能力。</p>\n<p>Continuous attention to excellent individuals and techniques enhances agility.</p>\n<p>以简洁为本，它是极力减少不必要工作的艺术。</p>\n<p>Simplicity is essential because it’s an art of minimizing unnecessary work.</p>\n<p>最好的生活方式来源于自我管理。</p>\n<p>The best life style comes from self-organizing individuals.</p>\n<p>保持敏捷生活的重点在于使得自己到底每一个决策都是基于敏捷的价值和原则的。</p>\n<p>The key idea of living agilely is to make each decision based on the principles and values described above.</p>\n","site":{"data":{}},"length":1306,"excerpt":"","more":"<h1 id=\"Mannifesto-for-Agile-Living-Style\"><a href=\"#Mannifesto-for-Agile-Living-Style\" class=\"headerlink\" title=\"Mannifesto for Agile Living Style\"></a>Mannifesto for Agile Living Style</h1><h2 id=\"——每日三省吾身\"><a href=\"#——每日三省吾身\" class=\"headerlink\" title=\"——每日三省吾身\"></a>——每日三省吾身</h2><p>敏捷生活精神欢迎变化、提倡定期反思、追求可持续；主张面对面沟通、崇尚简单，有助于长期保持乐观高效的生活状态。</p>\n<p>我们最重要的目标，是通过持续不断地尽早调整行为习惯使自己对生活满意。</p>\n<p>Our highest priority is to satisfy ourselves through early and continuous change of living habits.</p>\n<p>欣然面对生活中或好或坏的变化，即使在低谷期也一样。</p>\n<p>Welcome changes in life, even when we are under bad mood. No matter whether changes are “good” or not.</p>\n<p>经常性地反思如何能够优化生活，并依此调整自身的行为习惯。相隔几星期或一两个月，倾向于采取较短的周期。</p>\n<p>Reflect on how to better life frequently and adjust habits accordingly from a couple of weeks to several months , with a preference to a shorter timescale.</p>\n<p>激发自己的斗志，给自己创造需要的环境，并信任自己，从而达成目标。</p>\n<p>Make ourselves motivated, give ourselves environment we need, and trust ourselves to achieve goals.</p>\n<p>不论何时，面对面的交谈是最富有效果和效率的信息传递方式。</p>\n<p>The most efficient and effective method of of conveying information is face-to-face conversation.</p>\n<p>可见的实物是进度的首要度量标准。</p>\n<p>Visible objects are the primary measure of progress.</p>\n<p>敏捷生活倡导可持续生活。敏捷生活者应该能够长期保持稳定的生活。</p>\n<p>Agile living style promotes sustainable living style. An “agile liver” should be able to maintain a constant and stable living style.</p>\n<p>不断地关注优秀的个体和技能能够增强敏捷生活的能力。</p>\n<p>Continuous attention to excellent individuals and techniques enhances agility.</p>\n<p>以简洁为本，它是极力减少不必要工作的艺术。</p>\n<p>Simplicity is essential because it’s an art of minimizing unnecessary work.</p>\n<p>最好的生活方式来源于自我管理。</p>\n<p>The best life style comes from self-organizing individuals.</p>\n<p>保持敏捷生活的重点在于使得自己到底每一个决策都是基于敏捷的价值和原则的。</p>\n<p>The key idea of living agilely is to make each decision based on the principles and values described above.</p>\n"},{"title":"hexo 常用命令小记","top":50,"copyright":true,"_content":"# hexo常用命令小记\n&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。\n\n&emsp;\n\n## 新建一篇博客文章\n&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用`hexo new`命令来创建新文章。  \n`hexo new \"hexo常用命令小记\" #新建文章`  \n此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！\n\n&emsp;\n\n## 给文章添加分类与标签\n&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性\n```\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\n```\n&emsp;\n\n## 启动本地服务器，本地测试\n`hexo s`  \n在本地`http://localhost:4000`上可以预览文章  \n如图所示：\n![](catch.jpg)\n\n&emsp; \n## 正式发布新建的博客文章 \n&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:  \n`hexo generate # 生成更改`  \n`hexo deploy   # 将生成的更改部署到github上`  \n可以在gitpage上看到自己的这篇博客啦！\n\n","source":"_posts/hexo-常用命令小记.md","raw":"---\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\ntop: 50\ncopyright: true\n---\n# hexo常用命令小记\n&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。\n\n&emsp;\n\n## 新建一篇博客文章\n&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用`hexo new`命令来创建新文章。  \n`hexo new \"hexo常用命令小记\" #新建文章`  \n此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！\n\n&emsp;\n\n## 给文章添加分类与标签\n&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性\n```\ntitle: hexo 常用命令小记\ntags:\n- 博客\n- hexo\ncategories: web前端\n```\n&emsp;\n\n## 启动本地服务器，本地测试\n`hexo s`  \n在本地`http://localhost:4000`上可以预览文章  \n如图所示：\n![](catch.jpg)\n\n&emsp; \n## 正式发布新建的博客文章 \n&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:  \n`hexo generate # 生成更改`  \n`hexo deploy   # 将生成的更改部署到github上`  \n可以在gitpage上看到自己的这篇博客啦！\n\n","slug":"hexo-常用命令小记","published":1,"date":"2020-06-02T04:11:51.831Z","updated":"2020-05-21T03:27:37.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckc4n2jrk000siwvz9h5g0u08","content":"<h1 id=\"hexo常用命令小记\"><a href=\"#hexo常用命令小记\" class=\"headerlink\" title=\"hexo常用命令小记\"></a>hexo常用命令小记</h1><p>&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。</p>\n<p>&emsp;</p>\n<h2 id=\"新建一篇博客文章\"><a href=\"#新建一篇博客文章\" class=\"headerlink\" title=\"新建一篇博客文章\"></a>新建一篇博客文章</h2><p>&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用<code>hexo new</code>命令来创建新文章。<br><code>hexo new &quot;hexo常用命令小记&quot; #新建文章</code><br>此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！</p>\n<p>&emsp;</p>\n<h2 id=\"给文章添加分类与标签\"><a href=\"#给文章添加分类与标签\" class=\"headerlink\" title=\"给文章添加分类与标签\"></a>给文章添加分类与标签</h2><p>&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo 常用命令小记</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 博客</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">categories: web前端</span><br></pre></td></tr></table></figure><br>&emsp;</p>\n<h2 id=\"启动本地服务器，本地测试\"><a href=\"#启动本地服务器，本地测试\" class=\"headerlink\" title=\"启动本地服务器，本地测试\"></a>启动本地服务器，本地测试</h2><p><code>hexo s</code><br>在本地<code>http://localhost:4000</code>上可以预览文章<br>如图所示：<br><img src=\"/.io//catch.jpg\" alt></p>\n<p>&emsp; </p>\n<h2 id=\"正式发布新建的博客文章\"><a href=\"#正式发布新建的博客文章\" class=\"headerlink\" title=\"正式发布新建的博客文章\"></a>正式发布新建的博客文章</h2><p>&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:<br><code>hexo generate # 生成更改</code><br><code>hexo deploy   # 将生成的更改部署到github上</code><br>可以在gitpage上看到自己的这篇博客啦！</p>\n","site":{"data":{}},"length":610,"excerpt":"","more":"<h1 id=\"hexo常用命令小记\"><a href=\"#hexo常用命令小记\" class=\"headerlink\" title=\"hexo常用命令小记\"></a>hexo常用命令小记</h1><p>&emsp;&emsp;最近受到社会的毒打，我决定搭建一个属于自己的技术博客，好让自己对学到的知识做到温故知新，不要再出现复试里的尴尬场面了😳所以接下来这篇是我的处女作(惭愧)，介绍一下常用的hexo命令作为小抄。</p>\n<p>&emsp;</p>\n<h2 id=\"新建一篇博客文章\"><a href=\"#新建一篇博客文章\" class=\"headerlink\" title=\"新建一篇博客文章\"></a>新建一篇博客文章</h2><p>&emsp;&emsp;进入你的博客目录，在路径/source/_posts文件夹下右键选择Git Bash Here进入命令窗口，利用<code>hexo new</code>命令来创建新文章。<br><code>hexo new &quot;hexo常用命令小记&quot; #新建文章</code><br>此时，你会发现在/source/_posts文件夹里有了 hexoc常用命令小记.md 这个文件,用markdown语法编辑它吧！</p>\n<p>&emsp;</p>\n<h2 id=\"给文章添加分类与标签\"><a href=\"#给文章添加分类与标签\" class=\"headerlink\" title=\"给文章添加分类与标签\"></a>给文章添加分类与标签</h2><p>&emsp;&emsp;在 常用命令小记.md中可设置tags和categories属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo 常用命令小记</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 博客</span><br><span class=\"line\">- hexo</span><br><span class=\"line\">categories: web前端</span><br></pre></td></tr></table></figure><br>&emsp;</p>\n<h2 id=\"启动本地服务器，本地测试\"><a href=\"#启动本地服务器，本地测试\" class=\"headerlink\" title=\"启动本地服务器，本地测试\"></a>启动本地服务器，本地测试</h2><p><code>hexo s</code><br>在本地<code>http://localhost:4000</code>上可以预览文章<br>如图所示：<br><img src=\"/.io//catch.jpg\" alt></p>\n<p>&emsp; </p>\n<h2 id=\"正式发布新建的博客文章\"><a href=\"#正式发布新建的博客文章\" class=\"headerlink\" title=\"正式发布新建的博客文章\"></a>正式发布新建的博客文章</h2><p>&emsp;&emsp;在博客项目文件夹下再次运行Git Bash Here命令窗口，输入以下代码:<br><code>hexo generate # 生成更改</code><br><code>hexo deploy   # 将生成的更改部署到github上</code><br>可以在gitpage上看到自己的这篇博客啦！</p>\n"}],"PostAsset":[{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/GRU.png","slug":"GRU.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM.png","slug":"LSTM.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/SparsityProblems.png","slug":"SparsityProblems.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/RNN2.png","slug":"RNN2.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_drafts/hexo-常用命令小记/catch.PNG","slug":"catch.PNG","post":"ckc4n2jr30004iwvzfrpb1vp2","modified":0,"renderable":0},{"_id":"source/_posts/hexo-常用命令小记/catch.jpg","slug":"catch.jpg","post":"ckc4n2jrk000siwvz9h5g0u08","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/LSTM_2.png","slug":"LSTM_2.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/chainrule.png","slug":"chainrule.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/exploding_gradient.png","slug":"exploding_gradient.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping.png","slug":"gradient_clipping.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/gradient_clipping_pic.png","slug":"gradient_clipping_pic.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/language_task.png","slug":"language_task.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_gradient_intuition.PNG","slug":"vanishing_gradient_intuition.PNG","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/vanishing_problem.PNG","slug":"vanishing_problem.PNG","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-七-Vanishing-Gradient-and-Fancy-RNNs/why_vanishing_gradient.png","slug":"why_vanishing_gradient.png","post":"ckc4n2jr8000aiwvzdtf2hfgx","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/4-gram-model.png","slug":"4-gram-model.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/BackPropagation.png","slug":"BackPropagation.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/Ner.png","slug":"Ner.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/RNN1.png","slug":"RNN1.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/caluclate_gradient.png","slug":"caluclate_gradient.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/loss.png","slug":"loss.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/network.png","slug":"network.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/perplexity-困惑度.png","slug":"perplexity-困惑度.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/sentence.png","slug":"sentence.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0},{"_id":"source/_posts/CS224N笔记-六-Language-Modeling-And-RNN/storage_problems.png","slug":"storage_problems.png","post":"ckc4n2jrb000eiwvze2a7604s","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckc4n2jr30004iwvzfrpb1vp2","category_id":"ckc4n2jr50007iwvz19r0bay6","_id":"ckc4n2jrd000giwvzh24fgkvi"},{"post_id":"ckc4n2jr40006iwvz9x036j5u","category_id":"ckc4n2jra000ciwvzga0l9dix","_id":"ckc4n2jrh000niwvzb4zk0vg8"},{"post_id":"ckc4n2jre000jiwvzhlg43aud","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrl000tiwvz1udqcgun"},{"post_id":"ckc4n2jr60009iwvz2es3g7ky","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrm000wiwvz2ve5gm5d"},{"post_id":"ckc4n2jr8000aiwvzdtf2hfgx","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrn000ziwvzadzgfylw"},{"post_id":"ckc4n2jrk000siwvz9h5g0u08","category_id":"ckc4n2jr50007iwvz19r0bay6","_id":"ckc4n2jro0012iwvz8ea91np6"},{"post_id":"ckc4n2jr9000biwvzbt0wfjzt","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrp0015iwvz3mlp30w8"},{"post_id":"ckc4n2jrb000eiwvze2a7604s","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrq001aiwvz28ci2jqb"},{"post_id":"ckc4n2jrc000fiwvzbs323fnd","category_id":"ckc4n2jrd000hiwvz7as69jo6","_id":"ckc4n2jrr001diwvzcxr4huxo"},{"post_id":"ckc4n2jrg000liwvzef3ba543","category_id":"ckc4n2jrq0019iwvzb930ce2q","_id":"ckc4n2jrs001hiwvz2z0w8xt6"},{"post_id":"ckc4n2jrj000qiwvz3fe8e98o","category_id":"ckc4n2jrr001eiwvz297pd0br","_id":"ckc4n2jrt001kiwvz33j0151m"}],"PostTag":[{"post_id":"ckc4n2jr30004iwvzfrpb1vp2","tag_id":"ckc4n2jr60008iwvzd8nfdzs3","_id":"ckc4n2jre000kiwvzcmzlebjz"},{"post_id":"ckc4n2jr30004iwvzfrpb1vp2","tag_id":"ckc4n2jra000diwvz5sq34lv8","_id":"ckc4n2jrh000miwvz6mfw95t7"},{"post_id":"ckc4n2jr40006iwvz9x036j5u","tag_id":"ckc4n2jrd000iiwvzbafh9fpm","_id":"ckc4n2jrk000riwvz25qvawct"},{"post_id":"ckc4n2jr60009iwvz2es3g7ky","tag_id":"ckc4n2jrh000piwvzc3cfazbb","_id":"ckc4n2jrm000xiwvz4g4l7me1"},{"post_id":"ckc4n2jrk000siwvz9h5g0u08","tag_id":"ckc4n2jr60008iwvzd8nfdzs3","_id":"ckc4n2jrn0010iwvzdg6zh62m"},{"post_id":"ckc4n2jrk000siwvz9h5g0u08","tag_id":"ckc4n2jra000diwvz5sq34lv8","_id":"ckc4n2jro0013iwvz5h1wal9j"},{"post_id":"ckc4n2jr8000aiwvzdtf2hfgx","tag_id":"ckc4n2jrh000piwvzc3cfazbb","_id":"ckc4n2jrp0016iwvz178le31k"},{"post_id":"ckc4n2jr9000biwvzbt0wfjzt","tag_id":"ckc4n2jrh000piwvzc3cfazbb","_id":"ckc4n2jrp0018iwvzgwsfga43"},{"post_id":"ckc4n2jrb000eiwvze2a7604s","tag_id":"ckc4n2jrh000piwvzc3cfazbb","_id":"ckc4n2jrr001ciwvz6m7jcgp2"},{"post_id":"ckc4n2jrc000fiwvzbs323fnd","tag_id":"ckc4n2jrq001biwvzevah6i58","_id":"ckc4n2jrs001giwvz0ncw44t8"},{"post_id":"ckc4n2jre000jiwvzhlg43aud","tag_id":"ckc4n2jrh000piwvzc3cfazbb","_id":"ckc4n2jrt001jiwvzbwr780k7"},{"post_id":"ckc4n2jrg000liwvzef3ba543","tag_id":"ckc4n2jrs001iiwvzd0y96p6f","_id":"ckc4n2jrv001niwvz7q7mgf3n"},{"post_id":"ckc4n2jrg000liwvzef3ba543","tag_id":"ckc4n2jrt001liwvz6uhifbes","_id":"ckc4n2jrw001oiwvz5hmy2ld2"},{"post_id":"ckc4n2jrj000qiwvz3fe8e98o","tag_id":"ckc4n2jru001miwvzfuuh2whr","_id":"ckc4n2jry001qiwvz25sv87n5"},{"post_id":"ckc4n2jrj000qiwvz3fe8e98o","tag_id":"ckc4n2jrw001piwvzakqhdduv","_id":"ckc4n2jry001riwvz5uc22nof"}],"Tag":[{"name":"博客","_id":"ckc4n2jr60008iwvzd8nfdzs3"},{"name":"hexo","_id":"ckc4n2jra000diwvz5sq34lv8"},{"name":"线性代数","_id":"ckc4n2jrd000iiwvzbafh9fpm"},{"name":"nlp 机器学习","_id":"ckc4n2jrh000piwvzc3cfazbb"},{"name":"CS224N","_id":"ckc4n2jrq001biwvzevah6i58"},{"name":"科学图像篡改检测","_id":"ckc4n2jrs001iiwvzd0y96p6f"},{"name":"论文简述","_id":"ckc4n2jrt001liwvz6uhifbes"},{"name":"自我提升","_id":"ckc4n2jru001miwvzfuuh2whr"},{"name":"敏捷生活","_id":"ckc4n2jrw001piwvzakqhdduv"}]}}